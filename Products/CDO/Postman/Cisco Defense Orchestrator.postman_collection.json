{
	"info": {
		"_postman_id": "4884b45a-9b19-400c-acfd-80add861394e",
		"name": "Cisco Defense Orchestrator",
		"description": "# Getting started\n\n## Welcome to the CDO public API[​]()\n\nThe goal of our public API is to provide you with a simple and effective way to perform a lot of what you would normally be able to do in the CDO UI, but in code.\n\nTo use this API, you will need to know GraphQL. It is very easy to learn, and their [official guide]() provides a thorough, light read. We chose GraphQL because it is flexible, strongly typed, and auto-documenting.\n\nTo find the full schema documentation, simply go to the [GraphQL Playground](), and click on the `docs` tab on the right hand side of the page.\n\n---\n\n## Samples[​]()\n\nTo help you get started, we have prepared a bunch of [sample GraphQL queries and mutations]() that you can experiment with right away!\n\n##### IMPORTANT\n\nBefore running the samples, you must first provide your API token to the playground.  \nClick on `HTTP Headers` in the bottom left corner, and replace with your token. This will fix any errors being displayed, and should perform the query successfully.\n\nWhen you reload the `Samples` page, all of your changes, including the API token that you provided, will be reset. If you want a persistent playground session to work with, use the [empty playground]() . However, as a current limitation, do be warned that if you visit the `Samples` page again, your empty playground data will reset.\n\nSome of the queries will need modification before running them, so you don't end up with bogus data in your account. The required changes are mostly in mutation quries, where it is creating or updating data. Make sure you change any boilerplate, and ensure all the values being set are correct. (You can always delete incorrect data manually if you accidentally run the query before making these changes)\n\n---\n\n## Empty Playground[​]()\n\nFor your convenience, we are also providing a raw [empty playground]() with no preset settings. This means you will need to provide your API token by clicking `HTTP Headers` in the bottom left corner of the screen, and pasting this in (with the correct API token):\n\n```\n{\n  \"Authorization\": \"Bearer \"\n}\n\n ```\n\nCopy\n\nOnce you have done this, you can start writing queries! Have a look at the auto-generated `docs` tab on the right hand side of the playground to see the kind of queries you can write. The playground's intellisense should help too.\n\n---\n\n## Endpoints[​]()\n\n#### How do I decide what endpoint URL to use?[​]()\n\nWe have prepared this table to help you determine what endpoint URL you should hit when making API requests. This is the same URL you need to enter in the Playground.\n\n| Region | Endpoint you should use | Description |\n| --- | --- | --- |\n| US | [https://edge.us.cdo.cisco.com/api/public]() | Use if you normally access CDO from [www.defenseorchestrator.com]() |\n| EU | [https://edge.eu.cdo.cisco.com/api/public]() | Use if you normally access CDO from [www.defenseorchestrator.eu]() |\n| APJ | [https://edge.apj.cdo.cisco.com/api/public]() | Use if you normally access CDO from [www.apj.cdo.cisco.com]() |\n\n---\n\n## How do I start coding with the CDO Public API?[​]()\n\nWhile you are able use any workflow you want with the GraphQL API, here is, in our opinion, the best way to start programming in TypeScript:\n\nFirst, set up the [GraphQL code generator]()\n\nOnce you have followed the setup wizard, make sure your `codegen.yml` config has the correct authorization headers, something like this:\n\n```\nschema:\n  - https://edge..cdo.cisco.com/api/public:\n      headers:\n        Authorization: Bearer \n\n ```\n\nWe also recommend the [Apollo client library]() to help you write code to interface with our GraphQL API.\n\nDocumentation: [https://edge.us.cdo.cisco.com/api-explorer/docs/]()",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8695710",
		"_collection_link": "https://galactic-astronaut-430691.postman.co/workspace/Cisco-Security~ff5542bd-d893-4a19-ae32-6a56f151c6e7/collection/8695710-4884b45a-9b19-400c-acfd-80add861394e?action=share&source=collection_link&creator=8695710"
	},
	"item": [
		{
			"name": "Graph",
			"item": [
				{
					"name": "Query Device",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n  devices(limit: 50, sortField: NAME, deviceType: [FIREPOWER, ASA, FTD]) {\n    metadata {\n      count\n    }\n    items {\n      softwareVersion\n      name\n      uid\n      isModel\n      conflictDetectionState\n      ipv4\n      deviceType\n      serial\n      configurationStatus\n      interfaces\n      connectivityState\n      highAvailability\n      specificDevice {\n        namespace\n        ... on FtdSpecificDevice {\n          uid\n        }\n        ... on AsaSpecificDevice {\n          uid\n          type\n          vpnId\n        }\n        ... on MerakiSpecificDevice {\n          uid\n          type\n        }\n        ... on AwsSpecificDevice {\n          vpcId\n          region\n        }\n      }\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "https://edge.us.cdo.cisco.com/api/public",
							"protocol": "https",
							"host": [
								"edge",
								"us",
								"cdo",
								"cisco",
								"com"
							],
							"path": [
								"api",
								"public"
							]
						}
					},
					"response": []
				},
				{
					"name": "Query Object",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n  devices(limit: 50, sortField: NAME, deviceType: [FIREPOWER, ASA, FTD]) {\n    metadata {\n      count\n    }\n    items {\n      softwareVersion\n      name\n      uid\n      isModel\n      conflictDetectionState\n      ipv4\n      deviceType\n      serial\n      configurationStatus\n      interfaces\n      connectivityState\n      highAvailability\n      specificDevice {\n        namespace\n        ... on FtdSpecificDevice {\n          uid\n        }\n        ... on AsaSpecificDevice {\n          uid\n          type\n          vpnId\n        }\n        ... on MerakiSpecificDevice {\n          uid\n          type\n        }\n        ... on AwsSpecificDevice {\n          vpcId\n          region\n        }\n      }\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "https://edge.us.cdo.cisco.com/api/public",
							"protocol": "https",
							"host": [
								"edge",
								"us",
								"cdo",
								"cisco",
								"com"
							],
							"path": [
								"api",
								"public"
							]
						}
					},
					"response": []
				},
				{
					"name": "Query Changelog",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    changelog(\n      # deviceUid: [\"some-uid-1\", \"some-uid-2\"]\n      # searchTerm: \"some-search-term\"\n      sortField: LAST_UPDATED\n      sortOrder: ASC\n      changeStatus: [COMPLETED]\n      # user: [\"some-username\"]\n      dateRange: { start: 1593017544000 }\n    ) {\n      metadata {\n        count\n      }\n      items {\n        uid\n        deviceName\n        lastUpdated\n        lastUser\n        lastDescription\n        changeStatus\n        deviceUid\n  \n        events {\n          class\n          action\n          user\n          objectReference {\n            uid\n            type\n            namespace\n          }\n          details {\n            class\n            description\n            diff\n          }\n          eventDate\n          changeType\n        }\n      }\n    }\n  }",
								"variables": ""
							}
						},
						"url": {
							"raw": "https://edge.us.cdo.cisco.com/api/public",
							"protocol": "https",
							"host": [
								"edge",
								"us",
								"cdo",
								"cisco",
								"com"
							],
							"path": [
								"api",
								"public"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Network Group",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    createNetworkGroup(\n      baseInput: { name: \"some-device-name\", deviceType: ASA }\n      networkGroupInput: {\n        ipAddresses: [{ value: \"6.9.6.9\" }, { value: \"7.9.7.9\" }]\n        objectReferences: [\n          {\n            uid: \"<Enter the uid of another network group (or object) here>\"\n            name: \"<Enter the name of that Object here>\"\n            type: NETWORK_GROUP #or NETWORK_OBJECT depending on the type\n          }\n        ]\n      }\n    ) {\n      name\n      uid\n      details {\n        ... on NetworkDetailsIpEq {\n          value\n        }\n  \n        ... on NetworkDetailsIpRange {\n          start\n          end\n        }\n  \n        ... on NetworkGroupDetails {\n          items {\n            ... on ObjectReferenceDetails {\n              name\n              uid\n            }\n            ... on NetworkDetailsIpEq {\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n  ",
								"variables": ""
							}
						},
						"url": {
							"raw": "https://edge.us.cdo.cisco.com/api/public",
							"protocol": "https",
							"host": [
								"edge",
								"us",
								"cdo",
								"cisco",
								"com"
							],
							"path": [
								"api",
								"public"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Network Group",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    updateNetworkGroup(\n      baseInput: {\n        uid: \"<Enter uid of existing Object to update>\"\n        name: \"<Enter a name>\"\n        description: \"<Enter a description>\"\n      }\n      networkGroupInput: {\n        ipAddresses: [{ value: \"6.9.6.9\" }, { value: \"7.0.0.0\" }]\n        objectReferences: [\n          {\n            uid: \"<Enter the uid of another network group (or object) here>\"\n            name: \"<Enter the name of that Object here>\"\n            type: NETWORK_GROUP # or NETWORK_OBJECT\n          }\n        ]\n      }\n    ) {\n      name\n      uid\n      description\n      details {\n        ... on NetworkDetailsIpEq {\n          value\n        }\n        ... on NetworkDetailsIpRange {\n          start\n          end\n        }\n        ... on NetworkGroupDetails {\n          items {\n            ... on NetworkDetailsBase {\n              wildcardMask\n            }\n            ... on NetworkDetailsIpEq {\n              value\n            }\n            ... on ObjectReferenceDetails {\n              name\n              uid\n              type\n            }\n          }\n        }\n      }\n    }\n  }",
								"variables": ""
							}
						},
						"url": {
							"raw": "https://edge.us.cdo.cisco.com/api/public",
							"protocol": "https",
							"host": [
								"edge",
								"us",
								"cdo",
								"cisco",
								"com"
							],
							"path": [
								"api",
								"public"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Object",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    updateNetworkObject(\n      baseInput: { uid: \"<Enter the uid of the Object you want to update>\" }\n      ipAddressRangeInput: { start: \"6.9.6.9\", end: \"9.6.9.7\" }\n    ) {\n      name\n      uid\n      objectType\n      description\n      details {\n        ... on NetworkDetailsIpEq {\n          value\n        }\n        ... on NetworkDetailsIpRange {\n          start\n          end\n        }\n      }\n    }\n    createNetworkObject(\n      baseInput: { name: \"I <3 CDO\", deviceType: FTD }\n      ipAddressEqInput: { value: \"1.1.1.1\" }\n    ) {\n      name\n      uid\n      objectType\n      details {\n        ... on NetworkDetailsIpEq {\n          value\n        }\n  \n        # In this case, this fragment should not occur as we create it with ipAddressEqInput\n        ... on NetworkDetailsIpRange {\n          start\n          end\n        }\n      }\n    }\n  }",
								"variables": ""
							}
						},
						"url": {
							"raw": "https://edge.us.cdo.cisco.com/api/public",
							"protocol": "https",
							"host": [
								"edge",
								"us",
								"cdo",
								"cisco",
								"com"
							],
							"path": [
								"api",
								"public"
							]
						}
					},
					"response": []
				},
				{
					"name": "Query Tenant Settings",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    tenantSettings {\n      uid\n      enableChangeRequestTracking\n      lastUpdatedDate\n      preventCiscoSupportFromViewingTenant\n      autoDetectRuleSets\n      autoAcceptDeviceChanges\n      allowDeploymentScheduling\n    }\n  }",
								"variables": ""
							}
						},
						"url": {
							"raw": "https://edge.us.cdo.cisco.com/api/public",
							"protocol": "https",
							"host": [
								"edge",
								"us",
								"cdo",
								"cisco",
								"com"
							],
							"path": [
								"api",
								"public"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Tenant Settings",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    updateTenantSettings(\n      input: {\n        enableChangeRequestTracking: true\n        autoAcceptDeviceChanges: true\n        allowDeploymentScheduling: true\n        preventCiscoSupportFromViewingTenant: false\n      }\n    ) {\n      uid\n      enableChangeRequestTracking\n      lastUpdatedDate\n      preventCiscoSupportFromViewingTenant\n      autoDetectRuleSets\n      autoAcceptDeviceChanges\n      allowDeploymentScheduling\n    }\n  }",
								"variables": ""
							}
						},
						"url": {
							"raw": "https://edge.us.cdo.cisco.com/api/public",
							"protocol": "https",
							"host": [
								"edge",
								"us",
								"cdo",
								"cisco",
								"com"
							],
							"path": [
								"api",
								"public"
							]
						}
					},
					"response": []
				},
				{
					"name": "Query Change Requests",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n    activeChangeRequest\n    \n    changeRequests(\n      limit: 5\n      sortField: CREATED_DATE\n      sortOrder: ASC\n    ) {\n      metadata {\n        count\n      }\n      items {\n        uid\n        name\n        description\n        createdDate\n        lastUpdatedDate\n      }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "https://edge.us.cdo.cisco.com/api/public",
							"protocol": "https",
							"host": [
								"edge",
								"us",
								"cdo",
								"cisco",
								"com"
							],
							"path": [
								"api",
								"public"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Change Requests",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    createChangeRequest(\n      input: {\n        name: \"<Enter a name>\"\n        description: \"<Enter an optional description>\"\n      }\n    ) {\n      uid\n      description\n      name\n      createdDate\n      lastUpdatedDate\n    }\n    updateChangeRequest(\n      input: {\n        uid: \"<Enter uid of existing change request to update>\"\n        description: \"<Enter new description to give change request>\"\n      }\n    ) {\n      uid\n      description\n      name\n      createdDate\n      lastUpdatedDate\n    }\n  \n    deleteChangeRequest(uid: \"<Enter uid of existing change request to delete>\")\n    \n    clearActiveChangeRequest\n    \n    setActiveChangeRequest(name: \"<Enter name of change request to set as active>\")\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "https://edge.us.cdo.cisco.com/api/public",
							"protocol": "https",
							"host": [
								"edge",
								"us",
								"cdo",
								"cisco",
								"com"
							],
							"path": [
								"api",
								"public"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": ".well-known",
			"item": [
				{
					"name": "jwks.json",
					"item": [
						{
							"name": "Fetch JSON Web Key Set",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/.well-known/jwks.json",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										".well-known",
										"jwks.json"
									]
								},
								"description": "Retrieves the JSON Web Key Set (JWKS), which is a set of keys containing the public keys used to verify any JSON Web Token (JWT) issued by the Authorization Server and signed using the RS256 signing algorithm. Note: Verification of the token using a JSON Web Key does not guarantee validity due to the possibility of revocation."
							},
							"response": [
								{
									"name": "The JSON Web Key Set.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/.well-known/jwks.json",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												".well-known",
												"jwks.json"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"keys\": [\n    {\n      \"kty\": \"<string>\",\n      \"e\": \"<string>\",\n      \"use\": \"<string>\",\n      \"kid\": \"<string>\",\n      \"alg\": \"<string>\",\n      \"n\": \"<string>\"\n    },\n    {\n      \"kty\": \"<string>\",\n      \"e\": \"<string>\",\n      \"use\": \"<string>\",\n      \"kid\": \"<string>\",\n      \"alg\": \"<string>\",\n      \"n\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/.well-known/jwks.json",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												".well-known",
												"jwks.json"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "v1",
			"item": [
				{
					"name": "cdfmc",
					"item": [
						{
							"name": "**",
							"item": [
								{
									"name": "Proxy Request To Cloud-Delivered FMC",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/cdfmc/**",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cdfmc",
												"**"
											]
										},
										"description": "This endpoint proxies the request to the Cloud-Delivered FMC (cdFMC). Refer to the <a href=\"https://www.cisco.com/c/en/us/td/docs/security/firepower/730/Rapid-Release/API/CDO/cloud_delivered_firewall_management_center_rest_api_quick_start_guide/About_The_API_Explorer.html\">cdFMC API Explorer in CDO</a> for the list of available endpoints. You can append the relative API paths provided in the cdFMC API documentation to the `/v1/cdfmc` URL to make requests to the cdFMC in your CDO tenant. <b>Note:</b> These endpoints will return 404 if the CDO tenant does not have a cdFMC provisioned."
									},
									"response": [
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cdfmc/**",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cdfmc",
														"**"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "Entity not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cdfmc/**",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cdfmc",
														"**"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cdfmc/**",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cdfmc",
														"**"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								},
								{
									"name": "Proxy Request To Cloud-Delivered FMC",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/cdfmc/**",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cdfmc",
												"**"
											]
										},
										"description": "This endpoint proxies the request to the Cloud-Delivered FMC (cdFMC). Refer to the <a href=\"https://www.cisco.com/c/en/us/td/docs/security/firepower/730/Rapid-Release/API/CDO/cloud_delivered_firewall_management_center_rest_api_quick_start_guide/About_The_API_Explorer.html\">cdFMC API Explorer in CDO</a> for the list of available endpoints. You can append the relative API paths provided in the cdFMC API documentation to the `/v1/cdfmc` URL to make requests to the cdFMC in your CDO tenant. <b>Note:</b> These endpoints will return 404 if the CDO tenant does not have a cdFMC provisioned."
									},
									"response": [
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cdfmc/**",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cdfmc",
														"**"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "Entity not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cdfmc/**",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cdfmc",
														"**"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cdfmc/**",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cdfmc",
														"**"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								},
								{
									"name": "Proxy Request To Cloud-Delivered FMC",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/cdfmc/**",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cdfmc",
												"**"
											]
										},
										"description": "This endpoint proxies the request to the Cloud-Delivered FMC (cdFMC). Refer to the <a href=\"https://www.cisco.com/c/en/us/td/docs/security/firepower/730/Rapid-Release/API/CDO/cloud_delivered_firewall_management_center_rest_api_quick_start_guide/About_The_API_Explorer.html\">cdFMC API Explorer in CDO</a> for the list of available endpoints. You can append the relative API paths provided in the cdFMC API documentation to the `/v1/cdfmc` URL to make requests to the cdFMC in your CDO tenant. <b>Note:</b> These endpoints will return 404 if the CDO tenant does not have a cdFMC provisioned."
									},
									"response": [
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cdfmc/**",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cdfmc",
														"**"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "Entity not found.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cdfmc/**",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cdfmc",
														"**"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cdfmc/**",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cdfmc",
														"**"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								},
								{
									"name": "Proxy Request To Cloud-Delivered FMC",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/cdfmc/**",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cdfmc",
												"**"
											]
										},
										"description": "This endpoint proxies the request to the Cloud-Delivered FMC (cdFMC). Refer to the <a href=\"https://www.cisco.com/c/en/us/td/docs/security/firepower/730/Rapid-Release/API/CDO/cloud_delivered_firewall_management_center_rest_api_quick_start_guide/About_The_API_Explorer.html\">cdFMC API Explorer in CDO</a> for the list of available endpoints. You can append the relative API paths provided in the cdFMC API documentation to the `/v1/cdfmc` URL to make requests to the cdFMC in your CDO tenant. <b>Note:</b> These endpoints will return 404 if the CDO tenant does not have a cdFMC provisioned."
									},
									"response": [
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cdfmc/**",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cdfmc",
														"**"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "Entity not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cdfmc/**",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cdfmc",
														"**"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cdfmc/**",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cdfmc",
														"**"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								},
								{
									"name": "Proxy Request To Cloud-Delivered FMC",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/cdfmc/**",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cdfmc",
												"**"
											]
										},
										"description": "This endpoint proxies the request to the Cloud-Delivered FMC (cdFMC). Refer to the <a href=\"https://www.cisco.com/c/en/us/td/docs/security/firepower/730/Rapid-Release/API/CDO/cloud_delivered_firewall_management_center_rest_api_quick_start_guide/About_The_API_Explorer.html\">cdFMC API Explorer in CDO</a> for the list of available endpoints. You can append the relative API paths provided in the cdFMC API documentation to the `/v1/cdfmc` URL to make requests to the cdFMC in your CDO tenant. <b>Note:</b> These endpoints will return 404 if the CDO tenant does not have a cdFMC provisioned."
									},
									"response": [
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cdfmc/**",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cdfmc",
														"**"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "Entity not found.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cdfmc/**",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cdfmc",
														"**"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cdfmc/**",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cdfmc",
														"**"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "vpnsessions",
					"item": [
						{
							"name": "{deviceUid}",
							"item": [
								{
									"name": "terminate",
									"item": [
										{
											"name": "{userName}",
											"item": [
												{
													"name": "Terminate User's RA VPN Sessions",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/vpnsessions/:deviceUid/terminate/:userName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"vpnsessions",
																":deviceUid",
																"terminate",
																":userName"
															],
															"variable": [
																{
																	"key": "deviceUid",
																	"value": "<uuid>",
																	"description": "(Required) "
																},
																{
																	"key": "userName",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														},
														"description": "This is an asynchronous operation to terminate all of a user's RA VPN sessions on a device in the CDO tenant. This operation returns a link to a transaction object that can be used to monitor the progress of the operation."
													},
													"response": [
														{
															"name": "CDO Transaction object that can be used to track the progress of the termination operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/vpnsessions/:deviceUid/terminate/:userName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"vpnsessions",
																		":deviceUid",
																		"terminate",
																		":userName"
																	],
																	"variable": [
																		{
																			"key": "deviceUid"
																		},
																		{
																			"key": "userName"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
														},
														{
															"name": "Invalid input provided. Check the response for details.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/vpnsessions/:deviceUid/terminate/:userName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"vpnsessions",
																		":deviceUid",
																		"terminate",
																		":userName"
																	],
																	"variable": [
																		{
																			"key": "deviceUid"
																		},
																		{
																			"key": "userName"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "Request not authorized.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/vpnsessions/:deviceUid/terminate/:userName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"vpnsessions",
																		":deviceUid",
																		"terminate",
																		":userName"
																	],
																	"variable": [
																		{
																			"key": "deviceUid"
																		},
																		{
																			"key": "userName"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
														},
														{
															"name": "User does not have sufficient privileges to perform this operation.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/vpnsessions/:deviceUid/terminate/:userName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"vpnsessions",
																		":deviceUid",
																		"terminate",
																		":userName"
																	],
																	"variable": [
																		{
																			"key": "deviceUid"
																		},
																		{
																			"key": "userName"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "Method not allowed.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/vpnsessions/:deviceUid/terminate/:userName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"vpnsessions",
																		":deviceUid",
																		"terminate",
																		":userName"
																	],
																	"variable": [
																		{
																			"key": "deviceUid"
																		},
																		{
																			"key": "userName"
																		}
																	]
																}
															},
															"status": "Method Not Allowed",
															"code": 405,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "Internal server error.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/vpnsessions/:deviceUid/terminate/:userName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"vpnsessions",
																		":deviceUid",
																		"terminate",
																		":userName"
																	],
																	"variable": [
																		{
																			"key": "deviceUid"
																		},
																		{
																			"key": "userName"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "Terminate RA VPN Sessions",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/vpnsessions/:deviceUid/terminate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"vpnsessions",
														":deviceUid",
														"terminate"
													],
													"variable": [
														{
															"key": "deviceUid",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												},
												"description": "This is an asynchronous operation to terminate all RA VPN sessions on a device in the CDO tenant. This operation returns a link to a transaction object that can be used to monitor the progress of the operation."
											},
											"response": [
												{
													"name": "CDO Transaction object that can be used to track the progress of the termination operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/vpnsessions/:deviceUid/terminate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"vpnsessions",
																":deviceUid",
																"terminate"
															],
															"variable": [
																{
																	"key": "deviceUid"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/vpnsessions/:deviceUid/terminate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"vpnsessions",
																":deviceUid",
																"terminate"
															],
															"variable": [
																{
																	"key": "deviceUid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/vpnsessions/:deviceUid/terminate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"vpnsessions",
																":deviceUid",
																"terminate"
															],
															"variable": [
																{
																	"key": "deviceUid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/vpnsessions/:deviceUid/terminate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"vpnsessions",
																":deviceUid",
																"terminate"
															],
															"variable": [
																{
																	"key": "deviceUid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Method not allowed.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/vpnsessions/:deviceUid/terminate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"vpnsessions",
																":deviceUid",
																"terminate"
															],
															"variable": [
																{
																	"key": "deviceUid"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/vpnsessions/:deviceUid/terminate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"vpnsessions",
																":deviceUid",
																"terminate"
															],
															"variable": [
																{
																	"key": "deviceUid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "refresh",
							"item": [
								{
									"name": "Refresh RA VPN Sessions",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deviceUids\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/vpnsessions/refresh",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"vpnsessions",
												"refresh"
											]
										},
										"description": "This is an asynchronous operation to refresh RA VPN sessions for all devices in the CDO tenant."
									},
									"response": [
										{
											"name": "CDO Transaction object that can be used to track the progress of the refresh operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deviceUids\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/vpnsessions/refresh",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"vpnsessions",
														"refresh"
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deviceUids\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/vpnsessions/refresh",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"vpnsessions",
														"refresh"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deviceUids\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/vpnsessions/refresh",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"vpnsessions",
														"refresh"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deviceUids\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/vpnsessions/refresh",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"vpnsessions",
														"refresh"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Method not allowed.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deviceUids\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/vpnsessions/refresh",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"vpnsessions",
														"refresh"
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deviceUids\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/vpnsessions/refresh",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"vpnsessions",
														"refresh"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "{raVpnSessionUid}",
							"item": [
								{
									"name": "Get RA VPN Session",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/vpnsessions/:raVpnSessionUid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"vpnsessions",
												":raVpnSessionUid"
											],
											"variable": [
												{
													"key": "raVpnSessionUid",
													"value": "<uuid>",
													"description": "(Required) The unique identifier of the RA VPN session in CDO."
												}
											]
										},
										"description": "Get a RA VPN session by UID in the CDO tenant."
									},
									"response": [
										{
											"name": "RA VPN Session object",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/vpnsessions/:raVpnSessionUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"vpnsessions",
														":raVpnSessionUid"
													],
													"variable": [
														{
															"key": "raVpnSessionUid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"deviceUid\": \"<uuid>\",\n  \"uid\": \"<uuid>\",\n  \"username\": \"<string>\",\n  \"status\": \"ACTIVE\",\n  \"assignedIpV4\": \"<string>\",\n  \"assignedIpV6\": \"<string>\",\n  \"publicIp\": \"<string>\",\n  \"auditSessionId\": \"<string>\",\n  \"location\": {\n    \"city\": \"<string>\",\n    \"subdivision\": \"<string>\",\n    \"country\": \"<string>\"\n  },\n  \"os\": {\n    \"type\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"bytesTx\": \"<integer>\",\n  \"bytesRx\": \"<integer>\",\n  \"loginTime\": \"<dateTime>\",\n  \"lastActiveTime\": \"<dateTime>\"\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/vpnsessions/:raVpnSessionUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"vpnsessions",
														":raVpnSessionUid"
													],
													"variable": [
														{
															"key": "raVpnSessionUid"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/vpnsessions/:raVpnSessionUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"vpnsessions",
														":raVpnSessionUid"
													],
													"variable": [
														{
															"key": "raVpnSessionUid"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/vpnsessions/:raVpnSessionUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"vpnsessions",
														":raVpnSessionUid"
													],
													"variable": [
														{
															"key": "raVpnSessionUid"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Entity not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/vpnsessions/:raVpnSessionUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"vpnsessions",
														":raVpnSessionUid"
													],
													"variable": [
														{
															"key": "raVpnSessionUid"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Method not allowed.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/vpnsessions/:raVpnSessionUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"vpnsessions",
														":raVpnSessionUid"
													],
													"variable": [
														{
															"key": "raVpnSessionUid"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/vpnsessions/:raVpnSessionUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"vpnsessions",
														":raVpnSessionUid"
													],
													"variable": [
														{
															"key": "raVpnSessionUid"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get RA VPN Sessions",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/vpnsessions?limit=50&offset=0&q=<string>&sort=<string>&sort=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"vpnsessions"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "The number of results to retrieve."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
										},
										{
											"key": "q",
											"value": "<string>",
											"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
										},
										{
											"key": "sort",
											"value": "<string>",
											"description": "The fields to sort results by."
										},
										{
											"key": "sort",
											"value": "<string>",
											"description": "The fields to sort results by."
										}
									]
								},
								"description": "Get a list of RA VPN sessions."
							},
							"response": [
								{
									"name": "List of RA VPN Sessions",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/vpnsessions?limit=50&offset=0&q=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"vpnsessions"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<integer>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"items\": [\n    {\n      \"deviceUid\": \"<uuid>\",\n      \"uid\": \"<uuid>\",\n      \"username\": \"<string>\",\n      \"status\": \"TERMINATED\",\n      \"assignedIpV4\": \"<string>\",\n      \"assignedIpV6\": \"<string>\",\n      \"publicIp\": \"<string>\",\n      \"auditSessionId\": \"<string>\",\n      \"location\": {\n        \"city\": \"<string>\",\n        \"subdivision\": \"<string>\",\n        \"country\": \"<string>\"\n      },\n      \"os\": {\n        \"type\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"bytesTx\": \"<integer>\",\n      \"bytesRx\": \"<integer>\",\n      \"loginTime\": \"<dateTime>\",\n      \"lastActiveTime\": \"<dateTime>\"\n    },\n    {\n      \"deviceUid\": \"<uuid>\",\n      \"uid\": \"<uuid>\",\n      \"username\": \"<string>\",\n      \"status\": \"ACTIVE\",\n      \"assignedIpV4\": \"<string>\",\n      \"assignedIpV6\": \"<string>\",\n      \"publicIp\": \"<string>\",\n      \"auditSessionId\": \"<string>\",\n      \"location\": {\n        \"city\": \"<string>\",\n        \"subdivision\": \"<string>\",\n        \"country\": \"<string>\"\n      },\n      \"os\": {\n        \"type\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"bytesTx\": \"<integer>\",\n      \"bytesRx\": \"<integer>\",\n      \"loginTime\": \"<dateTime>\",\n      \"lastActiveTime\": \"<dateTime>\"\n    }\n  ]\n}"
								},
								{
									"name": "Invalid input provided. Check the response for details.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/vpnsessions?limit=50&offset=0&q=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"vpnsessions"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Request not authorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/vpnsessions?limit=50&offset=0&q=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"vpnsessions"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
								},
								{
									"name": "User does not have sufficient privileges to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/vpnsessions?limit=50&offset=0&q=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"vpnsessions"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Method not allowed.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/vpnsessions?limit=50&offset=0&q=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"vpnsessions"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/vpnsessions?limit=50&offset=0&q=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"vpnsessions"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "users",
					"item": [
						{
							"name": "{apiUserUid}",
							"item": [
								{
									"name": "apiToken",
									"item": [
										{
											"name": "revoke",
											"item": [
												{
													"name": "Revoke API-only User's Token",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/users/:apiUserUid/apiToken/revoke",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"users",
																":apiUserUid",
																"apiToken",
																"revoke"
															],
															"variable": [
																{
																	"key": "apiUserUid",
																	"value": "<uuid>",
																	"description": "(Required) The unique identifier of the API user in CDO."
																}
															]
														},
														"description": "Revoke API Token of API-only user. If the user ID provided is not that of an API-only user, this operation will fail."
													},
													"response": [
														{
															"name": "Status",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/users/:apiUserUid/apiToken/revoke",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"users",
																		":apiUserUid",
																		"apiToken",
																		"revoke"
																	],
																	"variable": [
																		{
																			"key": "apiUserUid"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"status\": \"<string>\"\n}"
														},
														{
															"name": "Invalid input provided. Check the response for details.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/users/:apiUserUid/apiToken/revoke",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"users",
																		":apiUserUid",
																		"apiToken",
																		"revoke"
																	],
																	"variable": [
																		{
																			"key": "apiUserUid"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "Request not authorized.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/users/:apiUserUid/apiToken/revoke",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"users",
																		":apiUserUid",
																		"apiToken",
																		"revoke"
																	],
																	"variable": [
																		{
																			"key": "apiUserUid"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
														},
														{
															"name": "User does not have sufficient privileges to perform this operation.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/users/:apiUserUid/apiToken/revoke",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"users",
																		":apiUserUid",
																		"apiToken",
																		"revoke"
																	],
																	"variable": [
																		{
																			"key": "apiUserUid"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "Internal server error.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/users/:apiUserUid/apiToken/revoke",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"users",
																		":apiUserUid",
																		"apiToken",
																		"revoke"
																	],
																	"variable": [
																		{
																			"key": "apiUserUid"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "generate",
											"item": [
												{
													"name": "Generate Token for API-only user",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/users/:apiUserUid/apiToken/generate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"users",
																":apiUserUid",
																"apiToken",
																"generate"
															],
															"variable": [
																{
																	"key": "apiUserUid",
																	"value": "<uuid>",
																	"description": "(Required) The unique identifier of the API-only user in CDO"
																}
															]
														},
														"description": "Generate API Token for API-only user. API-only users are used for building automations with CDO. If the user ID provided is not that of an API-only user, this operation will fail."
													},
													"response": [
														{
															"name": "API Token",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/users/:apiUserUid/apiToken/generate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"users",
																		":apiUserUid",
																		"apiToken",
																		"generate"
																	],
																	"variable": [
																		{
																			"key": "apiUserUid"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"apiToken\": \"<string>\"\n}"
														},
														{
															"name": "Invalid input provided. Check the response for details.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/users/:apiUserUid/apiToken/generate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"users",
																		":apiUserUid",
																		"apiToken",
																		"generate"
																	],
																	"variable": [
																		{
																			"key": "apiUserUid"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "Request not authorized.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/users/:apiUserUid/apiToken/generate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"users",
																		":apiUserUid",
																		"apiToken",
																		"generate"
																	],
																	"variable": [
																		{
																			"key": "apiUserUid"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
														},
														{
															"name": "User does not have sufficient privileges to perform this operation.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/users/:apiUserUid/apiToken/generate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"users",
																		":apiUserUid",
																		"apiToken",
																		"generate"
																	],
																	"variable": [
																		{
																			"key": "apiUserUid"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "Internal server error.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/users/:apiUserUid/apiToken/generate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"users",
																		":apiUserUid",
																		"apiToken",
																		"generate"
																	],
																	"variable": [
																		{
																			"key": "apiUserUid"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "groups",
							"item": [
								{
									"name": "{groupUid}",
									"item": [
										{
											"name": "Get Active Directory Group",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/users/groups/:groupUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"users",
														"groups",
														":groupUid"
													],
													"variable": [
														{
															"key": "groupUid",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the active directory group in CDO."
														}
													]
												},
												"description": "Fetch a active directory group by UID in the CDO tenant."
											},
											"response": [
												{
													"name": "Active Directory Group object",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/users/groups/:groupUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"users",
																"groups",
																":groupUid"
															],
															"variable": [
																{
																	"key": "groupUid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"uid\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"role\": \"ROLE_SUPER_ADMIN\",\n  \"groupIdentifier\": \"<string>\",\n  \"issuerUrl\": \"<string>\",\n  \"notes\": \"<string>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/users/groups/:groupUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"users",
																"groups",
																":groupUid"
															],
															"variable": [
																{
																	"key": "groupUid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/users/groups/:groupUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"users",
																"groups",
																":groupUid"
															],
															"variable": [
																{
																	"key": "groupUid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/users/groups/:groupUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"users",
																"groups",
																":groupUid"
															],
															"variable": [
																{
																	"key": "groupUid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Entity not found.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/users/groups/:groupUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"users",
																"groups",
																":groupUid"
															],
															"variable": [
																{
																	"key": "groupUid"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/users/groups/:groupUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"users",
																"groups",
																":groupUid"
															],
															"variable": [
																{
																	"key": "groupUid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										},
										{
											"name": "Remove Active Directory Group from CDO Tenant",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/users/groups/:groupUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"users",
														"groups",
														":groupUid"
													],
													"variable": [
														{
															"key": "groupUid",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the Active Directory Group in CDO."
														}
													]
												},
												"description": "Delete a Active Directory Group by UID in the CDO tenant."
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/users/groups/:groupUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"users",
																"groups",
																":groupUid"
															],
															"variable": [
																{
																	"key": "groupUid"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/users/groups/:groupUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"users",
																"groups",
																":groupUid"
															],
															"variable": [
																{
																	"key": "groupUid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/users/groups/:groupUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"users",
																"groups",
																":groupUid"
															],
															"variable": [
																{
																	"key": "groupUid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/users/groups/:groupUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"users",
																"groups",
																":groupUid"
															],
															"variable": [
																{
																	"key": "groupUid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/users/groups/:groupUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"users",
																"groups",
																":groupUid"
															],
															"variable": [
																{
																	"key": "groupUid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										},
										{
											"name": "Modify Active Directory Group",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"groupIdentifier\": \"<string>\",\n  \"issuerUrl\": \"<string>\",\n  \"name\": \"<string>\",\n  \"role\": \"<string>\",\n  \"notes\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/users/groups/:groupUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"users",
														"groups",
														":groupUid"
													],
													"variable": [
														{
															"key": "groupUid",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the active directory group in CDO."
														}
													]
												},
												"description": "Modify an Active Directory Group by UID."
											},
											"response": [
												{
													"name": "Active Directory Group object",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"groupIdentifier\": \"<string>\",\n  \"issuerUrl\": \"<string>\",\n  \"name\": \"<string>\",\n  \"role\": \"<string>\",\n  \"notes\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/users/groups/:groupUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"users",
																"groups",
																":groupUid"
															],
															"variable": [
																{
																	"key": "groupUid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"uid\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"role\": \"ROLE_SUPER_ADMIN\",\n  \"groupIdentifier\": \"<string>\",\n  \"issuerUrl\": \"<string>\",\n  \"notes\": \"<string>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"groupIdentifier\": \"<string>\",\n  \"issuerUrl\": \"<string>\",\n  \"name\": \"<string>\",\n  \"role\": \"<string>\",\n  \"notes\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/users/groups/:groupUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"users",
																"groups",
																":groupUid"
															],
															"variable": [
																{
																	"key": "groupUid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"groupIdentifier\": \"<string>\",\n  \"issuerUrl\": \"<string>\",\n  \"name\": \"<string>\",\n  \"role\": \"<string>\",\n  \"notes\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/users/groups/:groupUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"users",
																"groups",
																":groupUid"
															],
															"variable": [
																{
																	"key": "groupUid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"groupIdentifier\": \"<string>\",\n  \"issuerUrl\": \"<string>\",\n  \"name\": \"<string>\",\n  \"role\": \"<string>\",\n  \"notes\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/users/groups/:groupUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"users",
																"groups",
																":groupUid"
															],
															"variable": [
																{
																	"key": "groupUid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Entity not found.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"groupIdentifier\": \"<string>\",\n  \"issuerUrl\": \"<string>\",\n  \"name\": \"<string>\",\n  \"role\": \"<string>\",\n  \"notes\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/users/groups/:groupUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"users",
																"groups",
																":groupUid"
															],
															"variable": [
																{
																	"key": "groupUid"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"groupIdentifier\": \"<string>\",\n  \"issuerUrl\": \"<string>\",\n  \"name\": \"<string>\",\n  \"role\": \"<string>\",\n  \"notes\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/users/groups/:groupUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"users",
																"groups",
																":groupUid"
															],
															"variable": [
																{
																	"key": "groupUid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Active Directory Groups",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/users/groups?limit=50&offset=0&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"users",
												"groups"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												}
											]
										},
										"description": "Get a list of active directory groups associated with the CDO tenant."
									},
									"response": [
										{
											"name": "List of Active Directory Group objects",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/users/groups?limit=50&offset=0&q=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"users",
														"groups"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"items\": [\n    {\n      \"uid\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"role\": \"ROLE_DEPLOY_ONLY\",\n      \"groupIdentifier\": \"<string>\",\n      \"issuerUrl\": \"<string>\",\n      \"notes\": \"<string>\"\n    },\n    {\n      \"uid\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"role\": \"ROLE_VPN_SESSIONS_MANAGER\",\n      \"groupIdentifier\": \"<string>\",\n      \"issuerUrl\": \"<string>\",\n      \"notes\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/users/groups?limit=50&offset=0&q=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"users",
														"groups"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/users/groups?limit=50&offset=0&q=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"users",
														"groups"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/users/groups?limit=50&offset=0&q=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"users",
														"groups"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/users/groups?limit=50&offset=0&q=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"users",
														"groups"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								},
								{
									"name": "Create Active Directory Group in CDO Tenant",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"groupIdentifier\": \"<string>\",\n  \"issuerUrl\": \"<string>\",\n  \"name\": \"<string>\",\n  \"role\": \"<string>\",\n  \"notes\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/users/groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"users",
												"groups"
											]
										},
										"description": "Create an Active Directory Group in the CDO tenant."
									},
									"response": [
										{
											"name": "Active Directory Group object",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"groupIdentifier\": \"<string>\",\n  \"issuerUrl\": \"<string>\",\n  \"name\": \"<string>\",\n  \"role\": \"<string>\",\n  \"notes\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/users/groups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"users",
														"groups"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"uid\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"role\": \"ROLE_SUPER_ADMIN\",\n  \"groupIdentifier\": \"<string>\",\n  \"issuerUrl\": \"<string>\",\n  \"notes\": \"<string>\"\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"groupIdentifier\": \"<string>\",\n  \"issuerUrl\": \"<string>\",\n  \"name\": \"<string>\",\n  \"role\": \"<string>\",\n  \"notes\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/users/groups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"users",
														"groups"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"groupIdentifier\": \"<string>\",\n  \"issuerUrl\": \"<string>\",\n  \"name\": \"<string>\",\n  \"role\": \"<string>\",\n  \"notes\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/users/groups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"users",
														"groups"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"groupIdentifier\": \"<string>\",\n  \"issuerUrl\": \"<string>\",\n  \"name\": \"<string>\",\n  \"role\": \"<string>\",\n  \"notes\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/users/groups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"users",
														"groups"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"groupIdentifier\": \"<string>\",\n  \"issuerUrl\": \"<string>\",\n  \"name\": \"<string>\",\n  \"role\": \"<string>\",\n  \"notes\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/users/groups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"users",
														"groups"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "{userUid}",
							"item": [
								{
									"name": "Get Tenant User",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/users/:userUid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"users",
												":userUid"
											],
											"variable": [
												{
													"key": "userUid",
													"value": "<uuid>",
													"description": "(Required) The unique identifier of the user in CDO."
												}
											]
										},
										"description": "Fetch a user by UID in the CDO tenant. This will only return 200 responses for users associated with the CDO tenant."
									},
									"response": [
										{
											"name": "User object",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/users/:userUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"users",
														":userUid"
													],
													"variable": [
														{
															"key": "userUid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"uid\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"roles\": [\n    \"ROLE_ADMIN\",\n    \"ROLE_SUPER_ADMIN\"\n  ],\n  \"apiOnlyUser\": \"<boolean>\",\n  \"lastSuccessfulLogin\": \"<dateTime>\"\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/users/:userUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"users",
														":userUid"
													],
													"variable": [
														{
															"key": "userUid"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/users/:userUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"users",
														":userUid"
													],
													"variable": [
														{
															"key": "userUid"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/users/:userUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"users",
														":userUid"
													],
													"variable": [
														{
															"key": "userUid"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Entity not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/users/:userUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"users",
														":userUid"
													],
													"variable": [
														{
															"key": "userUid"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/users/:userUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"users",
														":userUid"
													],
													"variable": [
														{
															"key": "userUid"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								},
								{
									"name": "Remove User from CDO Tenant",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/users/:userUid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"users",
												":userUid"
											],
											"variable": [
												{
													"key": "userUid",
													"value": "<uuid>",
													"description": "(Required) The unique identifier of the user in CDO."
												}
											]
										},
										"description": "Delete a User by UID in the CDO tenant. If the user is associated with multiple tenants, they will continue to have access to every other tenant."
									},
									"response": [
										{
											"name": "No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/users/:userUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"users",
														":userUid"
													],
													"variable": [
														{
															"key": "userUid"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/users/:userUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"users",
														":userUid"
													],
													"variable": [
														{
															"key": "userUid"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/users/:userUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"users",
														":userUid"
													],
													"variable": [
														{
															"key": "userUid"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/users/:userUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"users",
														":userUid"
													],
													"variable": [
														{
															"key": "userUid"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/users/:userUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"users",
														":userUid"
													],
													"variable": [
														{
															"key": "userUid"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Tenant Users",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/users?limit=50&offset=0&q=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"users"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "The number of results to retrieve."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
										},
										{
											"key": "q",
											"value": "<string>",
											"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
										}
									]
								},
								"description": "Get a list of users associated with the CDO tenant."
							},
							"response": [
								{
									"name": "List of User objects",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/users?limit=50&offset=0&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"users"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<integer>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"items\": [\n    {\n      \"uid\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"roles\": [\n        \"ROLE_FWAAS\",\n        \"ROLE_ADMIN\"\n      ],\n      \"apiOnlyUser\": \"<boolean>\",\n      \"lastSuccessfulLogin\": \"<dateTime>\"\n    },\n    {\n      \"uid\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"roles\": [\n        \"ROLE_ADMIN\",\n        \"ROLE_READ_ONLY\"\n      ],\n      \"apiOnlyUser\": \"<boolean>\",\n      \"lastSuccessfulLogin\": \"<dateTime>\"\n    }\n  ]\n}"
								},
								{
									"name": "Invalid input provided. Check the response for details.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/users?limit=50&offset=0&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"users"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Request not authorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/users?limit=50&offset=0&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"users"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
								},
								{
									"name": "User does not have sufficient privileges to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/users?limit=50&offset=0&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"users"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/users?limit=50&offset=0&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"users"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								}
							]
						},
						{
							"name": "Create User in CDO Tenant",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"role\": \"<string>\",\n  \"apiOnlyUser\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"users"
									]
								},
								"description": "Create a user in the CDO tenant. The user may already exist and have access to other tenants, in which case this endpoint adds the user to this tenant."
							},
							"response": [
								{
									"name": "User object",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"role\": \"<string>\",\n  \"apiOnlyUser\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"users"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"uid\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"roles\": [\n    \"ROLE_ADMIN\",\n    \"ROLE_SUPER_ADMIN\"\n  ],\n  \"apiOnlyUser\": \"<boolean>\",\n  \"lastSuccessfulLogin\": \"<dateTime>\"\n}"
								},
								{
									"name": "Invalid input provided. Check the response for details.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"role\": \"<string>\",\n  \"apiOnlyUser\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Request not authorized.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"role\": \"<string>\",\n  \"apiOnlyUser\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"users"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
								},
								{
									"name": "User does not have sufficient privileges to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"role\": \"<string>\",\n  \"apiOnlyUser\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"users"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"role\": \"<string>\",\n  \"apiOnlyUser\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"users"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "token",
					"item": [
						{
							"name": "revoke",
							"item": [
								{
									"name": "Revoke Token",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/token/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"token",
												"revoke"
											]
										},
										"description": "Revoke the current token. All subsequent requests with a revoked token will fail with 401 Unauthorized errors."
									},
									"response": [
										{
											"name": "Revoke success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/token/revoke",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"token",
														"revoke"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/token/revoke",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"token",
														"revoke"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/token/revoke",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"token",
														"revoke"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Token Info",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"token"
									]
								},
								"description": "Fetch information on the current token. Each CDO token is associated with a specific user and a specific tenant. A token can only be used to perform operations on the tenant it is associated with."
							},
							"response": [
								{
									"name": "Token information",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"uid\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"roles\": [\n    \"ROLE_ADMIN\",\n    \"ROLE_SUPER_ADMIN\"\n  ],\n  \"expiresAt\": \"<dateTime>\",\n  \"tenantUid\": \"<uuid>\"\n}"
								},
								{
									"name": "Request not authorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"token"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"token"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "search",
					"item": [
						{
							"name": "index",
							"item": [
								{
									"name": "Rebuild search index",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/search/index",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"search",
												"index"
											]
										},
										"description": "Initiate Full Indexing on the CDO tenant, to improve accuracy of search results. This operation is performed automatically on a schedule by CDO, but can be triggered on demand too. This operation is asynchronous, but its progress cannot be tracked using CDO's API."
									},
									"response": [
										{
											"name": "CDO Transaction object that can be used to track the progress of the indexing operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/search/index",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"search",
														"index"
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/search/index",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"search",
														"index"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/search/index",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"search",
														"index"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/search/index",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"search",
														"index"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Method not allowed.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/search/index",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"search",
														"index"
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/search/index",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"search",
														"index"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Search",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/search?q=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "<string>",
											"description": "(Required) This can be any non-empty string, and represents the search criteria. Spaces are allowed, but must be URL encoded."
										}
									]
								},
								"description": "Search for devices, services, managers, objects and policies across the CDO tenant."
							},
							"response": [
								{
									"name": "Search Result",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/search?q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"search"
											],
											"query": [
												{
													"key": "q",
													"value": "<string>",
													"description": "(Required) This can be any non-empty string, and represents the search criteria. Spaces are allowed, but must be URL encoded."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"inventory\": {\n    \"devices\": [\n      {\n        \"uid\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"type\": \"MERAKI_MX\",\n        \"address\": \"<string>\",\n        \"matchingConfigurations\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"uid\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"type\": \"ONPREM_FMC_NGIPS\",\n        \"address\": \"<string>\",\n        \"matchingConfigurations\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"managers\": [\n      {\n        \"uid\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"type\": \"MERAKI_MX\",\n        \"address\": \"<string>\",\n        \"matchingConfigurations\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"uid\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"type\": \"ONPREM_FMC_MANAGED_FIREPOWER\",\n        \"address\": \"<string>\",\n        \"matchingConfigurations\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"services\": [\n      {\n        \"uid\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"type\": \"CDFMC_MANAGED_FTD\",\n        \"address\": \"<string>\",\n        \"matchingConfigurations\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"uid\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"type\": \"CDFMC\",\n        \"address\": \"<string>\",\n        \"matchingConfigurations\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  },\n  \"policies\": [\n    {\n      \"uid\": \"<uuid>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"uid\": \"<uuid>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"cdFmcResult\": {\n    \"devices\": [\n      {\n        \"uid\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"link\": \"<string>\"\n      },\n      {\n        \"uid\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"link\": \"<string>\"\n      }\n    ],\n    \"objects\": [\n      {\n        \"uid\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"link\": \"<string>\"\n      },\n      {\n        \"uid\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"link\": \"<string>\"\n      }\n    ],\n    \"policies\": [\n      {\n        \"uid\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"link\": \"<string>\"\n      },\n      {\n        \"uid\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"link\": \"<string>\"\n      }\n    ]\n  }\n}"
								},
								{
									"name": "Invalid input provided. Check the response for details.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/search?q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"search"
											],
											"query": [
												{
													"key": "q",
													"value": "<string>",
													"description": "(Required) This can be any non-empty string, and represents the search criteria. Spaces are allowed, but must be URL encoded."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Request not authorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/search?q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"search"
											],
											"query": [
												{
													"key": "q",
													"value": "<string>",
													"description": "(Required) This can be any non-empty string, and represents the search criteria. Spaces are allowed, but must be URL encoded."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
								},
								{
									"name": "User does not have sufficient privileges to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/search?q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"search"
											],
											"query": [
												{
													"key": "q",
													"value": "<string>",
													"description": "(Required) This can be any non-empty string, and represents the search criteria. Spaces are allowed, but must be URL encoded."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Method not allowed.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/search?q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"search"
											],
											"query": [
												{
													"key": "q",
													"value": "<string>",
													"description": "(Required) This can be any non-empty string, and represents the search criteria. Spaces are allowed, but must be URL encoded."
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/search?q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"search"
											],
											"query": [
												{
													"key": "q",
													"value": "<string>",
													"description": "(Required) This can be any non-empty string, and represents the search criteria. Spaces are allowed, but must be URL encoded."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "policies",
					"item": [
						{
							"name": "asa",
							"item": [
								{
									"name": "accessrules",
									"item": [
										{
											"name": "{accessRuleUid}",
											"item": [
												{
													"name": "Get Access Rule",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/policies/asa/accessrules/:accessRuleUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"policies",
																"asa",
																"accessrules",
																":accessRuleUid"
															],
															"variable": [
																{
																	"key": "accessRuleUid",
																	"value": "<uuid>",
																	"description": "(Required) The unique identifier of the Access Rule in CDO."
																}
															]
														},
														"description": "Get a single ASA Access Rule by UUID."
													},
													"response": [
														{
															"name": "Access Rule object.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessrules/:accessRuleUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessrules",
																		":accessRuleUid"
																	],
																	"variable": [
																		{
																			"key": "accessRuleUid"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"accessGroupUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"index\": \"<integer>\",\n  \"ruleAction\": \"PERMIT\",\n  \"uid\": \"<uuid>\",\n  \"sharedAccessGroupUid\": \"<uuid>\",\n  \"ruleType\": \"<string>\",\n  \"protocol\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_UDP_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourcePort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"PROTOCOL_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationPort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"ICMP_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_TCP_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_TCP_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"IPV4_ADDRESS_POOL\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"logSettings\": {\n    \"level\": \"<string>\",\n    \"interval\": \"<integer>\"\n  },\n  \"ruleTimeRange\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_ICMPV6_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"remark\": \"<string>\",\n  \"issue\": \"<string>\",\n  \"isActiveRule\": \"<boolean>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedDate\": \"<dateTime>\"\n}"
														},
														{
															"name": "Invalid input provided. Check the response for details.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessrules/:accessRuleUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessrules",
																		":accessRuleUid"
																	],
																	"variable": [
																		{
																			"key": "accessRuleUid"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "User does not have sufficient privileges to perform this operation.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessrules/:accessRuleUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessrules",
																		":accessRuleUid"
																	],
																	"variable": [
																		{
																			"key": "accessRuleUid"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "Entity not found.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessrules/:accessRuleUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessrules",
																		":accessRuleUid"
																	],
																	"variable": [
																		{
																			"key": "accessRuleUid"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "Internal server error.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessrules/:accessRuleUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessrules",
																		":accessRuleUid"
																	],
																	"variable": [
																		{
																			"key": "accessRuleUid"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														}
													]
												},
												{
													"name": "Delete Access Rule",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/policies/asa/accessrules/:accessRuleUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"policies",
																"asa",
																"accessrules",
																":accessRuleUid"
															],
															"variable": [
																{
																	"key": "accessRuleUid",
																	"value": "<uuid>",
																	"description": "(Required) The unique identifier of the Access Rule in CDO."
																}
															]
														},
														"description": "Delete Access Rule by UID in the CDO tenant."
													},
													"response": [
														{
															"name": "No Content",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessrules/:accessRuleUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessrules",
																		":accessRuleUid"
																	],
																	"variable": [
																		{
																			"key": "accessRuleUid"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Invalid input provided. Check the response for details.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessrules/:accessRuleUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessrules",
																		":accessRuleUid"
																	],
																	"variable": [
																		{
																			"key": "accessRuleUid"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "User does not have sufficient privileges to perform this operation.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessrules/:accessRuleUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessrules",
																		":accessRuleUid"
																	],
																	"variable": [
																		{
																			"key": "accessRuleUid"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "Internal server error.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessrules/:accessRuleUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessrules",
																		":accessRuleUid"
																	],
																	"variable": [
																		{
																			"key": "accessRuleUid"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														}
													]
												},
												{
													"name": "Modify ASA Access Rule",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"uid\": \"<uuid>\",\n  \"index\": \"<integer>\",\n  \"ruleAction\": \"PERMIT\",\n  \"protocol\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"URL_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourcePort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_UDP_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationPort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_FTD_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"PROTOCOL_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"APPLICATION_FILTER_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"logSettings\": {\n    \"level\": \"<string>\",\n    \"interval\": \"<integer>\"\n  },\n  \"ruleTimeRange\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"remark\": \"<string>\",\n  \"isActiveRule\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/policies/asa/accessrules/:accessRuleUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"policies",
																"asa",
																"accessrules",
																":accessRuleUid"
															],
															"variable": [
																{
																	"key": "accessRuleUid",
																	"value": "<uuid>",
																	"description": "(Required) The unique identifier of the CDO Access Rule."
																}
															]
														},
														"description": "Modify an Access Rule in the CDO tenant by UID."
													},
													"response": [
														{
															"name": "CDO Access Rule",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"uid\": \"<uuid>\",\n  \"index\": \"<integer>\",\n  \"ruleAction\": \"PERMIT\",\n  \"protocol\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"URL_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourcePort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_UDP_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationPort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_FTD_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"PROTOCOL_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"APPLICATION_FILTER_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"logSettings\": {\n    \"level\": \"<string>\",\n    \"interval\": \"<integer>\"\n  },\n  \"ruleTimeRange\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"remark\": \"<string>\",\n  \"isActiveRule\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessrules/:accessRuleUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessrules",
																		":accessRuleUid"
																	],
																	"variable": [
																		{
																			"key": "accessRuleUid"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"accessGroupUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"index\": \"<integer>\",\n  \"ruleAction\": \"PERMIT\",\n  \"uid\": \"<uuid>\",\n  \"sharedAccessGroupUid\": \"<uuid>\",\n  \"ruleType\": \"<string>\",\n  \"protocol\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_UDP_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourcePort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"PROTOCOL_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationPort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"ICMP_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_TCP_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_TCP_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"IPV4_ADDRESS_POOL\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"logSettings\": {\n    \"level\": \"<string>\",\n    \"interval\": \"<integer>\"\n  },\n  \"ruleTimeRange\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_ICMPV6_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"remark\": \"<string>\",\n  \"issue\": \"<string>\",\n  \"isActiveRule\": \"<boolean>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedDate\": \"<dateTime>\"\n}"
														},
														{
															"name": "Invalid input provided. Check the response for details.",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"uid\": \"<uuid>\",\n  \"index\": \"<integer>\",\n  \"ruleAction\": \"PERMIT\",\n  \"protocol\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"URL_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourcePort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_UDP_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationPort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_FTD_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"PROTOCOL_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"APPLICATION_FILTER_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"logSettings\": {\n    \"level\": \"<string>\",\n    \"interval\": \"<integer>\"\n  },\n  \"ruleTimeRange\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"remark\": \"<string>\",\n  \"isActiveRule\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessrules/:accessRuleUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessrules",
																		":accessRuleUid"
																	],
																	"variable": [
																		{
																			"key": "accessRuleUid"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "User does not have sufficient privileges to perform this operation.",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"uid\": \"<uuid>\",\n  \"index\": \"<integer>\",\n  \"ruleAction\": \"PERMIT\",\n  \"protocol\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"URL_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourcePort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_UDP_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationPort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_FTD_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"PROTOCOL_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"APPLICATION_FILTER_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"logSettings\": {\n    \"level\": \"<string>\",\n    \"interval\": \"<integer>\"\n  },\n  \"ruleTimeRange\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"remark\": \"<string>\",\n  \"isActiveRule\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessrules/:accessRuleUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessrules",
																		":accessRuleUid"
																	],
																	"variable": [
																		{
																			"key": "accessRuleUid"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "Entity not found.",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"uid\": \"<uuid>\",\n  \"index\": \"<integer>\",\n  \"ruleAction\": \"PERMIT\",\n  \"protocol\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"URL_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourcePort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_UDP_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationPort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_FTD_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"PROTOCOL_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"APPLICATION_FILTER_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"logSettings\": {\n    \"level\": \"<string>\",\n    \"interval\": \"<integer>\"\n  },\n  \"ruleTimeRange\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"remark\": \"<string>\",\n  \"isActiveRule\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessrules/:accessRuleUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessrules",
																		":accessRuleUid"
																	],
																	"variable": [
																		{
																			"key": "accessRuleUid"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "Internal server error.",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"uid\": \"<uuid>\",\n  \"index\": \"<integer>\",\n  \"ruleAction\": \"PERMIT\",\n  \"protocol\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"URL_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourcePort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_UDP_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationPort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_FTD_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"PROTOCOL_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"APPLICATION_FILTER_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"logSettings\": {\n    \"level\": \"<string>\",\n    \"interval\": \"<integer>\"\n  },\n  \"ruleTimeRange\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"remark\": \"<string>\",\n  \"isActiveRule\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessrules/:accessRuleUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessrules",
																		":accessRuleUid"
																	],
																	"variable": [
																		{
																			"key": "accessRuleUid"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get Access Rules",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/policies/asa/accessrules?limit=50&offset=0&q=<string>&sort=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"policies",
														"asa",
														"accessrules"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												},
												"description": "Get a list of ASA Access Rules."
											},
											"response": [
												{
													"name": "List of Access Rules.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/policies/asa/accessrules?limit=50&offset=0&q=<string>&sort=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"policies",
																"asa",
																"accessrules"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "50",
																	"description": "The number of results to retrieve."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
																},
																{
																	"key": "q",
																	"value": "<string>",
																	"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
																},
																{
																	"key": "sort",
																	"value": "<string>",
																	"description": "The fields to sort results by."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": \"<integer>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"items\": [\n    {\n      \"accessGroupUid\": \"<uuid>\",\n      \"entityUid\": \"<uuid>\",\n      \"index\": \"<integer>\",\n      \"ruleAction\": \"DENY\",\n      \"uid\": \"<uuid>\",\n      \"sharedAccessGroupUid\": \"<uuid>\",\n      \"ruleType\": \"<string>\",\n      \"protocol\": {\n        \"name\": \"<string>\",\n        \"uid\": \"<uuid>\",\n        \"type\": \"ICMP_GROUP\",\n        \"elements\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"sourcePort\": {\n        \"name\": \"<string>\",\n        \"uid\": \"<uuid>\",\n        \"type\": \"SERVICE_ICMPV6_OBJECT\",\n        \"elements\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"destinationPort\": {\n        \"name\": \"<string>\",\n        \"uid\": \"<uuid>\",\n        \"type\": \"PROTOCOL_GROUP\",\n        \"elements\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"sourceNetwork\": {\n        \"name\": \"<string>\",\n        \"uid\": \"<uuid>\",\n        \"type\": \"SERVICE_ICMPV4_OBJECT\",\n        \"elements\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"destinationNetwork\": {\n        \"name\": \"<string>\",\n        \"uid\": \"<uuid>\",\n        \"type\": \"SERVICE_ICMPV4_OBJECT\",\n        \"elements\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"sourceDynamicObject\": {\n        \"name\": \"<string>\",\n        \"uid\": \"<uuid>\",\n        \"type\": \"SERVICE_FTD_GROUP\",\n        \"elements\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"destinationDynamicObject\": {\n        \"name\": \"<string>\",\n        \"uid\": \"<uuid>\",\n        \"type\": \"NETWORK_OBJECT\",\n        \"elements\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"logSettings\": {\n        \"level\": \"<string>\",\n        \"interval\": \"<integer>\"\n      },\n      \"ruleTimeRange\": {\n        \"name\": \"<string>\",\n        \"uid\": \"<uuid>\",\n        \"type\": \"IPV4_ADDRESS_POOL\",\n        \"elements\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"remark\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"isActiveRule\": \"<boolean>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedDate\": \"<dateTime>\"\n    },\n    {\n      \"accessGroupUid\": \"<uuid>\",\n      \"entityUid\": \"<uuid>\",\n      \"index\": \"<integer>\",\n      \"ruleAction\": \"PERMIT\",\n      \"uid\": \"<uuid>\",\n      \"sharedAccessGroupUid\": \"<uuid>\",\n      \"ruleType\": \"<string>\",\n      \"protocol\": {\n        \"name\": \"<string>\",\n        \"uid\": \"<uuid>\",\n        \"type\": \"SERVICE_UDP_OBJECT\",\n        \"elements\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"sourcePort\": {\n        \"name\": \"<string>\",\n        \"uid\": \"<uuid>\",\n        \"type\": \"IPV4_ADDRESS_POOL\",\n        \"elements\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"destinationPort\": {\n        \"name\": \"<string>\",\n        \"uid\": \"<uuid>\",\n        \"type\": \"SERVICE_TCP_OBJECT\",\n        \"elements\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"sourceNetwork\": {\n        \"name\": \"<string>\",\n        \"uid\": \"<uuid>\",\n        \"type\": \"SERVICE_GROUP\",\n        \"elements\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"destinationNetwork\": {\n        \"name\": \"<string>\",\n        \"uid\": \"<uuid>\",\n        \"type\": \"APPLICATION_FILTER_OBJECT\",\n        \"elements\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"sourceDynamicObject\": {\n        \"name\": \"<string>\",\n        \"uid\": \"<uuid>\",\n        \"type\": \"IPV4_ADDRESS_POOL\",\n        \"elements\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"destinationDynamicObject\": {\n        \"name\": \"<string>\",\n        \"uid\": \"<uuid>\",\n        \"type\": \"APPLICATION_FILTER_OBJECT\",\n        \"elements\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"logSettings\": {\n        \"level\": \"<string>\",\n        \"interval\": \"<integer>\"\n      },\n      \"ruleTimeRange\": {\n        \"name\": \"<string>\",\n        \"uid\": \"<uuid>\",\n        \"type\": \"PROTOCOL_GROUP\",\n        \"elements\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"remark\": \"<string>\",\n      \"issue\": \"<string>\",\n      \"isActiveRule\": \"<boolean>\",\n      \"createdDate\": \"<dateTime>\",\n      \"updatedDate\": \"<dateTime>\"\n    }\n  ]\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/policies/asa/accessrules?limit=50&offset=0&q=<string>&sort=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"policies",
																"asa",
																"accessrules"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "50",
																	"description": "The number of results to retrieve."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
																},
																{
																	"key": "q",
																	"value": "<string>",
																	"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
																},
																{
																	"key": "sort",
																	"value": "<string>",
																	"description": "The fields to sort results by."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/policies/asa/accessrules?limit=50&offset=0&q=<string>&sort=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"policies",
																"asa",
																"accessrules"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "50",
																	"description": "The number of results to retrieve."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
																},
																{
																	"key": "q",
																	"value": "<string>",
																	"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
																},
																{
																	"key": "sort",
																	"value": "<string>",
																	"description": "The fields to sort results by."
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/policies/asa/accessrules?limit=50&offset=0&q=<string>&sort=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"policies",
																"asa",
																"accessrules"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "50",
																	"description": "The number of results to retrieve."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
																},
																{
																	"key": "q",
																	"value": "<string>",
																	"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
																},
																{
																	"key": "sort",
																	"value": "<string>",
																	"description": "The fields to sort results by."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										},
										{
											"name": "Create Access Rule",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accessGroupUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"index\": \"<integer>\",\n  \"ruleAction\": \"PERMIT\",\n  \"protocol\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"ICMP_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourcePort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"URL_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationPort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"PROTOCOL_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"NETWORK_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_FTD_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"IPV4_ADDRESS_POOL\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"APPLICATION_FILTER_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"logSettings\": {\n    \"level\": \"<string>\",\n    \"interval\": \"<integer>\"\n  },\n  \"ruleTimeRange\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"NETWORK_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"remark\": \"<string>\",\n  \"activeRule\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/policies/asa/accessrules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"policies",
														"asa",
														"accessrules"
													]
												},
												"description": "Create an Access Rule in the CDO tenant."
											},
											"response": [
												{
													"name": "CDO Access Rule.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"accessGroupUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"index\": \"<integer>\",\n  \"ruleAction\": \"PERMIT\",\n  \"protocol\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"ICMP_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourcePort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"URL_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationPort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"PROTOCOL_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"NETWORK_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_FTD_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"IPV4_ADDRESS_POOL\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"APPLICATION_FILTER_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"logSettings\": {\n    \"level\": \"<string>\",\n    \"interval\": \"<integer>\"\n  },\n  \"ruleTimeRange\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"NETWORK_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"remark\": \"<string>\",\n  \"activeRule\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/policies/asa/accessrules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"policies",
																"asa",
																"accessrules"
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"accessGroupUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"index\": \"<integer>\",\n  \"ruleAction\": \"PERMIT\",\n  \"uid\": \"<uuid>\",\n  \"sharedAccessGroupUid\": \"<uuid>\",\n  \"ruleType\": \"<string>\",\n  \"protocol\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_UDP_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourcePort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"PROTOCOL_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationPort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"ICMP_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_TCP_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_TCP_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"IPV4_ADDRESS_POOL\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"logSettings\": {\n    \"level\": \"<string>\",\n    \"interval\": \"<integer>\"\n  },\n  \"ruleTimeRange\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_ICMPV6_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"remark\": \"<string>\",\n  \"issue\": \"<string>\",\n  \"isActiveRule\": \"<boolean>\",\n  \"createdDate\": \"<dateTime>\",\n  \"updatedDate\": \"<dateTime>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"accessGroupUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"index\": \"<integer>\",\n  \"ruleAction\": \"PERMIT\",\n  \"protocol\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"ICMP_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourcePort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"URL_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationPort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"PROTOCOL_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"NETWORK_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_FTD_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"IPV4_ADDRESS_POOL\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"APPLICATION_FILTER_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"logSettings\": {\n    \"level\": \"<string>\",\n    \"interval\": \"<integer>\"\n  },\n  \"ruleTimeRange\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"NETWORK_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"remark\": \"<string>\",\n  \"activeRule\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/policies/asa/accessrules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"policies",
																"asa",
																"accessrules"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"accessGroupUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"index\": \"<integer>\",\n  \"ruleAction\": \"PERMIT\",\n  \"protocol\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"ICMP_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourcePort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"URL_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationPort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"PROTOCOL_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"NETWORK_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_FTD_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"IPV4_ADDRESS_POOL\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"APPLICATION_FILTER_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"logSettings\": {\n    \"level\": \"<string>\",\n    \"interval\": \"<integer>\"\n  },\n  \"ruleTimeRange\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"NETWORK_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"remark\": \"<string>\",\n  \"activeRule\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/policies/asa/accessrules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"policies",
																"asa",
																"accessrules"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"accessGroupUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"index\": \"<integer>\",\n  \"ruleAction\": \"PERMIT\",\n  \"protocol\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"ICMP_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourcePort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"URL_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationPort\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"PROTOCOL_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"NETWORK_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationNetwork\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"SERVICE_FTD_GROUP\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"sourceDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"IPV4_ADDRESS_POOL\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"destinationDynamicObject\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"APPLICATION_FILTER_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"logSettings\": {\n    \"level\": \"<string>\",\n    \"interval\": \"<integer>\"\n  },\n  \"ruleTimeRange\": {\n    \"name\": \"<string>\",\n    \"uid\": \"<uuid>\",\n    \"type\": \"NETWORK_OBJECT\",\n    \"elements\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"remark\": \"<string>\",\n  \"activeRule\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/policies/asa/accessrules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"policies",
																"asa",
																"accessrules"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "accessgroups",
									"item": [
										{
											"name": "{accessGroupUid}",
											"item": [
												{
													"name": "Get Access Group",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/policies/asa/accessgroups/:accessGroupUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"policies",
																"asa",
																"accessgroups",
																":accessGroupUid"
															],
															"variable": [
																{
																	"key": "accessGroupUid",
																	"value": "<uuid>",
																	"description": "(Required) The unique identifier of the Access Group in CDO."
																}
															]
														},
														"description": "Get a single ASA Access Group by UUID."
													},
													"response": [
														{
															"name": "Access Group object",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessgroups/:accessGroupUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessgroups",
																		":accessGroupUid"
																	],
																	"variable": [
																		{
																			"key": "accessGroupUid"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"entityUid\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"sharedAccessGroupUid\": \"<uuid>\",\n  \"uid\": \"<uuid>\",\n  \"isShared\": \"<boolean>\",\n  \"appliedTo\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"resources\": [\n    {\n      \"esse_08\": {},\n      \"nullaa5c\": {},\n      \"in_9\": {}\n    },\n    {\n      \"occaecat_32a\": {}\n    }\n  ],\n  \"createdDate\": \"<dateTime>\",\n  \"updatedDate\": \"<dateTime>\"\n}"
														},
														{
															"name": "Invalid input provided. Check the response for details.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessgroups/:accessGroupUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessgroups",
																		":accessGroupUid"
																	],
																	"variable": [
																		{
																			"key": "accessGroupUid"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "User does not have sufficient privileges to perform this operation.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessgroups/:accessGroupUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessgroups",
																		":accessGroupUid"
																	],
																	"variable": [
																		{
																			"key": "accessGroupUid"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "Entity not found.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessgroups/:accessGroupUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessgroups",
																		":accessGroupUid"
																	],
																	"variable": [
																		{
																			"key": "accessGroupUid"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "Internal server error.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessgroups/:accessGroupUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessgroups",
																		":accessGroupUid"
																	],
																	"variable": [
																		{
																			"key": "accessGroupUid"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														}
													]
												},
												{
													"name": "Delete Access Group",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/policies/asa/accessgroups/:accessGroupUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"policies",
																"asa",
																"accessgroups",
																":accessGroupUid"
															],
															"variable": [
																{
																	"key": "accessGroupUid",
																	"value": "<uuid>",
																	"description": "(Required) The unique identifier of the Access Group in CDO."
																}
															]
														},
														"description": "Delete Access Group by UID in the CDO tenant."
													},
													"response": [
														{
															"name": "No Content",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessgroups/:accessGroupUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessgroups",
																		":accessGroupUid"
																	],
																	"variable": [
																		{
																			"key": "accessGroupUid"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Invalid input provided. Check the response for details.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessgroups/:accessGroupUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessgroups",
																		":accessGroupUid"
																	],
																	"variable": [
																		{
																			"key": "accessGroupUid"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "User does not have sufficient privileges to perform this operation.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessgroups/:accessGroupUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessgroups",
																		":accessGroupUid"
																	],
																	"variable": [
																		{
																			"key": "accessGroupUid"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "Internal server error.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessgroups/:accessGroupUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessgroups",
																		":accessGroupUid"
																	],
																	"variable": [
																		{
																			"key": "accessGroupUid"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														}
													]
												},
												{
													"name": "Modify ASA Access Group",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"resources\": [\n    {\n      \"in_4\": {},\n      \"aliquip8b9\": {},\n      \"dolor_4\": {}\n    },\n    {\n      \"cillum0\": {}\n    }\n  ],\n  \"isShared\": \"<boolean>\",\n  \"appliedTo\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/policies/asa/accessgroups/:accessGroupUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"policies",
																"asa",
																"accessgroups",
																":accessGroupUid"
															],
															"variable": [
																{
																	"key": "accessGroupUid",
																	"value": "<uuid>",
																	"description": "(Required) The unique identifier of the CDO Access Group."
																}
															]
														},
														"description": "Modify CDO Access Group by UID."
													},
													"response": [
														{
															"name": "CDO Access Group",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"resources\": [\n    {\n      \"in_4\": {},\n      \"aliquip8b9\": {},\n      \"dolor_4\": {}\n    },\n    {\n      \"cillum0\": {}\n    }\n  ],\n  \"isShared\": \"<boolean>\",\n  \"appliedTo\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessgroups/:accessGroupUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessgroups",
																		":accessGroupUid"
																	],
																	"variable": [
																		{
																			"key": "accessGroupUid"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"entityUid\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"sharedAccessGroupUid\": \"<uuid>\",\n  \"uid\": \"<uuid>\",\n  \"isShared\": \"<boolean>\",\n  \"appliedTo\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"resources\": [\n    {\n      \"esse_08\": {},\n      \"nullaa5c\": {},\n      \"in_9\": {}\n    },\n    {\n      \"occaecat_32a\": {}\n    }\n  ],\n  \"createdDate\": \"<dateTime>\",\n  \"updatedDate\": \"<dateTime>\"\n}"
														},
														{
															"name": "Invalid input provided. Check the response for details.",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"resources\": [\n    {\n      \"in_4\": {},\n      \"aliquip8b9\": {},\n      \"dolor_4\": {}\n    },\n    {\n      \"cillum0\": {}\n    }\n  ],\n  \"isShared\": \"<boolean>\",\n  \"appliedTo\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessgroups/:accessGroupUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessgroups",
																		":accessGroupUid"
																	],
																	"variable": [
																		{
																			"key": "accessGroupUid"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "User does not have sufficient privileges to perform this operation.",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"resources\": [\n    {\n      \"in_4\": {},\n      \"aliquip8b9\": {},\n      \"dolor_4\": {}\n    },\n    {\n      \"cillum0\": {}\n    }\n  ],\n  \"isShared\": \"<boolean>\",\n  \"appliedTo\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessgroups/:accessGroupUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessgroups",
																		":accessGroupUid"
																	],
																	"variable": [
																		{
																			"key": "accessGroupUid"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "Entity not found.",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"resources\": [\n    {\n      \"in_4\": {},\n      \"aliquip8b9\": {},\n      \"dolor_4\": {}\n    },\n    {\n      \"cillum0\": {}\n    }\n  ],\n  \"isShared\": \"<boolean>\",\n  \"appliedTo\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessgroups/:accessGroupUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessgroups",
																		":accessGroupUid"
																	],
																	"variable": [
																		{
																			"key": "accessGroupUid"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "Internal server error.",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"resources\": [\n    {\n      \"in_4\": {},\n      \"aliquip8b9\": {},\n      \"dolor_4\": {}\n    },\n    {\n      \"cillum0\": {}\n    }\n  ],\n  \"isShared\": \"<boolean>\",\n  \"appliedTo\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/policies/asa/accessgroups/:accessGroupUid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"policies",
																		"asa",
																		"accessgroups",
																		":accessGroupUid"
																	],
																	"variable": [
																		{
																			"key": "accessGroupUid"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get Access Groups",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/policies/asa/accessgroups?limit=50&offset=0&q=<string>&sort=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"policies",
														"asa",
														"accessgroups"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												},
												"description": "Get a list of ASA Access Groups."
											},
											"response": [
												{
													"name": "List of Access Groups",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/policies/asa/accessgroups?limit=50&offset=0&q=<string>&sort=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"policies",
																"asa",
																"accessgroups"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "50",
																	"description": "The number of results to retrieve."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
																},
																{
																	"key": "q",
																	"value": "<string>",
																	"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
																},
																{
																	"key": "sort",
																	"value": "<string>",
																	"description": "The fields to sort results by."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": \"<integer>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"items\": [\n    {\n      \"entityUid\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"sharedAccessGroupUid\": \"<uuid>\",\n      \"uid\": \"<uuid>\",\n      \"isShared\": \"<boolean>\",\n      \"appliedTo\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"resources\": [\n        {\n          \"sit_000\": {}\n        },\n        {\n          \"anim_acd\": {},\n          \"ipsum5aa\": {}\n        }\n      ],\n      \"createdDate\": \"<dateTime>\",\n      \"updatedDate\": \"<dateTime>\"\n    },\n    {\n      \"entityUid\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"sharedAccessGroupUid\": \"<uuid>\",\n      \"uid\": \"<uuid>\",\n      \"isShared\": \"<boolean>\",\n      \"appliedTo\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"resources\": [\n        {\n          \"exercitation_4c5\": {}\n        },\n        {\n          \"elitd08\": {},\n          \"officia_a\": {}\n        }\n      ],\n      \"createdDate\": \"<dateTime>\",\n      \"updatedDate\": \"<dateTime>\"\n    }\n  ]\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/policies/asa/accessgroups?limit=50&offset=0&q=<string>&sort=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"policies",
																"asa",
																"accessgroups"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "50",
																	"description": "The number of results to retrieve."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
																},
																{
																	"key": "q",
																	"value": "<string>",
																	"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
																},
																{
																	"key": "sort",
																	"value": "<string>",
																	"description": "The fields to sort results by."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/policies/asa/accessgroups?limit=50&offset=0&q=<string>&sort=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"policies",
																"asa",
																"accessgroups"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "50",
																	"description": "The number of results to retrieve."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
																},
																{
																	"key": "q",
																	"value": "<string>",
																	"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
																},
																{
																	"key": "sort",
																	"value": "<string>",
																	"description": "The fields to sort results by."
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/policies/asa/accessgroups?limit=50&offset=0&q=<string>&sort=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"policies",
																"asa",
																"accessgroups"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "50",
																	"description": "The number of results to retrieve."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
																},
																{
																	"key": "q",
																	"value": "<string>",
																	"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
																},
																{
																	"key": "sort",
																	"value": "<string>",
																	"description": "The fields to sort results by."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										},
										{
											"name": "Create Access Group",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"entityUid\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"resources\": [\n    {\n      \"dolorc\": {}\n    },\n    {\n      \"Loremc00\": {},\n      \"officia_a\": {},\n      \"veniam_b4\": {},\n      \"reprehenderita3\": {}\n    }\n  ],\n  \"isShared\": \"<boolean>\",\n  \"appliedTo\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/policies/asa/accessgroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"policies",
														"asa",
														"accessgroups"
													]
												},
												"description": "Create an Access Group"
											},
											"response": [
												{
													"name": "CDO Access Group",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"entityUid\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"resources\": [\n    {\n      \"dolorc\": {}\n    },\n    {\n      \"Loremc00\": {},\n      \"officia_a\": {},\n      \"veniam_b4\": {},\n      \"reprehenderita3\": {}\n    }\n  ],\n  \"isShared\": \"<boolean>\",\n  \"appliedTo\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/policies/asa/accessgroups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"policies",
																"asa",
																"accessgroups"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"entityUid\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"sharedAccessGroupUid\": \"<uuid>\",\n  \"uid\": \"<uuid>\",\n  \"isShared\": \"<boolean>\",\n  \"appliedTo\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"resources\": [\n    {\n      \"esse_08\": {},\n      \"nullaa5c\": {},\n      \"in_9\": {}\n    },\n    {\n      \"occaecat_32a\": {}\n    }\n  ],\n  \"createdDate\": \"<dateTime>\",\n  \"updatedDate\": \"<dateTime>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"entityUid\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"resources\": [\n    {\n      \"dolorc\": {}\n    },\n    {\n      \"Loremc00\": {},\n      \"officia_a\": {},\n      \"veniam_b4\": {},\n      \"reprehenderita3\": {}\n    }\n  ],\n  \"isShared\": \"<boolean>\",\n  \"appliedTo\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/policies/asa/accessgroups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"policies",
																"asa",
																"accessgroups"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"entityUid\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"resources\": [\n    {\n      \"dolorc\": {}\n    },\n    {\n      \"Loremc00\": {},\n      \"officia_a\": {},\n      \"veniam_b4\": {},\n      \"reprehenderita3\": {}\n    }\n  ],\n  \"isShared\": \"<boolean>\",\n  \"appliedTo\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/policies/asa/accessgroups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"policies",
																"asa",
																"accessgroups"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"entityUid\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"resources\": [\n    {\n      \"dolorc\": {}\n    },\n    {\n      \"Loremc00\": {},\n      \"officia_a\": {},\n      \"veniam_b4\": {},\n      \"reprehenderita3\": {}\n    }\n  ],\n  \"isShared\": \"<boolean>\",\n  \"appliedTo\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/policies/asa/accessgroups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"policies",
																"asa",
																"accessgroups"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "msp",
					"item": [
						{
							"name": "tenants",
							"item": [
								{
									"name": "{tenantUid}",
									"item": [
										{
											"name": "users",
											"item": [
												{
													"name": "groups",
													"item": [
														{
															"name": "Add Active Directory Groups to CDO tenant in MSP Portal",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"groupIdentifier\": \"<string>\",\n    \"issuerUrl\": \"<string>\",\n    \"name\": \"<string>\",\n    \"role\": \"<string>\",\n    \"notes\": \"<string>\"\n  },\n  {\n    \"groupIdentifier\": \"<string>\",\n    \"issuerUrl\": \"<string>\",\n    \"name\": \"<string>\",\n    \"role\": \"<string>\",\n    \"notes\": \"<string>\"\n  }\n]",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/msp/tenants/:tenantUid/users/groups",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"msp",
																		"tenants",
																		":tenantUid",
																		"users",
																		"groups"
																	],
																	"variable": [
																		{
																			"key": "tenantUid",
																			"value": "<uuid>",
																			"description": "(Required) Unique identifier of the tenant to which the user groups will be added."
																		}
																	]
																},
																"description": "This is an asynchronous operation to add a list of Active Directory Groups to a tenant associated with the MSP Portal."
															},
															"response": [
																{
																	"name": "CDO Transaction object that can be used to track the status of the operation.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "[\n  {\n    \"groupIdentifier\": \"<string>\",\n    \"issuerUrl\": \"<string>\",\n    \"name\": \"<string>\",\n    \"role\": \"<string>\",\n    \"notes\": \"<string>\"\n  },\n  {\n    \"groupIdentifier\": \"<string>\",\n    \"issuerUrl\": \"<string>\",\n    \"name\": \"<string>\",\n    \"role\": \"<string>\",\n    \"notes\": \"<string>\"\n  }\n]",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/msp/tenants/:tenantUid/users/groups",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"msp",
																				"tenants",
																				":tenantUid",
																				"users",
																				"groups"
																			],
																			"variable": [
																				{
																					"key": "tenantUid"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
																},
																{
																	"name": "Internal server error.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "[\n  {\n    \"groupIdentifier\": \"<string>\",\n    \"issuerUrl\": \"<string>\",\n    \"name\": \"<string>\",\n    \"role\": \"<string>\",\n    \"notes\": \"<string>\"\n  },\n  {\n    \"groupIdentifier\": \"<string>\",\n    \"issuerUrl\": \"<string>\",\n    \"name\": \"<string>\",\n    \"role\": \"<string>\",\n    \"notes\": \"<string>\"\n  }\n]",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/msp/tenants/:tenantUid/users/groups",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"msp",
																				"tenants",
																				":tenantUid",
																				"users",
																				"groups"
																			],
																			"variable": [
																				{
																					"key": "tenantUid"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
																}
															]
														}
													]
												},
												{
													"name": "Add users to CDO tenant in MSP Portal",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"users\": [\n    {\n      \"role\": \"ROLE_FWAAS\",\n      \"username\": \"<string>\"\n    },\n    {\n      \"role\": \"ROLE_VPN_SESSIONS_MANAGER\",\n      \"username\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/msp/tenants/:tenantUid/users",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"msp",
																"tenants",
																":tenantUid",
																"users"
															],
															"variable": [
																{
																	"key": "tenantUid",
																	"value": "<uuid>",
																	"description": "(Required) Unique identifier of the tenant to which the users will be added."
																}
															]
														},
														"description": "This is an asynchronous operation to add a list of users to a tenant associated with the MSP Portal. Note: this endpoint cannot be used to add API-only users."
													},
													"response": [
														{
															"name": "CDO Transaction object that can be used to track the status of the operation.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"users\": [\n    {\n      \"role\": \"ROLE_FWAAS\",\n      \"username\": \"<string>\"\n    },\n    {\n      \"role\": \"ROLE_VPN_SESSIONS_MANAGER\",\n      \"username\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/msp/tenants/:tenantUid/users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"msp",
																		"tenants",
																		":tenantUid",
																		"users"
																	],
																	"variable": [
																		{
																			"key": "tenantUid"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
														},
														{
															"name": "Internal server error.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"users\": [\n    {\n      \"role\": \"ROLE_FWAAS\",\n      \"username\": \"<string>\"\n    },\n    {\n      \"role\": \"ROLE_VPN_SESSIONS_MANAGER\",\n      \"username\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/msp/tenants/:tenantUid/users",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"msp",
																		"tenants",
																		":tenantUid",
																		"users"
																	],
																	"variable": [
																		{
																			"key": "tenantUid"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "mcd",
											"item": [
												{
													"name": "Enable Multicloud Defense for CDO tenant in MSP Portal",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/msp/tenants/:tenantUid/mcd",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"msp",
																"tenants",
																":tenantUid",
																"mcd"
															],
															"variable": [
																{
																	"key": "tenantUid",
																	"value": "<uuid>",
																	"description": "(Required) Unique identifier of the tenant that Multicloud Defense will be enabled for."
																}
															]
														},
														"description": "This is an asynchronous operation to enable Multicloud Defense for a tenant associated with the MSP Portal."
													},
													"response": [
														{
															"name": "CDO Transaction object that can be used to track the status of the operation.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/msp/tenants/:tenantUid/mcd",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"msp",
																		"tenants",
																		":tenantUid",
																		"mcd"
																	],
																	"variable": [
																		{
																			"key": "tenantUid"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
														},
														{
															"name": "Internal server error.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/msp/tenants/:tenantUid/mcd",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"msp",
																		"tenants",
																		":tenantUid",
																		"mcd"
																	],
																	"variable": [
																		{
																			"key": "tenantUid"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "cdfmc",
											"item": [
												{
													"name": "Provision cdFMC for CDO tenant in MSP Portal",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/msp/tenants/:tenantUid/cdfmc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"msp",
																"tenants",
																":tenantUid",
																"cdfmc"
															],
															"variable": [
																{
																	"key": "tenantUid",
																	"value": "<uuid>",
																	"description": "(Required) Unique identifier of the tenant that cdFMC provisioning will be enabled for."
																}
															]
														},
														"description": "This is an asynchronous operation to provision a cdFMC for a tenant associated with the MSP Portal. This operation does not wait for the cdFMC to be provisioned on the target tenant, and will be marked as successful once the provisioning has been successfully triggered. To monitor the transaction on the target tenant, use the UID in the `TRANSACTION_UID_IN_TARGET_TENANT` key in the transaction details."
													},
													"response": [
														{
															"name": "CDO Transaction object that can be used to track the status of the operation.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/msp/tenants/:tenantUid/cdfmc",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"msp",
																		"tenants",
																		":tenantUid",
																		"cdfmc"
																	],
																	"variable": [
																		{
																			"key": "tenantUid"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
														},
														{
															"name": "Internal server error.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/msp/tenants/:tenantUid/cdfmc",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"msp",
																		"tenants",
																		":tenantUid",
																		"cdfmc"
																	],
																	"variable": [
																		{
																			"key": "tenantUid"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "Add tenant to MSP Portal",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/msp/tenants/:tenantUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"msp",
														"tenants",
														":tenantUid"
													],
													"variable": [
														{
															"key": "tenantUid",
															"value": "<uuid>",
															"description": "(Required) Unique identifier of the tenant to add to the MSP portal."
														}
													]
												},
												"description": "This is an asynchronous operation to add an existing tenant that the user making the API call is associated with to the MSP Portal. This endpoint will add an API-only user to the tenant, generate an API token for the API-only user, and add the tenant to the MSP Portal. Note: this endpoint can only be executed by a super-admin in the MSP Portal who is also associated with the tenant being added."
											},
											"response": [
												{
													"name": "CDO Transaction object that can be used to track the status of the operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/msp/tenants/:tenantUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"msp",
																"tenants",
																":tenantUid"
															],
															"variable": [
																{
																	"key": "tenantUid"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/msp/tenants/:tenantUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"msp",
																"tenants",
																":tenantUid"
															],
															"variable": [
																{
																	"key": "tenantUid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/msp/tenants/:tenantUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"msp",
																"tenants",
																":tenantUid"
															],
															"variable": [
																{
																	"key": "tenantUid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/msp/tenants/:tenantUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"msp",
																"tenants",
																":tenantUid"
															],
															"variable": [
																{
																	"key": "tenantUid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Conflict.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/msp/tenants/:tenantUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"msp",
																"tenants",
																":tenantUid"
															],
															"variable": [
																{
																	"key": "tenantUid"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/msp/tenants/:tenantUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"msp",
																"tenants",
																":tenantUid"
															],
															"variable": [
																{
																	"key": "tenantUid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "create",
									"item": [
										{
											"name": "Create CDO Tenant",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tenantName\": \"HZa3bkwCos-ftFGrl56tbSTfZEGRmrEhAd64agJCCJXdINk\",\n  \"displayName\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/msp/tenants/create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"msp",
														"tenants",
														"create"
													]
												},
												"description": "Create a new tenant in CDO from an MSP Portal. This endpoint creates a tenant, adds the tenant to the MSP Portal. If the user creating the tenant is not an API-only user, the user is also added to the tenant. Note: This endpoint can only be executed by a super-admin in an MSP Portal. You can create no more than 1 tenant every 30 seconds. Additionally, you are limited to creating a total of 100 tenants: please speak to support to raise this limit."
											},
											"response": [
												{
													"name": "CDO Transaction object that can be used to track the status of the tenant creation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenantName\": \"HZa3bkwCos-ftFGrl56tbSTfZEGRmrEhAd64agJCCJXdINk\",\n  \"displayName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/msp/tenants/create",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"msp",
																"tenants",
																"create"
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenantName\": \"HZa3bkwCos-ftFGrl56tbSTfZEGRmrEhAd64agJCCJXdINk\",\n  \"displayName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/msp/tenants/create",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"msp",
																"tenants",
																"create"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenantName\": \"HZa3bkwCos-ftFGrl56tbSTfZEGRmrEhAd64agJCCJXdINk\",\n  \"displayName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/msp/tenants/create",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"msp",
																"tenants",
																"create"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenantName\": \"HZa3bkwCos-ftFGrl56tbSTfZEGRmrEhAd64agJCCJXdINk\",\n  \"displayName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/msp/tenants/create",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"msp",
																"tenants",
																"create"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Conflict.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenantName\": \"HZa3bkwCos-ftFGrl56tbSTfZEGRmrEhAd64agJCCJXdINk\",\n  \"displayName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/msp/tenants/create",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"msp",
																"tenants",
																"create"
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenantName\": \"HZa3bkwCos-ftFGrl56tbSTfZEGRmrEhAd64agJCCJXdINk\",\n  \"displayName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/msp/tenants/create",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"msp",
																"tenants",
																"create"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Add Tenant to MSP Portal (API token)",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"apiToken\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/msp/tenants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"msp",
												"tenants"
											]
										},
										"description": "Add a tenant to the MSP Portal by providing an API token for the tenant. Use this endpoint to add a tenant that the user performing the operation is not associated with, or a tenant in a different region to that of the MSP Portal. Note: This endpoint can only be executed by a super-admin in an MSP Portal."
									},
									"response": [
										{
											"name": "Status",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"apiToken\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/msp/tenants",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"msp",
														"tenants"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"<string>\"\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"apiToken\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/msp/tenants",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"msp",
														"tenants"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"apiToken\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/msp/tenants",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"msp",
														"tenants"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"apiToken\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/msp/tenants",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"msp",
														"tenants"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"apiToken\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/msp/tenants",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"msp",
														"tenants"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "inventory",
					"item": [
						{
							"name": "managers",
							"item": [
								{
									"name": "mcd",
									"item": [
										{
											"name": "Enable Multicloud Defense",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/managers/mcd",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"managers",
														"mcd"
													]
												},
												"description": "This is an asynchronous operation to Enable Multicloud Defense for the CDO tenant. This operation returns a link to a transaction object that can be used to monitor the progress of the operation."
											},
											"response": [
												{
													"name": "CDO Transaction object that can be used to track the status of the operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/mcd",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																"mcd"
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/mcd",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																"mcd"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/mcd",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																"mcd"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/mcd",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																"mcd"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Conflict.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/mcd",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																"mcd"
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/mcd",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																"mcd"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "cdfmc",
									"item": [
										{
											"name": "Provision cdFMC",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/managers/cdfmc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"managers",
														"cdfmc"
													]
												},
												"description": "This is an asynchronous operation to provision a cloud-delivered FMC in a tenant. This operation can only be performed as a super-admin user."
											},
											"response": [
												{
													"name": "CDO Transaction object that can be used to track the status of the operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/cdfmc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																"cdfmc"
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/cdfmc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																"cdfmc"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/cdfmc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																"cdfmc"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/cdfmc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																"cdfmc"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Conflict.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/cdfmc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																"cdfmc"
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/cdfmc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																"cdfmc"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "{deviceManagerUid}",
									"item": [
										{
											"name": "Get Device Manager",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/managers/:deviceManagerUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"managers",
														":deviceManagerUid"
													],
													"variable": [
														{
															"key": "deviceManagerUid",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the device manager in CDO."
														}
													]
												},
												"description": "Get a Device Manager by UID in the CDO tenant."
											},
											"response": [
												{
													"name": "Device Manager",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/:deviceManagerUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																":deviceManagerUid"
															],
															"variable": [
																{
																	"key": "deviceManagerUid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"deviceType\": \"CDFMC\",\n  \"name\": \"<string>\",\n  \"uid\": \"<uuid>\",\n  \"connectorType\": \"SDC\",\n  \"connectorUid\": \"<uuid>\",\n  \"address\": \"<string>\",\n  \"deviceRole\": \"ZTNA_PROVIDER\",\n  \"serial\": \"<string>\",\n  \"chassisSerial\": \"<string>\",\n  \"softwareVersion\": \"<string>\",\n  \"connectivityState\": \"UNKNOWN\",\n  \"configState\": \"NOT_SYNCED\",\n  \"conflictDetectionState\": \"NO_CONFLICTS\",\n  \"notes\": \"<string>\",\n  \"asdmVersion\": \"<string>\",\n  \"asaFailoverMode\": \"OFF\",\n  \"asaFailoverState\": \"<string>\",\n  \"asaFailoverMate\": {\n    \"failoverState\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"softwareVersion\": \"<string>\"\n  },\n  \"asaLicenseEntitlements\": {\n    \"pariatur__b5\": \"<string>\"\n  },\n  \"ftdLicenses\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"snortVersion\": \"<string>\",\n  \"ftdPerformanceTier\": \"<string>\",\n  \"redundancyMode\": \"HA\",\n  \"cdFmcInfo\": {\n    \"cliKey\": \"<string>\",\n    \"regKey\": \"<string>\",\n    \"natId\": \"<string>\"\n  },\n  \"sseDeviceData\": {\n    \"sseDeviceId\": \"<string>\",\n    \"sseProtocolVersion\": \"TWO\"\n  },\n  \"onPremFmcInfo\": {\n    \"name\": \"<string>\",\n    \"address\": \"<string>\"\n  },\n  \"ftdClusterInfo\": {\n    \"controlNode\": {\n      \"serial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"status\": \"JOINING\"\n    },\n    \"dataNodes\": [\n      {\n        \"serial\": \"<string>\",\n        \"softwareVersion\": \"<string>\",\n        \"uidOnFmc\": \"<uuid>\",\n        \"status\": \"UNKNOWN\"\n      },\n      {\n        \"serial\": \"<string>\",\n        \"softwareVersion\": \"<string>\",\n        \"uidOnFmc\": \"<uuid>\",\n        \"status\": \"JOINING\"\n      }\n    ]\n  },\n  \"ftdHaInfo\": {\n    \"primaryNode\": {\n      \"serial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"status\": \"NORMAL\"\n    },\n    \"secondaryNode\": {\n      \"serial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"status\": \"DISABLED\"\n    }\n  },\n  \"merakiDeploymentMode\": \"ROUTED\",\n  \"merakiNetwork\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"timezone\": \"<string>\"\n  },\n  \"state\": \"<string>\",\n  \"stateMachineDetails\": {\n    \"identifier\": \"<string>\",\n    \"lastError\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<string>\",\n      \"actionIdentifier\": \"<string>\"\n    }\n  },\n  \"labels\": {\n    \"groupedLabels\": {\n      \"exercitationda\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"nulla54\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"fmcDomainUid\": \"<uuid>\",\n  \"uidOnFmc\": \"<uuid>\",\n  \"modelNumber\": \"<string>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/:deviceManagerUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																":deviceManagerUid"
															],
															"variable": [
																{
																	"key": "deviceManagerUid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/:deviceManagerUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																":deviceManagerUid"
															],
															"variable": [
																{
																	"key": "deviceManagerUid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/:deviceManagerUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																":deviceManagerUid"
															],
															"variable": [
																{
																	"key": "deviceManagerUid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Entity not found.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/:deviceManagerUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																":deviceManagerUid"
															],
															"variable": [
																{
																	"key": "deviceManagerUid"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/:deviceManagerUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																":deviceManagerUid"
															],
															"variable": [
																{
																	"key": "deviceManagerUid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										},
										{
											"name": "Delete Device Manager",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/managers/:deviceManagerUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"managers",
														":deviceManagerUid"
													],
													"variable": [
														{
															"key": "deviceManagerUid",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the device manager in CDO."
														}
													]
												},
												"description": "Delete a Device Manager by UID in the CDO tenant."
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/:deviceManagerUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																":deviceManagerUid"
															],
															"variable": [
																{
																	"key": "deviceManagerUid"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/:deviceManagerUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																":deviceManagerUid"
															],
															"variable": [
																{
																	"key": "deviceManagerUid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/:deviceManagerUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																":deviceManagerUid"
															],
															"variable": [
																{
																	"key": "deviceManagerUid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/:deviceManagerUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																":deviceManagerUid"
															],
															"variable": [
																{
																	"key": "deviceManagerUid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Method not allowed.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/:deviceManagerUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																":deviceManagerUid"
															],
															"variable": [
																{
																	"key": "deviceManagerUid"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/:deviceManagerUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																":deviceManagerUid"
															],
															"variable": [
																{
																	"key": "deviceManagerUid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										},
										{
											"name": "Modify Device Manager",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/managers/:deviceManagerUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"managers",
														":deviceManagerUid"
													],
													"variable": [
														{
															"key": "deviceManagerUid",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the device manager in CDO."
														}
													]
												},
												"description": "Modify a device manager by UID in the CDO tenant."
											},
											"response": [
												{
													"name": "Device manager",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/:deviceManagerUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																":deviceManagerUid"
															],
															"variable": [
																{
																	"key": "deviceManagerUid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"deviceType\": \"CDFMC\",\n  \"name\": \"<string>\",\n  \"uid\": \"<uuid>\",\n  \"connectorType\": \"SDC\",\n  \"connectorUid\": \"<uuid>\",\n  \"address\": \"<string>\",\n  \"deviceRole\": \"ZTNA_PROVIDER\",\n  \"serial\": \"<string>\",\n  \"chassisSerial\": \"<string>\",\n  \"softwareVersion\": \"<string>\",\n  \"connectivityState\": \"UNKNOWN\",\n  \"configState\": \"NOT_SYNCED\",\n  \"conflictDetectionState\": \"NO_CONFLICTS\",\n  \"notes\": \"<string>\",\n  \"asdmVersion\": \"<string>\",\n  \"asaFailoverMode\": \"OFF\",\n  \"asaFailoverState\": \"<string>\",\n  \"asaFailoverMate\": {\n    \"failoverState\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"softwareVersion\": \"<string>\"\n  },\n  \"asaLicenseEntitlements\": {\n    \"pariatur__b5\": \"<string>\"\n  },\n  \"ftdLicenses\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"snortVersion\": \"<string>\",\n  \"ftdPerformanceTier\": \"<string>\",\n  \"redundancyMode\": \"HA\",\n  \"cdFmcInfo\": {\n    \"cliKey\": \"<string>\",\n    \"regKey\": \"<string>\",\n    \"natId\": \"<string>\"\n  },\n  \"sseDeviceData\": {\n    \"sseDeviceId\": \"<string>\",\n    \"sseProtocolVersion\": \"TWO\"\n  },\n  \"onPremFmcInfo\": {\n    \"name\": \"<string>\",\n    \"address\": \"<string>\"\n  },\n  \"ftdClusterInfo\": {\n    \"controlNode\": {\n      \"serial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"status\": \"JOINING\"\n    },\n    \"dataNodes\": [\n      {\n        \"serial\": \"<string>\",\n        \"softwareVersion\": \"<string>\",\n        \"uidOnFmc\": \"<uuid>\",\n        \"status\": \"UNKNOWN\"\n      },\n      {\n        \"serial\": \"<string>\",\n        \"softwareVersion\": \"<string>\",\n        \"uidOnFmc\": \"<uuid>\",\n        \"status\": \"JOINING\"\n      }\n    ]\n  },\n  \"ftdHaInfo\": {\n    \"primaryNode\": {\n      \"serial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"status\": \"NORMAL\"\n    },\n    \"secondaryNode\": {\n      \"serial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"status\": \"DISABLED\"\n    }\n  },\n  \"merakiDeploymentMode\": \"ROUTED\",\n  \"merakiNetwork\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"timezone\": \"<string>\"\n  },\n  \"state\": \"<string>\",\n  \"stateMachineDetails\": {\n    \"identifier\": \"<string>\",\n    \"lastError\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<string>\",\n      \"actionIdentifier\": \"<string>\"\n    }\n  },\n  \"labels\": {\n    \"groupedLabels\": {\n      \"exercitationda\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"nulla54\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"fmcDomainUid\": \"<uuid>\",\n  \"uidOnFmc\": \"<uuid>\",\n  \"modelNumber\": \"<string>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/:deviceManagerUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																":deviceManagerUid"
															],
															"variable": [
																{
																	"key": "deviceManagerUid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/:deviceManagerUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																":deviceManagerUid"
															],
															"variable": [
																{
																	"key": "deviceManagerUid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/:deviceManagerUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																":deviceManagerUid"
															],
															"variable": [
																{
																	"key": "deviceManagerUid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Entity not found.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/:deviceManagerUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																":deviceManagerUid"
															],
															"variable": [
																{
																	"key": "deviceManagerUid"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/managers/:deviceManagerUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"managers",
																":deviceManagerUid"
															],
															"variable": [
																{
																	"key": "deviceManagerUid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "{fmcUid}",
									"item": [
										{
											"name": "health",
											"item": [
												{
													"name": "metrics",
													"item": [
														{
															"name": "Get health metrics on devices managed by the FMC (cdFMC only)",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/inventory/managers/:fmcUid/health/metrics?timeRange=5m",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"inventory",
																		"managers",
																		":fmcUid",
																		"health",
																		"metrics"
																	],
																	"query": [
																		{
																			"key": "timeRange",
																			"value": "5m",
																			"description": "The time range for which results should be retrieved."
																		}
																	],
																	"variable": [
																		{
																			"key": "fmcUid",
																			"value": "<uuid>",
																			"description": "(Required) The unique identifier of the FMC in CDO."
																		}
																	]
																},
																"description": "Get metrics that indicate the current health of all devices managed by the cdFMC. Note: For specific health metrics to be available for a given device under management of the cdFMC, the health policy for that device should be configured to collect those metrics. For example, CPU metrics will be unavailable for a device if the health policy applied to that device has CPU metric collection turned off. Note: This endpoint can only be queried once every minute."
															},
															"response": [
																{
																	"name": "FMC health metrics",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/managers/:fmcUid/health/metrics?timeRange=5m",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"managers",
																				":fmcUid",
																				"health",
																				"metrics"
																			],
																			"query": [
																				{
																					"key": "timeRange",
																					"value": "5m",
																					"description": "The time range for which results should be retrieved."
																				}
																			],
																			"variable": [
																				{
																					"key": "fmcUid"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"deviceUid\": \"<uuid>\",\n    \"deviceName\": \"<string>\",\n    \"cpuHealthMetrics\": {\n      \"linaUsageAvg\": \"<number>\",\n      \"snortUsageAvg\": \"<number>\",\n      \"systemUsageAvg\": \"<number>\"\n    },\n    \"memoryHealthMetrics\": {\n      \"linaUsageAvg\": \"<number>\",\n      \"snortUsageAvg\": \"<number>\",\n      \"systemUsageAvg\": \"<number>\"\n    },\n    \"diskHealthMetrics\": {\n      \"totalDiskUsageAvg\": \"<number>\"\n    },\n    \"chassisStatsHealthMetrics\": {\n      \"fan1RpmAvg\": \"<number>\",\n      \"fan2RpmAvg\": \"<number>\",\n      \"fan3RpmAvg\": \"<number>\",\n      \"fan4RpmAvg\": \"<number>\"\n    },\n    \"interfaceHealthMetrics\": [\n      {\n        \"interfaceName\": \"<string>\",\n        \"linkStatus\": \"<string>\",\n        \"bufferUnderrunsAvg\": \"<number>\",\n        \"bufferOverrunsAvg\": \"<number>\",\n        \"dropPacketsAvg\": \"<number>\",\n        \"l2DecodeDropsAvg\": \"<number>\",\n        \"operationalStatus\": \"<string>\",\n        \"inputErrorsAvg\": \"<number>\",\n        \"outputErrorsAvg\": \"<number>\",\n        \"inputBytesAvg\": \"<number>\",\n        \"outputBytesAvg\": \"<number>\",\n        \"inputPacketSizeAvg\": \"<number>\",\n        \"outputPacketSizeAvg\": \"<number>\",\n        \"duplexMode\": \"<string>\",\n        \"interfaceType\": \"<string>\",\n        \"interface\": \"<string>\"\n      },\n      {\n        \"interfaceName\": \"<string>\",\n        \"linkStatus\": \"<string>\",\n        \"bufferUnderrunsAvg\": \"<number>\",\n        \"bufferOverrunsAvg\": \"<number>\",\n        \"dropPacketsAvg\": \"<number>\",\n        \"l2DecodeDropsAvg\": \"<number>\",\n        \"operationalStatus\": \"<string>\",\n        \"inputErrorsAvg\": \"<number>\",\n        \"outputErrorsAvg\": \"<number>\",\n        \"inputBytesAvg\": \"<number>\",\n        \"outputBytesAvg\": \"<number>\",\n        \"inputPacketSizeAvg\": \"<number>\",\n        \"outputPacketSizeAvg\": \"<number>\",\n        \"duplexMode\": \"<string>\",\n        \"interfaceType\": \"<string>\",\n        \"interface\": \"<string>\"\n      }\n    ]\n  },\n  {\n    \"deviceUid\": \"<uuid>\",\n    \"deviceName\": \"<string>\",\n    \"cpuHealthMetrics\": {\n      \"linaUsageAvg\": \"<number>\",\n      \"snortUsageAvg\": \"<number>\",\n      \"systemUsageAvg\": \"<number>\"\n    },\n    \"memoryHealthMetrics\": {\n      \"linaUsageAvg\": \"<number>\",\n      \"snortUsageAvg\": \"<number>\",\n      \"systemUsageAvg\": \"<number>\"\n    },\n    \"diskHealthMetrics\": {\n      \"totalDiskUsageAvg\": \"<number>\"\n    },\n    \"chassisStatsHealthMetrics\": {\n      \"fan1RpmAvg\": \"<number>\",\n      \"fan2RpmAvg\": \"<number>\",\n      \"fan3RpmAvg\": \"<number>\",\n      \"fan4RpmAvg\": \"<number>\"\n    },\n    \"interfaceHealthMetrics\": [\n      {\n        \"interfaceName\": \"<string>\",\n        \"linkStatus\": \"<string>\",\n        \"bufferUnderrunsAvg\": \"<number>\",\n        \"bufferOverrunsAvg\": \"<number>\",\n        \"dropPacketsAvg\": \"<number>\",\n        \"l2DecodeDropsAvg\": \"<number>\",\n        \"operationalStatus\": \"<string>\",\n        \"inputErrorsAvg\": \"<number>\",\n        \"outputErrorsAvg\": \"<number>\",\n        \"inputBytesAvg\": \"<number>\",\n        \"outputBytesAvg\": \"<number>\",\n        \"inputPacketSizeAvg\": \"<number>\",\n        \"outputPacketSizeAvg\": \"<number>\",\n        \"duplexMode\": \"<string>\",\n        \"interfaceType\": \"<string>\",\n        \"interface\": \"<string>\"\n      },\n      {\n        \"interfaceName\": \"<string>\",\n        \"linkStatus\": \"<string>\",\n        \"bufferUnderrunsAvg\": \"<number>\",\n        \"bufferOverrunsAvg\": \"<number>\",\n        \"dropPacketsAvg\": \"<number>\",\n        \"l2DecodeDropsAvg\": \"<number>\",\n        \"operationalStatus\": \"<string>\",\n        \"inputErrorsAvg\": \"<number>\",\n        \"outputErrorsAvg\": \"<number>\",\n        \"inputBytesAvg\": \"<number>\",\n        \"outputBytesAvg\": \"<number>\",\n        \"inputPacketSizeAvg\": \"<number>\",\n        \"outputPacketSizeAvg\": \"<number>\",\n        \"duplexMode\": \"<string>\",\n        \"interfaceType\": \"<string>\",\n        \"interface\": \"<string>\"\n      }\n    ]\n  }\n]"
																},
																{
																	"name": "Invalid input provided. Check the response for details.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/managers/:fmcUid/health/metrics?timeRange=5m",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"managers",
																				":fmcUid",
																				"health",
																				"metrics"
																			],
																			"query": [
																				{
																					"key": "timeRange",
																					"value": "5m",
																					"description": "The time range for which results should be retrieved."
																				}
																			],
																			"variable": [
																				{
																					"key": "fmcUid"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
																},
																{
																	"name": "Request not authorized.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/managers/:fmcUid/health/metrics?timeRange=5m",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"managers",
																				":fmcUid",
																				"health",
																				"metrics"
																			],
																			"query": [
																				{
																					"key": "timeRange",
																					"value": "5m",
																					"description": "The time range for which results should be retrieved."
																				}
																			],
																			"variable": [
																				{
																					"key": "fmcUid"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
																},
																{
																	"name": "User does not have sufficient privileges to perform this operation.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/managers/:fmcUid/health/metrics?timeRange=5m",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"managers",
																				":fmcUid",
																				"health",
																				"metrics"
																			],
																			"query": [
																				{
																					"key": "timeRange",
																					"value": "5m",
																					"description": "The time range for which results should be retrieved."
																				}
																			],
																			"variable": [
																				{
																					"key": "fmcUid"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
																},
																{
																	"name": "Method not allowed.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/managers/:fmcUid/health/metrics?timeRange=5m",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"managers",
																				":fmcUid",
																				"health",
																				"metrics"
																			],
																			"query": [
																				{
																					"key": "timeRange",
																					"value": "5m",
																					"description": "The time range for which results should be retrieved."
																				}
																			],
																			"variable": [
																				{
																					"key": "fmcUid"
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
																},
																{
																	"name": "Internal server error.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/managers/:fmcUid/health/metrics?timeRange=5m",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"managers",
																				":fmcUid",
																				"health",
																				"metrics"
																			],
																			"query": [
																				{
																					"key": "timeRange",
																					"value": "5m",
																					"description": "The time range for which results should be retrieved."
																				}
																			],
																			"variable": [
																				{
																					"key": "fmcUid"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "Get Device Managers",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inventory/managers?limit=50&offset=0&q=<string>&sort=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inventory",
												"managers"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										},
										"description": "Fetch a list of Device Managers (on-prem FMCs and cloud-delivered FMCs) in the CDO tenant."
									},
									"response": [
										{
											"name": "List of Device Manager objects",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/managers?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"managers"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"items\": [\n    {\n      \"deviceType\": \"ONPREM_FMC_NGIPS\",\n      \"name\": \"<string>\",\n      \"uid\": \"<uuid>\",\n      \"connectorType\": \"SDC\",\n      \"connectorUid\": \"<uuid>\",\n      \"address\": \"<string>\",\n      \"deviceRole\": \"RA_VPN_HEADEND\",\n      \"serial\": \"<string>\",\n      \"chassisSerial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"connectivityState\": \"BAD_CREDENTIALS\",\n      \"configState\": \"NOT_SYNCED\",\n      \"conflictDetectionState\": \"NO_CONFLICTS\",\n      \"notes\": \"<string>\",\n      \"asdmVersion\": \"<string>\",\n      \"asaFailoverMode\": \"ACTIVE_STANDBY\",\n      \"asaFailoverState\": \"<string>\",\n      \"asaFailoverMate\": {\n        \"failoverState\": \"<string>\",\n        \"serial\": \"<string>\",\n        \"softwareVersion\": \"<string>\"\n      },\n      \"asaLicenseEntitlements\": {\n        \"consequat_4\": \"<string>\"\n      },\n      \"ftdLicenses\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"snortVersion\": \"<string>\",\n      \"ftdPerformanceTier\": \"<string>\",\n      \"redundancyMode\": \"STANDALONE\",\n      \"cdFmcInfo\": {\n        \"cliKey\": \"<string>\",\n        \"regKey\": \"<string>\",\n        \"natId\": \"<string>\"\n      },\n      \"sseDeviceData\": {\n        \"sseDeviceId\": \"<string>\",\n        \"sseProtocolVersion\": \"TWO\"\n      },\n      \"onPremFmcInfo\": {\n        \"name\": \"<string>\",\n        \"address\": \"<string>\"\n      },\n      \"ftdClusterInfo\": {\n        \"controlNode\": {\n          \"serial\": \"<string>\",\n          \"softwareVersion\": \"<string>\",\n          \"uidOnFmc\": \"<uuid>\",\n          \"status\": \"JOINING\"\n        },\n        \"dataNodes\": [\n          {\n            \"serial\": \"<string>\",\n            \"softwareVersion\": \"<string>\",\n            \"uidOnFmc\": \"<uuid>\",\n            \"status\": \"ADDED_OUT_OF_BOX\"\n          },\n          {\n            \"serial\": \"<string>\",\n            \"softwareVersion\": \"<string>\",\n            \"uidOnFmc\": \"<uuid>\",\n            \"status\": \"ADDED_OUT_OF_BOX\"\n          }\n        ]\n      },\n      \"ftdHaInfo\": {\n        \"primaryNode\": {\n          \"serial\": \"<string>\",\n          \"softwareVersion\": \"<string>\",\n          \"uidOnFmc\": \"<uuid>\",\n          \"status\": \"WARNING\"\n        },\n        \"secondaryNode\": {\n          \"serial\": \"<string>\",\n          \"softwareVersion\": \"<string>\",\n          \"uidOnFmc\": \"<uuid>\",\n          \"status\": \"DISABLED\"\n        }\n      },\n      \"merakiDeploymentMode\": \"ROUTED\",\n      \"merakiNetwork\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"timezone\": \"<string>\"\n      },\n      \"state\": \"<string>\",\n      \"stateMachineDetails\": {\n        \"identifier\": \"<string>\",\n        \"lastError\": {\n          \"errorMessage\": \"<string>\",\n          \"errorCode\": \"<string>\",\n          \"actionIdentifier\": \"<string>\"\n        }\n      },\n      \"labels\": {\n        \"groupedLabels\": {\n          \"cupidatat__\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        \"ungroupedLabels\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"fmcDomainUid\": \"<uuid>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"modelNumber\": \"<string>\"\n    },\n    {\n      \"deviceType\": \"MERAKI_MX\",\n      \"name\": \"<string>\",\n      \"uid\": \"<uuid>\",\n      \"connectorType\": \"CDG\",\n      \"connectorUid\": \"<uuid>\",\n      \"address\": \"<string>\",\n      \"deviceRole\": \"ANYCONNECT_VPN_HEAD_END\",\n      \"serial\": \"<string>\",\n      \"chassisSerial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"connectivityState\": \"ONLINE\",\n      \"configState\": \"UNKNOWN\",\n      \"conflictDetectionState\": \"NO_CONFLICTS\",\n      \"notes\": \"<string>\",\n      \"asdmVersion\": \"<string>\",\n      \"asaFailoverMode\": \"OFF\",\n      \"asaFailoverState\": \"<string>\",\n      \"asaFailoverMate\": {\n        \"failoverState\": \"<string>\",\n        \"serial\": \"<string>\",\n        \"softwareVersion\": \"<string>\"\n      },\n      \"asaLicenseEntitlements\": {\n        \"consequat_d5\": \"<string>\"\n      },\n      \"ftdLicenses\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"snortVersion\": \"<string>\",\n      \"ftdPerformanceTier\": \"<string>\",\n      \"redundancyMode\": \"CLUSTER\",\n      \"cdFmcInfo\": {\n        \"cliKey\": \"<string>\",\n        \"regKey\": \"<string>\",\n        \"natId\": \"<string>\"\n      },\n      \"sseDeviceData\": {\n        \"sseDeviceId\": \"<string>\",\n        \"sseProtocolVersion\": \"ONE\"\n      },\n      \"onPremFmcInfo\": {\n        \"name\": \"<string>\",\n        \"address\": \"<string>\"\n      },\n      \"ftdClusterInfo\": {\n        \"controlNode\": {\n          \"serial\": \"<string>\",\n          \"softwareVersion\": \"<string>\",\n          \"uidOnFmc\": \"<uuid>\",\n          \"status\": \"DISABLED\"\n        },\n        \"dataNodes\": [\n          {\n            \"serial\": \"<string>\",\n            \"softwareVersion\": \"<string>\",\n            \"uidOnFmc\": \"<uuid>\",\n            \"status\": \"NOT_AVAILABLE\"\n          },\n          {\n            \"serial\": \"<string>\",\n            \"softwareVersion\": \"<string>\",\n            \"uidOnFmc\": \"<uuid>\",\n            \"status\": \"DISABLED\"\n          }\n        ]\n      },\n      \"ftdHaInfo\": {\n        \"primaryNode\": {\n          \"serial\": \"<string>\",\n          \"softwareVersion\": \"<string>\",\n          \"uidOnFmc\": \"<uuid>\",\n          \"status\": \"WARNING\"\n        },\n        \"secondaryNode\": {\n          \"serial\": \"<string>\",\n          \"softwareVersion\": \"<string>\",\n          \"uidOnFmc\": \"<uuid>\",\n          \"status\": \"UNKNOWN\"\n        }\n      },\n      \"merakiDeploymentMode\": \"ROUTED\",\n      \"merakiNetwork\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"timezone\": \"<string>\"\n      },\n      \"state\": \"<string>\",\n      \"stateMachineDetails\": {\n        \"identifier\": \"<string>\",\n        \"lastError\": {\n          \"errorMessage\": \"<string>\",\n          \"errorCode\": \"<string>\",\n          \"actionIdentifier\": \"<string>\"\n        }\n      },\n      \"labels\": {\n        \"groupedLabels\": {\n          \"sint_2db\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"consequat05\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dolor0\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"amet_2\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"exercitation0\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        \"ungroupedLabels\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"fmcDomainUid\": \"<uuid>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"modelNumber\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/managers?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"managers"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/managers?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"managers"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/managers?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"managers"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/managers?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"managers"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "devices",
							"item": [
								{
									"name": "ios",
									"item": [
										{
											"name": "Onboard IOS Device",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"connectorName\": \"<string>\",\n  \"name\": \"<string>\",\n  \"password\": \"<string>\",\n  \"username\": \"<string>\",\n  \"deviceAddress\": \"<string>\",\n  \"ignoreCertificate\": false,\n  \"labels\": {\n    \"groupedLabels\": {\n      \"esse8\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/devices/ios",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"devices",
														"ios"
													]
												},
												"description": "Onboard a IOS device in the CDO tenant. This operation returns a link to a transaction object that can be used to monitor the progress of the operation."
											},
											"response": [
												{
													"name": "CDO Transaction object that can be used to track the progress of the onboarding operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"connectorName\": \"<string>\",\n  \"name\": \"<string>\",\n  \"password\": \"<string>\",\n  \"username\": \"<string>\",\n  \"deviceAddress\": \"<string>\",\n  \"ignoreCertificate\": false,\n  \"labels\": {\n    \"groupedLabels\": {\n      \"esse8\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/ios",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																"ios"
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"connectorName\": \"<string>\",\n  \"name\": \"<string>\",\n  \"password\": \"<string>\",\n  \"username\": \"<string>\",\n  \"deviceAddress\": \"<string>\",\n  \"ignoreCertificate\": false,\n  \"labels\": {\n    \"groupedLabels\": {\n      \"esse8\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/ios",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																"ios"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"connectorName\": \"<string>\",\n  \"name\": \"<string>\",\n  \"password\": \"<string>\",\n  \"username\": \"<string>\",\n  \"deviceAddress\": \"<string>\",\n  \"ignoreCertificate\": false,\n  \"labels\": {\n    \"groupedLabels\": {\n      \"esse8\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/ios",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																"ios"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"connectorName\": \"<string>\",\n  \"name\": \"<string>\",\n  \"password\": \"<string>\",\n  \"username\": \"<string>\",\n  \"deviceAddress\": \"<string>\",\n  \"ignoreCertificate\": false,\n  \"labels\": {\n    \"groupedLabels\": {\n      \"esse8\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/ios",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																"ios"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"connectorName\": \"<string>\",\n  \"name\": \"<string>\",\n  \"password\": \"<string>\",\n  \"username\": \"<string>\",\n  \"deviceAddress\": \"<string>\",\n  \"ignoreCertificate\": false,\n  \"labels\": {\n    \"groupedLabels\": {\n      \"esse8\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/ios",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																"ios"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "ftds",
									"item": [
										{
											"name": "ztp",
											"item": [
												{
													"name": "Onboard FTD device using Zero-Touch Provisioning",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"fmcAccessPolicyUid\": \"<uuid>\",\n  \"licenses\": \"THREAT\",\n  \"name\": \"<string>\",\n  \"serialNumber\": \"<string>\",\n  \"adminPassword\": \"<string>\",\n  \"deviceGroupUid\": \"<uuid>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/ftds/ztp",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																"ftds",
																"ztp"
															]
														},
														"description": "This is an asynchronous operation to onboard a cdFMC managed FTD using Zero-Touch Provisioning. The operation returns a transaction object that can be used to track the progress of the onboarding operation. Note: This operation will be marked as complete once CDO is ready to handle a response from the device once it is plugged in and connected to the Internet; it does not wait for the device to communicate back to CDO."
													},
													"response": [
														{
															"name": "CDO Transaction object that can be used to track the progress of the creation operation.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"fmcAccessPolicyUid\": \"<uuid>\",\n  \"licenses\": \"THREAT\",\n  \"name\": \"<string>\",\n  \"serialNumber\": \"<string>\",\n  \"adminPassword\": \"<string>\",\n  \"deviceGroupUid\": \"<uuid>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/inventory/devices/ftds/ztp",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"inventory",
																		"devices",
																		"ftds",
																		"ztp"
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
														},
														{
															"name": "Invalid input provided. Check the response for details.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"fmcAccessPolicyUid\": \"<uuid>\",\n  \"licenses\": \"THREAT\",\n  \"name\": \"<string>\",\n  \"serialNumber\": \"<string>\",\n  \"adminPassword\": \"<string>\",\n  \"deviceGroupUid\": \"<uuid>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/inventory/devices/ftds/ztp",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"inventory",
																		"devices",
																		"ftds",
																		"ztp"
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "Request not authorized.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"fmcAccessPolicyUid\": \"<uuid>\",\n  \"licenses\": \"THREAT\",\n  \"name\": \"<string>\",\n  \"serialNumber\": \"<string>\",\n  \"adminPassword\": \"<string>\",\n  \"deviceGroupUid\": \"<uuid>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/inventory/devices/ftds/ztp",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"inventory",
																		"devices",
																		"ftds",
																		"ztp"
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
														},
														{
															"name": "User does not have sufficient privileges to perform this operation.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"fmcAccessPolicyUid\": \"<uuid>\",\n  \"licenses\": \"THREAT\",\n  \"name\": \"<string>\",\n  \"serialNumber\": \"<string>\",\n  \"adminPassword\": \"<string>\",\n  \"deviceGroupUid\": \"<uuid>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/inventory/devices/ftds/ztp",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"inventory",
																		"devices",
																		"ftds",
																		"ztp"
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "Internal server error.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"fmcAccessPolicyUid\": \"<uuid>\",\n  \"licenses\": \"THREAT\",\n  \"name\": \"<string>\",\n  \"serialNumber\": \"<string>\",\n  \"adminPassword\": \"<string>\",\n  \"deviceGroupUid\": \"<uuid>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/inventory/devices/ftds/ztp",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"inventory",
																		"devices",
																		"ftds",
																		"ztp"
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "register",
											"item": [
												{
													"name": "Register FTD device to FMC",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ftdUid\": \"<uuid>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/ftds/register",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																"ftds",
																"register"
															]
														},
														"description": "Complete registration of an FTD device managed by an FMC to the CDO tenant. Call this API endpoint after you have created an FTD and pasted the generated CLI output in the FTD. This operation returns a link to a transaction object that can be used to monitor the progress of the operation."
													},
													"response": [
														{
															"name": "CDO Transaction object that can be used to track the progress of the creation operation.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"ftdUid\": \"<uuid>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/inventory/devices/ftds/register",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"inventory",
																		"devices",
																		"ftds",
																		"register"
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
														},
														{
															"name": "Invalid input provided. Check the response for details.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"ftdUid\": \"<uuid>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/inventory/devices/ftds/register",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"inventory",
																		"devices",
																		"ftds",
																		"register"
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "Request not authorized.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"ftdUid\": \"<uuid>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/inventory/devices/ftds/register",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"inventory",
																		"devices",
																		"ftds",
																		"register"
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
														},
														{
															"name": "User does not have sufficient privileges to perform this operation.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"ftdUid\": \"<uuid>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/inventory/devices/ftds/register",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"inventory",
																		"devices",
																		"ftds",
																		"register"
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "Internal server error.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"ftdUid\": \"<uuid>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/inventory/devices/ftds/register",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"inventory",
																		"devices",
																		"ftds",
																		"register"
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "cdfmcManaged",
											"item": [
												{
													"name": "{deviceUid}",
													"item": [
														{
															"name": "delete",
															"item": [
																{
																	"name": "Delete cdFMC managed FTD device",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{bearerToken}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/ftds/cdfmcManaged/:deviceUid/delete",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"ftds",
																				"cdfmcManaged",
																				":deviceUid",
																				"delete"
																			],
																			"variable": [
																				{
																					"key": "deviceUid",
																					"value": "<uuid>",
																					"description": "(Required) The unique identifier of the cdFMC managed FTD device in CDO."
																				}
																			]
																		},
																		"description": "This is an asynchronous operation to delete cdFMC managed FTD device in the CDO tenant. This operation returns a link to a transaction object that can be used to monitor the progress of the operation. The reason this operation is asynchronous is because the device is first removed from the cdFMC, following which it is deleted from the CDO tenant."
																	},
																	"response": [
																		{
																			"name": "CDO Transaction object that can be used to track the progress of the deletion operation.",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Bearer <token>",
																						"description": "Added as a part of security scheme: bearer"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/inventory/devices/ftds/cdfmcManaged/:deviceUid/delete",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"inventory",
																						"devices",
																						"ftds",
																						"cdfmcManaged",
																						":deviceUid",
																						"delete"
																					],
																					"variable": [
																						{
																							"key": "deviceUid"
																						}
																					]
																				}
																			},
																			"status": "Accepted",
																			"code": 202,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
																		},
																		{
																			"name": "Invalid input provided. Check the response for details.",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Bearer <token>",
																						"description": "Added as a part of security scheme: bearer"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/inventory/devices/ftds/cdfmcManaged/:deviceUid/delete",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"inventory",
																						"devices",
																						"ftds",
																						"cdfmcManaged",
																						":deviceUid",
																						"delete"
																					],
																					"variable": [
																						{
																							"key": "deviceUid"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
																		},
																		{
																			"name": "Request not authorized.",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Bearer <token>",
																						"description": "Added as a part of security scheme: bearer"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/inventory/devices/ftds/cdfmcManaged/:deviceUid/delete",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"inventory",
																						"devices",
																						"ftds",
																						"cdfmcManaged",
																						":deviceUid",
																						"delete"
																					],
																					"variable": [
																						{
																							"key": "deviceUid"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
																		},
																		{
																			"name": "User does not have sufficient privileges to perform this operation.",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Bearer <token>",
																						"description": "Added as a part of security scheme: bearer"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/inventory/devices/ftds/cdfmcManaged/:deviceUid/delete",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"inventory",
																						"devices",
																						"ftds",
																						"cdfmcManaged",
																						":deviceUid",
																						"delete"
																					],
																					"variable": [
																						{
																							"key": "deviceUid"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
																		},
																		{
																			"name": "Internal server error.",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Bearer <token>",
																						"description": "Added as a part of security scheme: bearer"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/inventory/devices/ftds/cdfmcManaged/:deviceUid/delete",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"inventory",
																						"devices",
																						"ftds",
																						"cdfmcManaged",
																						":deviceUid",
																						"delete"
																					],
																					"variable": [
																						{
																							"key": "deviceUid"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "Onboard FTD device",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deviceType\": \"CDFMC_MANAGED_FTD\",\n  \"fmcAccessPolicyUid\": \"<uuid>\",\n  \"licenses\": \"BASE\",\n  \"name\": \"<string>\",\n  \"virtual\": \"<boolean>\",\n  \"performanceTier\": \"FTDv20\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"enime\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/devices/ftds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"devices",
														"ftds"
													]
												},
												"description": "This is an asynchronous operation to generate a registration key for a cdFMC managed FTD device in the CDO tenant. This operation returns a link to a transaction object that can be used to monitor the progress of the operation. Onboarding a cdFMC managed FTD device is a two-step process: the first step, handled by this operation, creates an FTD device with a configure manager string that must be pasted into the FTD device's Command-Line Interface. The FTD then uses this information to register itself with the CDO tenant."
											},
											"response": [
												{
													"name": "CDO Transaction object that can be used to track the progress of the creation operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"deviceType\": \"CDFMC_MANAGED_FTD\",\n  \"fmcAccessPolicyUid\": \"<uuid>\",\n  \"licenses\": \"BASE\",\n  \"name\": \"<string>\",\n  \"virtual\": \"<boolean>\",\n  \"performanceTier\": \"FTDv20\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"enime\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/ftds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																"ftds"
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"deviceType\": \"CDFMC_MANAGED_FTD\",\n  \"fmcAccessPolicyUid\": \"<uuid>\",\n  \"licenses\": \"BASE\",\n  \"name\": \"<string>\",\n  \"virtual\": \"<boolean>\",\n  \"performanceTier\": \"FTDv20\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"enime\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/ftds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																"ftds"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"deviceType\": \"CDFMC_MANAGED_FTD\",\n  \"fmcAccessPolicyUid\": \"<uuid>\",\n  \"licenses\": \"BASE\",\n  \"name\": \"<string>\",\n  \"virtual\": \"<boolean>\",\n  \"performanceTier\": \"FTDv20\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"enime\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/ftds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																"ftds"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"deviceType\": \"CDFMC_MANAGED_FTD\",\n  \"fmcAccessPolicyUid\": \"<uuid>\",\n  \"licenses\": \"BASE\",\n  \"name\": \"<string>\",\n  \"virtual\": \"<boolean>\",\n  \"performanceTier\": \"FTDv20\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"enime\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/ftds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																"ftds"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"deviceType\": \"CDFMC_MANAGED_FTD\",\n  \"fmcAccessPolicyUid\": \"<uuid>\",\n  \"licenses\": \"BASE\",\n  \"name\": \"<string>\",\n  \"virtual\": \"<boolean>\",\n  \"performanceTier\": \"FTDv20\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"enime\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/ftds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																"ftds"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "duoAdminPanels",
									"item": [
										{
											"name": "Onboard Duo Admin Panel",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"integrationKey\": \"<string>\",\n  \"name\": \"<string>\",\n  \"secretKey\": \"<string>\",\n  \"host\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"culpa0\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"quis7a\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/devices/duoAdminPanels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"devices",
														"duoAdminPanels"
													]
												},
												"description": "Onboard a Duo Admin Panel to the CDO tenant. The credentials to onboard the Duo Admin Panel to CDO must be generated by creating an Admin API application on https://www.duo.com. This operation returns a link to a transaction object that can be used to monitor the progress of the operation."
											},
											"response": [
												{
													"name": "CDO Transaction object that can be used to track the progress of the onboarding operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"integrationKey\": \"<string>\",\n  \"name\": \"<string>\",\n  \"secretKey\": \"<string>\",\n  \"host\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"culpa0\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"quis7a\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/duoAdminPanels",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																"duoAdminPanels"
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"integrationKey\": \"<string>\",\n  \"name\": \"<string>\",\n  \"secretKey\": \"<string>\",\n  \"host\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"culpa0\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"quis7a\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/duoAdminPanels",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																"duoAdminPanels"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"integrationKey\": \"<string>\",\n  \"name\": \"<string>\",\n  \"secretKey\": \"<string>\",\n  \"host\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"culpa0\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"quis7a\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/duoAdminPanels",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																"duoAdminPanels"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"integrationKey\": \"<string>\",\n  \"name\": \"<string>\",\n  \"secretKey\": \"<string>\",\n  \"host\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"culpa0\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"quis7a\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/duoAdminPanels",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																"duoAdminPanels"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"integrationKey\": \"<string>\",\n  \"name\": \"<string>\",\n  \"secretKey\": \"<string>\",\n  \"host\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"culpa0\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"quis7a\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/duoAdminPanels",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																"duoAdminPanels"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "asas",
									"item": [
										{
											"name": "{deviceUid}",
											"item": [
												{
													"name": "reconnect",
													"item": [
														{
															"name": "Reconnect ASA device",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/inventory/devices/asas/:deviceUid/reconnect",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"inventory",
																		"devices",
																		"asas",
																		":deviceUid",
																		"reconnect"
																	],
																	"variable": [
																		{
																			"key": "deviceUid",
																			"value": "<uuid>",
																			"description": "(Required) The unique identifier of the ASA device in CDO."
																		}
																	]
																},
																"description": "This is an asynchronous operation to re-establish the connection between an ASA and the CDO cloud. This operation returns a link to a transaction object that can be used to monitor the progress of the operation."
															},
															"response": [
																{
																	"name": "CDO Transaction object that can be used to track the progress of the reconnecting operation.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/asas/:deviceUid/reconnect",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"asas",
																				":deviceUid",
																				"reconnect"
																			],
																			"variable": [
																				{
																					"key": "deviceUid"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
																},
																{
																	"name": "Invalid input provided. Check the response for details.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/asas/:deviceUid/reconnect",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"asas",
																				":deviceUid",
																				"reconnect"
																			],
																			"variable": [
																				{
																					"key": "deviceUid"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
																},
																{
																	"name": "Request not authorized.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/asas/:deviceUid/reconnect",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"asas",
																				":deviceUid",
																				"reconnect"
																			],
																			"variable": [
																				{
																					"key": "deviceUid"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
																},
																{
																	"name": "User does not have sufficient privileges to perform this operation.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/asas/:deviceUid/reconnect",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"asas",
																				":deviceUid",
																				"reconnect"
																			],
																			"variable": [
																				{
																					"key": "deviceUid"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
																},
																{
																	"name": "Internal server error.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/asas/:deviceUid/reconnect",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"asas",
																				":deviceUid",
																				"reconnect"
																			],
																			"variable": [
																				{
																					"key": "deviceUid"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
																}
															]
														}
													]
												},
												{
													"name": "read",
													"item": [
														{
															"name": "Read ASA device configuration",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/inventory/devices/asas/:deviceUid/read",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"inventory",
																		"devices",
																		"asas",
																		":deviceUid",
																		"read"
																	],
																	"variable": [
																		{
																			"key": "deviceUid",
																			"value": "<uuid>",
																			"description": "(Required) The unique identifier of the ASA device in CDO."
																		}
																	]
																},
																"description": "This is an asynchronous operation to read the latest configuration on an ASA device in to the CDO tenant. This operation returns a link to a transaction object that can be used to monitor the progress of the operation."
															},
															"response": [
																{
																	"name": "CDO Transaction object that can be used to track the progress of the read operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/asas/:deviceUid/read",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"asas",
																				":deviceUid",
																				"read"
																			],
																			"variable": [
																				{
																					"key": "deviceUid"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
																},
																{
																	"name": "Invalid input provided. Check the response for details.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/asas/:deviceUid/read",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"asas",
																				":deviceUid",
																				"read"
																			],
																			"variable": [
																				{
																					"key": "deviceUid"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
																},
																{
																	"name": "Request not authorized.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/asas/:deviceUid/read",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"asas",
																				":deviceUid",
																				"read"
																			],
																			"variable": [
																				{
																					"key": "deviceUid"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
																},
																{
																	"name": "User does not have sufficient privileges to perform this operation.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/asas/:deviceUid/read",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"asas",
																				":deviceUid",
																				"read"
																			],
																			"variable": [
																				{
																					"key": "deviceUid"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
																},
																{
																	"name": "Internal server error.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/asas/:deviceUid/read",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"asas",
																				":deviceUid",
																				"read"
																			],
																			"variable": [
																				{
																					"key": "deviceUid"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
																}
															]
														}
													]
												},
												{
													"name": "deploy",
													"item": [
														{
															"name": "Deploy ASA device changes",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/inventory/devices/asas/:deviceUid/deploy",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"inventory",
																		"devices",
																		"asas",
																		":deviceUid",
																		"deploy"
																	],
																	"variable": [
																		{
																			"key": "deviceUid",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "This is an asynchronous operation to deploy changes made to an ASA device's configuration on CDO to the device. This operation returns a link to a transaction object that can be used to monitor the progress of the operation."
															},
															"response": [
																{
																	"name": "CDO Transaction object that can be used to track the progress of the ASA deploy operation.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/asas/:deviceUid/deploy",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"asas",
																				":deviceUid",
																				"deploy"
																			],
																			"variable": [
																				{
																					"key": "deviceUid"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
																},
																{
																	"name": "Invalid input provided. Check the response for details.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/asas/:deviceUid/deploy",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"asas",
																				":deviceUid",
																				"deploy"
																			],
																			"variable": [
																				{
																					"key": "deviceUid"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
																},
																{
																	"name": "Request not authorized.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/asas/:deviceUid/deploy",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"asas",
																				":deviceUid",
																				"deploy"
																			],
																			"variable": [
																				{
																					"key": "deviceUid"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
																},
																{
																	"name": "User does not have sufficient privileges to perform this operation.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/asas/:deviceUid/deploy",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"asas",
																				":deviceUid",
																				"deploy"
																			],
																			"variable": [
																				{
																					"key": "deviceUid"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
																},
																{
																	"name": "Entity not found.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/asas/:deviceUid/deploy",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"asas",
																				":deviceUid",
																				"deploy"
																			],
																			"variable": [
																				{
																					"key": "deviceUid"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
																},
																{
																	"name": "Internal server error.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/asas/:deviceUid/deploy",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"asas",
																				":deviceUid",
																				"deploy"
																			],
																			"variable": [
																				{
																					"key": "deviceUid"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "cli",
											"item": [
												{
													"name": "execute",
													"item": [
														{
															"name": "Execute CLI Command",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"deviceUids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"script\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/inventory/devices/asas/cli/execute",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"inventory",
																		"devices",
																		"asas",
																		"cli",
																		"execute"
																	]
																},
																"description": "This is an asynchronous operation to execute CLI commands in the CDO tenant."
															},
															"response": [
																{
																	"name": "CDO Transaction object that can be used to track the progress of the execute CLI operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"deviceUids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"script\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/asas/cli/execute",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"asas",
																				"cli",
																				"execute"
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
																},
																{
																	"name": "Invalid input provided. Check the response for details.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"deviceUids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"script\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/asas/cli/execute",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"asas",
																				"cli",
																				"execute"
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
																},
																{
																	"name": "Request not authorized.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"deviceUids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"script\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/asas/cli/execute",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"asas",
																				"cli",
																				"execute"
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
																},
																{
																	"name": "User does not have sufficient privileges to perform this operation.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"deviceUids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"script\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/asas/cli/execute",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"asas",
																				"cli",
																				"execute"
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
																},
																{
																	"name": "Internal server error.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"deviceUids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"script\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/asas/cli/execute",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"asas",
																				"cli",
																				"execute"
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
																}
															]
														}
													]
												},
												{
													"name": "executeMacro",
													"item": [
														{
															"name": "Execute CLI Macro Command",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"deviceUids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"macroUid\": \"<uuid>\",\n  \"parameters\": {\n    \"ut_d\": \"<string>\",\n    \"adipisicing9\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/inventory/devices/asas/cli/executeMacro",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"inventory",
																		"devices",
																		"asas",
																		"cli",
																		"executeMacro"
																	]
																},
																"description": "This is an asynchronous operation to execute CLI macro command in the CDO tenant."
															},
															"response": [
																{
																	"name": "CDO Transaction object that can be used to track the progress of the execute CLI operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"deviceUids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"macroUid\": \"<uuid>\",\n  \"parameters\": {\n    \"ut_d\": \"<string>\",\n    \"adipisicing9\": \"<string>\"\n  }\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/asas/cli/executeMacro",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"asas",
																				"cli",
																				"executeMacro"
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
																},
																{
																	"name": "Invalid input provided. Check the response for details.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"deviceUids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"macroUid\": \"<uuid>\",\n  \"parameters\": {\n    \"ut_d\": \"<string>\",\n    \"adipisicing9\": \"<string>\"\n  }\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/asas/cli/executeMacro",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"asas",
																				"cli",
																				"executeMacro"
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
																},
																{
																	"name": "Request not authorized.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"deviceUids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"macroUid\": \"<uuid>\",\n  \"parameters\": {\n    \"ut_d\": \"<string>\",\n    \"adipisicing9\": \"<string>\"\n  }\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/asas/cli/executeMacro",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"asas",
																				"cli",
																				"executeMacro"
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
																},
																{
																	"name": "User does not have sufficient privileges to perform this operation.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"deviceUids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"macroUid\": \"<uuid>\",\n  \"parameters\": {\n    \"ut_d\": \"<string>\",\n    \"adipisicing9\": \"<string>\"\n  }\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/asas/cli/executeMacro",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"asas",
																				"cli",
																				"executeMacro"
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
																},
																{
																	"name": "Internal server error.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"deviceUids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"macroUid\": \"<uuid>\",\n  \"parameters\": {\n    \"ut_d\": \"<string>\",\n    \"adipisicing9\": \"<string>\"\n  }\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/inventory/devices/asas/cli/executeMacro",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"inventory",
																				"devices",
																				"asas",
																				"cli",
																				"executeMacro"
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "Onboard ASA device",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"connectorType\": \"SDC\",\n  \"name\": \"<string>\",\n  \"password\": \"<string>\",\n  \"username\": \"<string>\",\n  \"deviceAddress\": \"<string>\",\n  \"ignoreCertificate\": false,\n  \"connectorName\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"id7\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"Excepteur_5\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"in6f\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"officia62\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"aliquip_5cc\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/devices/asas",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"devices",
														"asas"
													]
												},
												"description": "This is an asynchronous operation to onboard an ASA to a CDO tenant. This operation returns a link to a transaction object that can be used to monitor the progress of the operation."
											},
											"response": [
												{
													"name": "CDO Transaction object that can be used to track the progress of the onboarding operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"connectorType\": \"SDC\",\n  \"name\": \"<string>\",\n  \"password\": \"<string>\",\n  \"username\": \"<string>\",\n  \"deviceAddress\": \"<string>\",\n  \"ignoreCertificate\": false,\n  \"connectorName\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"id7\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"Excepteur_5\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"in6f\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"officia62\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"aliquip_5cc\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/asas",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																"asas"
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"connectorType\": \"SDC\",\n  \"name\": \"<string>\",\n  \"password\": \"<string>\",\n  \"username\": \"<string>\",\n  \"deviceAddress\": \"<string>\",\n  \"ignoreCertificate\": false,\n  \"connectorName\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"id7\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"Excepteur_5\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"in6f\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"officia62\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"aliquip_5cc\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/asas",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																"asas"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"connectorType\": \"SDC\",\n  \"name\": \"<string>\",\n  \"password\": \"<string>\",\n  \"username\": \"<string>\",\n  \"deviceAddress\": \"<string>\",\n  \"ignoreCertificate\": false,\n  \"connectorName\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"id7\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"Excepteur_5\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"in6f\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"officia62\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"aliquip_5cc\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/asas",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																"asas"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"connectorType\": \"SDC\",\n  \"name\": \"<string>\",\n  \"password\": \"<string>\",\n  \"username\": \"<string>\",\n  \"deviceAddress\": \"<string>\",\n  \"ignoreCertificate\": false,\n  \"connectorName\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"id7\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"Excepteur_5\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"in6f\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"officia62\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"aliquip_5cc\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/asas",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																"asas"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Entity not found.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"connectorType\": \"SDC\",\n  \"name\": \"<string>\",\n  \"password\": \"<string>\",\n  \"username\": \"<string>\",\n  \"deviceAddress\": \"<string>\",\n  \"ignoreCertificate\": false,\n  \"connectorName\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"id7\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"Excepteur_5\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"in6f\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"officia62\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"aliquip_5cc\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/asas",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																"asas"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"connectorType\": \"SDC\",\n  \"name\": \"<string>\",\n  \"password\": \"<string>\",\n  \"username\": \"<string>\",\n  \"deviceAddress\": \"<string>\",\n  \"ignoreCertificate\": false,\n  \"connectorName\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"id7\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"Excepteur_5\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"in6f\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"officia62\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"aliquip_5cc\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/asas",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																"asas"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "{deviceUid}",
									"item": [
										{
											"name": "Get Device",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/devices/:deviceUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"devices",
														":deviceUid"
													],
													"variable": [
														{
															"key": "deviceUid",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the device in CDO."
														}
													]
												},
												"description": "Get a device by UID in the CDO tenant"
											},
											"response": [
												{
													"name": "Device object",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/:deviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																":deviceUid"
															],
															"variable": [
																{
																	"key": "deviceUid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"deviceType\": \"CDFMC\",\n  \"name\": \"<string>\",\n  \"uid\": \"<uuid>\",\n  \"connectorType\": \"SDC\",\n  \"connectorUid\": \"<uuid>\",\n  \"address\": \"<string>\",\n  \"deviceRole\": \"ZTNA_PROVIDER\",\n  \"serial\": \"<string>\",\n  \"chassisSerial\": \"<string>\",\n  \"softwareVersion\": \"<string>\",\n  \"connectivityState\": \"UNKNOWN\",\n  \"configState\": \"NOT_SYNCED\",\n  \"conflictDetectionState\": \"NO_CONFLICTS\",\n  \"notes\": \"<string>\",\n  \"asdmVersion\": \"<string>\",\n  \"asaFailoverMode\": \"OFF\",\n  \"asaFailoverState\": \"<string>\",\n  \"asaFailoverMate\": {\n    \"failoverState\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"softwareVersion\": \"<string>\"\n  },\n  \"asaLicenseEntitlements\": {\n    \"pariatur__b5\": \"<string>\"\n  },\n  \"ftdLicenses\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"snortVersion\": \"<string>\",\n  \"ftdPerformanceTier\": \"<string>\",\n  \"redundancyMode\": \"HA\",\n  \"cdFmcInfo\": {\n    \"cliKey\": \"<string>\",\n    \"regKey\": \"<string>\",\n    \"natId\": \"<string>\"\n  },\n  \"sseDeviceData\": {\n    \"sseDeviceId\": \"<string>\",\n    \"sseProtocolVersion\": \"TWO\"\n  },\n  \"onPremFmcInfo\": {\n    \"name\": \"<string>\",\n    \"address\": \"<string>\"\n  },\n  \"ftdClusterInfo\": {\n    \"controlNode\": {\n      \"serial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"status\": \"JOINING\"\n    },\n    \"dataNodes\": [\n      {\n        \"serial\": \"<string>\",\n        \"softwareVersion\": \"<string>\",\n        \"uidOnFmc\": \"<uuid>\",\n        \"status\": \"UNKNOWN\"\n      },\n      {\n        \"serial\": \"<string>\",\n        \"softwareVersion\": \"<string>\",\n        \"uidOnFmc\": \"<uuid>\",\n        \"status\": \"JOINING\"\n      }\n    ]\n  },\n  \"ftdHaInfo\": {\n    \"primaryNode\": {\n      \"serial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"status\": \"NORMAL\"\n    },\n    \"secondaryNode\": {\n      \"serial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"status\": \"DISABLED\"\n    }\n  },\n  \"merakiDeploymentMode\": \"ROUTED\",\n  \"merakiNetwork\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"timezone\": \"<string>\"\n  },\n  \"state\": \"<string>\",\n  \"stateMachineDetails\": {\n    \"identifier\": \"<string>\",\n    \"lastError\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<string>\",\n      \"actionIdentifier\": \"<string>\"\n    }\n  },\n  \"labels\": {\n    \"groupedLabels\": {\n      \"exercitationda\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"nulla54\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"fmcDomainUid\": \"<uuid>\",\n  \"uidOnFmc\": \"<uuid>\",\n  \"modelNumber\": \"<string>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/:deviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																":deviceUid"
															],
															"variable": [
																{
																	"key": "deviceUid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/:deviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																":deviceUid"
															],
															"variable": [
																{
																	"key": "deviceUid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/:deviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																":deviceUid"
															],
															"variable": [
																{
																	"key": "deviceUid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Entity not found.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/:deviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																":deviceUid"
															],
															"variable": [
																{
																	"key": "deviceUid"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Method not allowed.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/:deviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																":deviceUid"
															],
															"variable": [
																{
																	"key": "deviceUid"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/:deviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																":deviceUid"
															],
															"variable": [
																{
																	"key": "deviceUid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										},
										{
											"name": "Delete Device",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/devices/:deviceUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"devices",
														":deviceUid"
													],
													"variable": [
														{
															"key": "deviceUid",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the device in CDO."
														}
													]
												},
												"description": "Delete a device by UID in the CDO tenant. On-prem FMCs and cloud-delivered FMCs cannot be deleted using this endpoint."
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/:deviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																":deviceUid"
															],
															"variable": [
																{
																	"key": "deviceUid"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/:deviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																":deviceUid"
															],
															"variable": [
																{
																	"key": "deviceUid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/:deviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																":deviceUid"
															],
															"variable": [
																{
																	"key": "deviceUid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/:deviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																":deviceUid"
															],
															"variable": [
																{
																	"key": "deviceUid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Method not allowed.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/:deviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																":deviceUid"
															],
															"variable": [
																{
																	"key": "deviceUid"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/:deviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																":deviceUid"
															],
															"variable": [
																{
																	"key": "deviceUid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										},
										{
											"name": "Modify Device",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/devices/:deviceUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"devices",
														":deviceUid"
													],
													"variable": [
														{
															"key": "deviceUid",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the device in CDO."
														}
													]
												},
												"description": "Modify a device in the CDO tenant"
											},
											"response": [
												{
													"name": "Device object",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/:deviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																":deviceUid"
															],
															"variable": [
																{
																	"key": "deviceUid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"deviceType\": \"CDFMC\",\n  \"name\": \"<string>\",\n  \"uid\": \"<uuid>\",\n  \"connectorType\": \"SDC\",\n  \"connectorUid\": \"<uuid>\",\n  \"address\": \"<string>\",\n  \"deviceRole\": \"ZTNA_PROVIDER\",\n  \"serial\": \"<string>\",\n  \"chassisSerial\": \"<string>\",\n  \"softwareVersion\": \"<string>\",\n  \"connectivityState\": \"UNKNOWN\",\n  \"configState\": \"NOT_SYNCED\",\n  \"conflictDetectionState\": \"NO_CONFLICTS\",\n  \"notes\": \"<string>\",\n  \"asdmVersion\": \"<string>\",\n  \"asaFailoverMode\": \"OFF\",\n  \"asaFailoverState\": \"<string>\",\n  \"asaFailoverMate\": {\n    \"failoverState\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"softwareVersion\": \"<string>\"\n  },\n  \"asaLicenseEntitlements\": {\n    \"pariatur__b5\": \"<string>\"\n  },\n  \"ftdLicenses\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"snortVersion\": \"<string>\",\n  \"ftdPerformanceTier\": \"<string>\",\n  \"redundancyMode\": \"HA\",\n  \"cdFmcInfo\": {\n    \"cliKey\": \"<string>\",\n    \"regKey\": \"<string>\",\n    \"natId\": \"<string>\"\n  },\n  \"sseDeviceData\": {\n    \"sseDeviceId\": \"<string>\",\n    \"sseProtocolVersion\": \"TWO\"\n  },\n  \"onPremFmcInfo\": {\n    \"name\": \"<string>\",\n    \"address\": \"<string>\"\n  },\n  \"ftdClusterInfo\": {\n    \"controlNode\": {\n      \"serial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"status\": \"JOINING\"\n    },\n    \"dataNodes\": [\n      {\n        \"serial\": \"<string>\",\n        \"softwareVersion\": \"<string>\",\n        \"uidOnFmc\": \"<uuid>\",\n        \"status\": \"UNKNOWN\"\n      },\n      {\n        \"serial\": \"<string>\",\n        \"softwareVersion\": \"<string>\",\n        \"uidOnFmc\": \"<uuid>\",\n        \"status\": \"JOINING\"\n      }\n    ]\n  },\n  \"ftdHaInfo\": {\n    \"primaryNode\": {\n      \"serial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"status\": \"NORMAL\"\n    },\n    \"secondaryNode\": {\n      \"serial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"status\": \"DISABLED\"\n    }\n  },\n  \"merakiDeploymentMode\": \"ROUTED\",\n  \"merakiNetwork\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"timezone\": \"<string>\"\n  },\n  \"state\": \"<string>\",\n  \"stateMachineDetails\": {\n    \"identifier\": \"<string>\",\n    \"lastError\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<string>\",\n      \"actionIdentifier\": \"<string>\"\n    }\n  },\n  \"labels\": {\n    \"groupedLabels\": {\n      \"exercitationda\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"nulla54\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"fmcDomainUid\": \"<uuid>\",\n  \"uidOnFmc\": \"<uuid>\",\n  \"modelNumber\": \"<string>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/:deviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																":deviceUid"
															],
															"variable": [
																{
																	"key": "deviceUid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/:deviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																":deviceUid"
															],
															"variable": [
																{
																	"key": "deviceUid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/:deviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																":deviceUid"
															],
															"variable": [
																{
																	"key": "deviceUid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Entity not found.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/:deviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																":deviceUid"
															],
															"variable": [
																{
																	"key": "deviceUid"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Method not allowed.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/:deviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																":deviceUid"
															],
															"variable": [
																{
																	"key": "deviceUid"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/devices/:deviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"devices",
																":deviceUid"
															],
															"variable": [
																{
																	"key": "deviceUid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Devices",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inventory/devices?limit=50&offset=0&q=<string>&sort=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inventory",
												"devices"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										},
										"description": "Get a list of devices in the CDO tenant."
									},
									"response": [
										{
											"name": "List of Device objects",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/devices?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"devices"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"items\": [\n    {\n      \"deviceType\": \"ONPREM_FMC_NGIPS\",\n      \"name\": \"<string>\",\n      \"uid\": \"<uuid>\",\n      \"connectorType\": \"SDC\",\n      \"connectorUid\": \"<uuid>\",\n      \"address\": \"<string>\",\n      \"deviceRole\": \"RA_VPN_HEADEND\",\n      \"serial\": \"<string>\",\n      \"chassisSerial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"connectivityState\": \"BAD_CREDENTIALS\",\n      \"configState\": \"NOT_SYNCED\",\n      \"conflictDetectionState\": \"NO_CONFLICTS\",\n      \"notes\": \"<string>\",\n      \"asdmVersion\": \"<string>\",\n      \"asaFailoverMode\": \"ACTIVE_STANDBY\",\n      \"asaFailoverState\": \"<string>\",\n      \"asaFailoverMate\": {\n        \"failoverState\": \"<string>\",\n        \"serial\": \"<string>\",\n        \"softwareVersion\": \"<string>\"\n      },\n      \"asaLicenseEntitlements\": {\n        \"consequat_4\": \"<string>\"\n      },\n      \"ftdLicenses\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"snortVersion\": \"<string>\",\n      \"ftdPerformanceTier\": \"<string>\",\n      \"redundancyMode\": \"STANDALONE\",\n      \"cdFmcInfo\": {\n        \"cliKey\": \"<string>\",\n        \"regKey\": \"<string>\",\n        \"natId\": \"<string>\"\n      },\n      \"sseDeviceData\": {\n        \"sseDeviceId\": \"<string>\",\n        \"sseProtocolVersion\": \"TWO\"\n      },\n      \"onPremFmcInfo\": {\n        \"name\": \"<string>\",\n        \"address\": \"<string>\"\n      },\n      \"ftdClusterInfo\": {\n        \"controlNode\": {\n          \"serial\": \"<string>\",\n          \"softwareVersion\": \"<string>\",\n          \"uidOnFmc\": \"<uuid>\",\n          \"status\": \"JOINING\"\n        },\n        \"dataNodes\": [\n          {\n            \"serial\": \"<string>\",\n            \"softwareVersion\": \"<string>\",\n            \"uidOnFmc\": \"<uuid>\",\n            \"status\": \"ADDED_OUT_OF_BOX\"\n          },\n          {\n            \"serial\": \"<string>\",\n            \"softwareVersion\": \"<string>\",\n            \"uidOnFmc\": \"<uuid>\",\n            \"status\": \"ADDED_OUT_OF_BOX\"\n          }\n        ]\n      },\n      \"ftdHaInfo\": {\n        \"primaryNode\": {\n          \"serial\": \"<string>\",\n          \"softwareVersion\": \"<string>\",\n          \"uidOnFmc\": \"<uuid>\",\n          \"status\": \"WARNING\"\n        },\n        \"secondaryNode\": {\n          \"serial\": \"<string>\",\n          \"softwareVersion\": \"<string>\",\n          \"uidOnFmc\": \"<uuid>\",\n          \"status\": \"DISABLED\"\n        }\n      },\n      \"merakiDeploymentMode\": \"ROUTED\",\n      \"merakiNetwork\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"timezone\": \"<string>\"\n      },\n      \"state\": \"<string>\",\n      \"stateMachineDetails\": {\n        \"identifier\": \"<string>\",\n        \"lastError\": {\n          \"errorMessage\": \"<string>\",\n          \"errorCode\": \"<string>\",\n          \"actionIdentifier\": \"<string>\"\n        }\n      },\n      \"labels\": {\n        \"groupedLabels\": {\n          \"cupidatat__\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        \"ungroupedLabels\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"fmcDomainUid\": \"<uuid>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"modelNumber\": \"<string>\"\n    },\n    {\n      \"deviceType\": \"MERAKI_MX\",\n      \"name\": \"<string>\",\n      \"uid\": \"<uuid>\",\n      \"connectorType\": \"CDG\",\n      \"connectorUid\": \"<uuid>\",\n      \"address\": \"<string>\",\n      \"deviceRole\": \"ANYCONNECT_VPN_HEAD_END\",\n      \"serial\": \"<string>\",\n      \"chassisSerial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"connectivityState\": \"ONLINE\",\n      \"configState\": \"UNKNOWN\",\n      \"conflictDetectionState\": \"NO_CONFLICTS\",\n      \"notes\": \"<string>\",\n      \"asdmVersion\": \"<string>\",\n      \"asaFailoverMode\": \"OFF\",\n      \"asaFailoverState\": \"<string>\",\n      \"asaFailoverMate\": {\n        \"failoverState\": \"<string>\",\n        \"serial\": \"<string>\",\n        \"softwareVersion\": \"<string>\"\n      },\n      \"asaLicenseEntitlements\": {\n        \"consequat_d5\": \"<string>\"\n      },\n      \"ftdLicenses\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"snortVersion\": \"<string>\",\n      \"ftdPerformanceTier\": \"<string>\",\n      \"redundancyMode\": \"CLUSTER\",\n      \"cdFmcInfo\": {\n        \"cliKey\": \"<string>\",\n        \"regKey\": \"<string>\",\n        \"natId\": \"<string>\"\n      },\n      \"sseDeviceData\": {\n        \"sseDeviceId\": \"<string>\",\n        \"sseProtocolVersion\": \"ONE\"\n      },\n      \"onPremFmcInfo\": {\n        \"name\": \"<string>\",\n        \"address\": \"<string>\"\n      },\n      \"ftdClusterInfo\": {\n        \"controlNode\": {\n          \"serial\": \"<string>\",\n          \"softwareVersion\": \"<string>\",\n          \"uidOnFmc\": \"<uuid>\",\n          \"status\": \"DISABLED\"\n        },\n        \"dataNodes\": [\n          {\n            \"serial\": \"<string>\",\n            \"softwareVersion\": \"<string>\",\n            \"uidOnFmc\": \"<uuid>\",\n            \"status\": \"NOT_AVAILABLE\"\n          },\n          {\n            \"serial\": \"<string>\",\n            \"softwareVersion\": \"<string>\",\n            \"uidOnFmc\": \"<uuid>\",\n            \"status\": \"DISABLED\"\n          }\n        ]\n      },\n      \"ftdHaInfo\": {\n        \"primaryNode\": {\n          \"serial\": \"<string>\",\n          \"softwareVersion\": \"<string>\",\n          \"uidOnFmc\": \"<uuid>\",\n          \"status\": \"WARNING\"\n        },\n        \"secondaryNode\": {\n          \"serial\": \"<string>\",\n          \"softwareVersion\": \"<string>\",\n          \"uidOnFmc\": \"<uuid>\",\n          \"status\": \"UNKNOWN\"\n        }\n      },\n      \"merakiDeploymentMode\": \"ROUTED\",\n      \"merakiNetwork\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"timezone\": \"<string>\"\n      },\n      \"state\": \"<string>\",\n      \"stateMachineDetails\": {\n        \"identifier\": \"<string>\",\n        \"lastError\": {\n          \"errorMessage\": \"<string>\",\n          \"errorCode\": \"<string>\",\n          \"actionIdentifier\": \"<string>\"\n        }\n      },\n      \"labels\": {\n        \"groupedLabels\": {\n          \"sint_2db\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"consequat05\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dolor0\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"amet_2\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"exercitation0\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        \"ungroupedLabels\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"fmcDomainUid\": \"<uuid>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"modelNumber\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/devices?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"devices"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/devices?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"devices"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/devices?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"devices"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Method not allowed.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/devices?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"devices"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/devices?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"devices"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "templates",
							"item": [
								{
									"name": "{templateDeviceUid}",
									"item": [
										{
											"name": "Get Template Device",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/templates/:templateDeviceUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"templates",
														":templateDeviceUid"
													],
													"variable": [
														{
															"key": "templateDeviceUid",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the template device in CDO."
														}
													]
												},
												"description": "Get a template device by UID in the CDO tenant."
											},
											"response": [
												{
													"name": "Template Device object",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/templates/:templateDeviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"templates",
																":templateDeviceUid"
															],
															"variable": [
																{
																	"key": "templateDeviceUid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"deviceType\": \"CDFMC\",\n  \"name\": \"<string>\",\n  \"uid\": \"<uuid>\",\n  \"connectorType\": \"SDC\",\n  \"connectorUid\": \"<uuid>\",\n  \"address\": \"<string>\",\n  \"deviceRole\": \"ZTNA_PROVIDER\",\n  \"serial\": \"<string>\",\n  \"chassisSerial\": \"<string>\",\n  \"softwareVersion\": \"<string>\",\n  \"connectivityState\": \"UNKNOWN\",\n  \"configState\": \"NOT_SYNCED\",\n  \"conflictDetectionState\": \"NO_CONFLICTS\",\n  \"notes\": \"<string>\",\n  \"asdmVersion\": \"<string>\",\n  \"asaFailoverMode\": \"OFF\",\n  \"asaFailoverState\": \"<string>\",\n  \"asaFailoverMate\": {\n    \"failoverState\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"softwareVersion\": \"<string>\"\n  },\n  \"asaLicenseEntitlements\": {\n    \"pariatur__b5\": \"<string>\"\n  },\n  \"ftdLicenses\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"snortVersion\": \"<string>\",\n  \"ftdPerformanceTier\": \"<string>\",\n  \"redundancyMode\": \"HA\",\n  \"cdFmcInfo\": {\n    \"cliKey\": \"<string>\",\n    \"regKey\": \"<string>\",\n    \"natId\": \"<string>\"\n  },\n  \"sseDeviceData\": {\n    \"sseDeviceId\": \"<string>\",\n    \"sseProtocolVersion\": \"TWO\"\n  },\n  \"onPremFmcInfo\": {\n    \"name\": \"<string>\",\n    \"address\": \"<string>\"\n  },\n  \"ftdClusterInfo\": {\n    \"controlNode\": {\n      \"serial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"status\": \"JOINING\"\n    },\n    \"dataNodes\": [\n      {\n        \"serial\": \"<string>\",\n        \"softwareVersion\": \"<string>\",\n        \"uidOnFmc\": \"<uuid>\",\n        \"status\": \"UNKNOWN\"\n      },\n      {\n        \"serial\": \"<string>\",\n        \"softwareVersion\": \"<string>\",\n        \"uidOnFmc\": \"<uuid>\",\n        \"status\": \"JOINING\"\n      }\n    ]\n  },\n  \"ftdHaInfo\": {\n    \"primaryNode\": {\n      \"serial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"status\": \"NORMAL\"\n    },\n    \"secondaryNode\": {\n      \"serial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"status\": \"DISABLED\"\n    }\n  },\n  \"merakiDeploymentMode\": \"ROUTED\",\n  \"merakiNetwork\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"timezone\": \"<string>\"\n  },\n  \"state\": \"<string>\",\n  \"stateMachineDetails\": {\n    \"identifier\": \"<string>\",\n    \"lastError\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<string>\",\n      \"actionIdentifier\": \"<string>\"\n    }\n  },\n  \"labels\": {\n    \"groupedLabels\": {\n      \"exercitationda\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"nulla54\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"fmcDomainUid\": \"<uuid>\",\n  \"uidOnFmc\": \"<uuid>\",\n  \"modelNumber\": \"<string>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/templates/:templateDeviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"templates",
																":templateDeviceUid"
															],
															"variable": [
																{
																	"key": "templateDeviceUid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/templates/:templateDeviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"templates",
																":templateDeviceUid"
															],
															"variable": [
																{
																	"key": "templateDeviceUid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/templates/:templateDeviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"templates",
																":templateDeviceUid"
															],
															"variable": [
																{
																	"key": "templateDeviceUid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Entity not found.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/templates/:templateDeviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"templates",
																":templateDeviceUid"
															],
															"variable": [
																{
																	"key": "templateDeviceUid"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/templates/:templateDeviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"templates",
																":templateDeviceUid"
															],
															"variable": [
																{
																	"key": "templateDeviceUid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										},
										{
											"name": "Delete Template Device",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/templates/:templateDeviceUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"templates",
														":templateDeviceUid"
													],
													"variable": [
														{
															"key": "templateDeviceUid",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the template device in CDO."
														}
													]
												},
												"description": "Delete a template device by UID in the CDO tenant."
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/templates/:templateDeviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"templates",
																":templateDeviceUid"
															],
															"variable": [
																{
																	"key": "templateDeviceUid"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/templates/:templateDeviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"templates",
																":templateDeviceUid"
															],
															"variable": [
																{
																	"key": "templateDeviceUid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/templates/:templateDeviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"templates",
																":templateDeviceUid"
															],
															"variable": [
																{
																	"key": "templateDeviceUid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/templates/:templateDeviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"templates",
																":templateDeviceUid"
															],
															"variable": [
																{
																	"key": "templateDeviceUid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/templates/:templateDeviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"templates",
																":templateDeviceUid"
															],
															"variable": [
																{
																	"key": "templateDeviceUid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										},
										{
											"name": "Modify Template Device",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/templates/:templateDeviceUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"templates",
														":templateDeviceUid"
													],
													"variable": [
														{
															"key": "templateDeviceUid",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the template device in CDO."
														}
													]
												},
												"description": "Modify a template device in the CDO tenant."
											},
											"response": [
												{
													"name": "Template Device object",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/templates/:templateDeviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"templates",
																":templateDeviceUid"
															],
															"variable": [
																{
																	"key": "templateDeviceUid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"deviceType\": \"CDFMC\",\n  \"name\": \"<string>\",\n  \"uid\": \"<uuid>\",\n  \"connectorType\": \"SDC\",\n  \"connectorUid\": \"<uuid>\",\n  \"address\": \"<string>\",\n  \"deviceRole\": \"ZTNA_PROVIDER\",\n  \"serial\": \"<string>\",\n  \"chassisSerial\": \"<string>\",\n  \"softwareVersion\": \"<string>\",\n  \"connectivityState\": \"UNKNOWN\",\n  \"configState\": \"NOT_SYNCED\",\n  \"conflictDetectionState\": \"NO_CONFLICTS\",\n  \"notes\": \"<string>\",\n  \"asdmVersion\": \"<string>\",\n  \"asaFailoverMode\": \"OFF\",\n  \"asaFailoverState\": \"<string>\",\n  \"asaFailoverMate\": {\n    \"failoverState\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"softwareVersion\": \"<string>\"\n  },\n  \"asaLicenseEntitlements\": {\n    \"pariatur__b5\": \"<string>\"\n  },\n  \"ftdLicenses\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"snortVersion\": \"<string>\",\n  \"ftdPerformanceTier\": \"<string>\",\n  \"redundancyMode\": \"HA\",\n  \"cdFmcInfo\": {\n    \"cliKey\": \"<string>\",\n    \"regKey\": \"<string>\",\n    \"natId\": \"<string>\"\n  },\n  \"sseDeviceData\": {\n    \"sseDeviceId\": \"<string>\",\n    \"sseProtocolVersion\": \"TWO\"\n  },\n  \"onPremFmcInfo\": {\n    \"name\": \"<string>\",\n    \"address\": \"<string>\"\n  },\n  \"ftdClusterInfo\": {\n    \"controlNode\": {\n      \"serial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"status\": \"JOINING\"\n    },\n    \"dataNodes\": [\n      {\n        \"serial\": \"<string>\",\n        \"softwareVersion\": \"<string>\",\n        \"uidOnFmc\": \"<uuid>\",\n        \"status\": \"UNKNOWN\"\n      },\n      {\n        \"serial\": \"<string>\",\n        \"softwareVersion\": \"<string>\",\n        \"uidOnFmc\": \"<uuid>\",\n        \"status\": \"JOINING\"\n      }\n    ]\n  },\n  \"ftdHaInfo\": {\n    \"primaryNode\": {\n      \"serial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"status\": \"NORMAL\"\n    },\n    \"secondaryNode\": {\n      \"serial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"status\": \"DISABLED\"\n    }\n  },\n  \"merakiDeploymentMode\": \"ROUTED\",\n  \"merakiNetwork\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"timezone\": \"<string>\"\n  },\n  \"state\": \"<string>\",\n  \"stateMachineDetails\": {\n    \"identifier\": \"<string>\",\n    \"lastError\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<string>\",\n      \"actionIdentifier\": \"<string>\"\n    }\n  },\n  \"labels\": {\n    \"groupedLabels\": {\n      \"exercitationda\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"nulla54\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"fmcDomainUid\": \"<uuid>\",\n  \"uidOnFmc\": \"<uuid>\",\n  \"modelNumber\": \"<string>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/templates/:templateDeviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"templates",
																":templateDeviceUid"
															],
															"variable": [
																{
																	"key": "templateDeviceUid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/templates/:templateDeviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"templates",
																":templateDeviceUid"
															],
															"variable": [
																{
																	"key": "templateDeviceUid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/templates/:templateDeviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"templates",
																":templateDeviceUid"
															],
															"variable": [
																{
																	"key": "templateDeviceUid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Entity not found.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/templates/:templateDeviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"templates",
																":templateDeviceUid"
															],
															"variable": [
																{
																	"key": "templateDeviceUid"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/templates/:templateDeviceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"templates",
																":templateDeviceUid"
															],
															"variable": [
																{
																	"key": "templateDeviceUid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Template Devices",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inventory/templates?limit=50&offset=0&q=<string>&sort=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inventory",
												"templates"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										},
										"description": "Get a list of template devices in the CDO tenant."
									},
									"response": [
										{
											"name": "List of Template Devices",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/templates?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"templates"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"items\": [\n    {\n      \"deviceType\": \"ONPREM_FMC_NGIPS\",\n      \"name\": \"<string>\",\n      \"uid\": \"<uuid>\",\n      \"connectorType\": \"SDC\",\n      \"connectorUid\": \"<uuid>\",\n      \"address\": \"<string>\",\n      \"deviceRole\": \"RA_VPN_HEADEND\",\n      \"serial\": \"<string>\",\n      \"chassisSerial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"connectivityState\": \"BAD_CREDENTIALS\",\n      \"configState\": \"NOT_SYNCED\",\n      \"conflictDetectionState\": \"NO_CONFLICTS\",\n      \"notes\": \"<string>\",\n      \"asdmVersion\": \"<string>\",\n      \"asaFailoverMode\": \"ACTIVE_STANDBY\",\n      \"asaFailoverState\": \"<string>\",\n      \"asaFailoverMate\": {\n        \"failoverState\": \"<string>\",\n        \"serial\": \"<string>\",\n        \"softwareVersion\": \"<string>\"\n      },\n      \"asaLicenseEntitlements\": {\n        \"consequat_4\": \"<string>\"\n      },\n      \"ftdLicenses\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"snortVersion\": \"<string>\",\n      \"ftdPerformanceTier\": \"<string>\",\n      \"redundancyMode\": \"STANDALONE\",\n      \"cdFmcInfo\": {\n        \"cliKey\": \"<string>\",\n        \"regKey\": \"<string>\",\n        \"natId\": \"<string>\"\n      },\n      \"sseDeviceData\": {\n        \"sseDeviceId\": \"<string>\",\n        \"sseProtocolVersion\": \"TWO\"\n      },\n      \"onPremFmcInfo\": {\n        \"name\": \"<string>\",\n        \"address\": \"<string>\"\n      },\n      \"ftdClusterInfo\": {\n        \"controlNode\": {\n          \"serial\": \"<string>\",\n          \"softwareVersion\": \"<string>\",\n          \"uidOnFmc\": \"<uuid>\",\n          \"status\": \"JOINING\"\n        },\n        \"dataNodes\": [\n          {\n            \"serial\": \"<string>\",\n            \"softwareVersion\": \"<string>\",\n            \"uidOnFmc\": \"<uuid>\",\n            \"status\": \"ADDED_OUT_OF_BOX\"\n          },\n          {\n            \"serial\": \"<string>\",\n            \"softwareVersion\": \"<string>\",\n            \"uidOnFmc\": \"<uuid>\",\n            \"status\": \"ADDED_OUT_OF_BOX\"\n          }\n        ]\n      },\n      \"ftdHaInfo\": {\n        \"primaryNode\": {\n          \"serial\": \"<string>\",\n          \"softwareVersion\": \"<string>\",\n          \"uidOnFmc\": \"<uuid>\",\n          \"status\": \"WARNING\"\n        },\n        \"secondaryNode\": {\n          \"serial\": \"<string>\",\n          \"softwareVersion\": \"<string>\",\n          \"uidOnFmc\": \"<uuid>\",\n          \"status\": \"DISABLED\"\n        }\n      },\n      \"merakiDeploymentMode\": \"ROUTED\",\n      \"merakiNetwork\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"timezone\": \"<string>\"\n      },\n      \"state\": \"<string>\",\n      \"stateMachineDetails\": {\n        \"identifier\": \"<string>\",\n        \"lastError\": {\n          \"errorMessage\": \"<string>\",\n          \"errorCode\": \"<string>\",\n          \"actionIdentifier\": \"<string>\"\n        }\n      },\n      \"labels\": {\n        \"groupedLabels\": {\n          \"cupidatat__\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        \"ungroupedLabels\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"fmcDomainUid\": \"<uuid>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"modelNumber\": \"<string>\"\n    },\n    {\n      \"deviceType\": \"MERAKI_MX\",\n      \"name\": \"<string>\",\n      \"uid\": \"<uuid>\",\n      \"connectorType\": \"CDG\",\n      \"connectorUid\": \"<uuid>\",\n      \"address\": \"<string>\",\n      \"deviceRole\": \"ANYCONNECT_VPN_HEAD_END\",\n      \"serial\": \"<string>\",\n      \"chassisSerial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"connectivityState\": \"ONLINE\",\n      \"configState\": \"UNKNOWN\",\n      \"conflictDetectionState\": \"NO_CONFLICTS\",\n      \"notes\": \"<string>\",\n      \"asdmVersion\": \"<string>\",\n      \"asaFailoverMode\": \"OFF\",\n      \"asaFailoverState\": \"<string>\",\n      \"asaFailoverMate\": {\n        \"failoverState\": \"<string>\",\n        \"serial\": \"<string>\",\n        \"softwareVersion\": \"<string>\"\n      },\n      \"asaLicenseEntitlements\": {\n        \"consequat_d5\": \"<string>\"\n      },\n      \"ftdLicenses\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"snortVersion\": \"<string>\",\n      \"ftdPerformanceTier\": \"<string>\",\n      \"redundancyMode\": \"CLUSTER\",\n      \"cdFmcInfo\": {\n        \"cliKey\": \"<string>\",\n        \"regKey\": \"<string>\",\n        \"natId\": \"<string>\"\n      },\n      \"sseDeviceData\": {\n        \"sseDeviceId\": \"<string>\",\n        \"sseProtocolVersion\": \"ONE\"\n      },\n      \"onPremFmcInfo\": {\n        \"name\": \"<string>\",\n        \"address\": \"<string>\"\n      },\n      \"ftdClusterInfo\": {\n        \"controlNode\": {\n          \"serial\": \"<string>\",\n          \"softwareVersion\": \"<string>\",\n          \"uidOnFmc\": \"<uuid>\",\n          \"status\": \"DISABLED\"\n        },\n        \"dataNodes\": [\n          {\n            \"serial\": \"<string>\",\n            \"softwareVersion\": \"<string>\",\n            \"uidOnFmc\": \"<uuid>\",\n            \"status\": \"NOT_AVAILABLE\"\n          },\n          {\n            \"serial\": \"<string>\",\n            \"softwareVersion\": \"<string>\",\n            \"uidOnFmc\": \"<uuid>\",\n            \"status\": \"DISABLED\"\n          }\n        ]\n      },\n      \"ftdHaInfo\": {\n        \"primaryNode\": {\n          \"serial\": \"<string>\",\n          \"softwareVersion\": \"<string>\",\n          \"uidOnFmc\": \"<uuid>\",\n          \"status\": \"WARNING\"\n        },\n        \"secondaryNode\": {\n          \"serial\": \"<string>\",\n          \"softwareVersion\": \"<string>\",\n          \"uidOnFmc\": \"<uuid>\",\n          \"status\": \"UNKNOWN\"\n        }\n      },\n      \"merakiDeploymentMode\": \"ROUTED\",\n      \"merakiNetwork\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"timezone\": \"<string>\"\n      },\n      \"state\": \"<string>\",\n      \"stateMachineDetails\": {\n        \"identifier\": \"<string>\",\n        \"lastError\": {\n          \"errorMessage\": \"<string>\",\n          \"errorCode\": \"<string>\",\n          \"actionIdentifier\": \"<string>\"\n        }\n      },\n      \"labels\": {\n        \"groupedLabels\": {\n          \"sint_2db\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"consequat05\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dolor0\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"amet_2\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"exercitation0\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        \"ungroupedLabels\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"fmcDomainUid\": \"<uuid>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"modelNumber\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/templates?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"templates"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/templates?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"templates"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/templates?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"templates"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/templates?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"templates"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "services",
							"item": [
								{
									"name": "{cloudServiceUid}",
									"item": [
										{
											"name": "Get Cloud Service",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/services/:cloudServiceUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"services",
														":cloudServiceUid"
													],
													"variable": [
														{
															"key": "cloudServiceUid",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the cloud service in CDO."
														}
													]
												},
												"description": "Get a Cloud Service by UID in the CDO tenant."
											},
											"response": [
												{
													"name": "Cloud Service",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/services/:cloudServiceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"services",
																":cloudServiceUid"
															],
															"variable": [
																{
																	"key": "cloudServiceUid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"deviceType\": \"CDFMC\",\n  \"name\": \"<string>\",\n  \"uid\": \"<uuid>\",\n  \"connectorType\": \"SDC\",\n  \"connectorUid\": \"<uuid>\",\n  \"address\": \"<string>\",\n  \"deviceRole\": \"ZTNA_PROVIDER\",\n  \"serial\": \"<string>\",\n  \"chassisSerial\": \"<string>\",\n  \"softwareVersion\": \"<string>\",\n  \"connectivityState\": \"UNKNOWN\",\n  \"configState\": \"NOT_SYNCED\",\n  \"conflictDetectionState\": \"NO_CONFLICTS\",\n  \"notes\": \"<string>\",\n  \"asdmVersion\": \"<string>\",\n  \"asaFailoverMode\": \"OFF\",\n  \"asaFailoverState\": \"<string>\",\n  \"asaFailoverMate\": {\n    \"failoverState\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"softwareVersion\": \"<string>\"\n  },\n  \"asaLicenseEntitlements\": {\n    \"pariatur__b5\": \"<string>\"\n  },\n  \"ftdLicenses\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"snortVersion\": \"<string>\",\n  \"ftdPerformanceTier\": \"<string>\",\n  \"redundancyMode\": \"HA\",\n  \"cdFmcInfo\": {\n    \"cliKey\": \"<string>\",\n    \"regKey\": \"<string>\",\n    \"natId\": \"<string>\"\n  },\n  \"sseDeviceData\": {\n    \"sseDeviceId\": \"<string>\",\n    \"sseProtocolVersion\": \"TWO\"\n  },\n  \"onPremFmcInfo\": {\n    \"name\": \"<string>\",\n    \"address\": \"<string>\"\n  },\n  \"ftdClusterInfo\": {\n    \"controlNode\": {\n      \"serial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"status\": \"JOINING\"\n    },\n    \"dataNodes\": [\n      {\n        \"serial\": \"<string>\",\n        \"softwareVersion\": \"<string>\",\n        \"uidOnFmc\": \"<uuid>\",\n        \"status\": \"UNKNOWN\"\n      },\n      {\n        \"serial\": \"<string>\",\n        \"softwareVersion\": \"<string>\",\n        \"uidOnFmc\": \"<uuid>\",\n        \"status\": \"JOINING\"\n      }\n    ]\n  },\n  \"ftdHaInfo\": {\n    \"primaryNode\": {\n      \"serial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"status\": \"NORMAL\"\n    },\n    \"secondaryNode\": {\n      \"serial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"status\": \"DISABLED\"\n    }\n  },\n  \"merakiDeploymentMode\": \"ROUTED\",\n  \"merakiNetwork\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"timezone\": \"<string>\"\n  },\n  \"state\": \"<string>\",\n  \"stateMachineDetails\": {\n    \"identifier\": \"<string>\",\n    \"lastError\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<string>\",\n      \"actionIdentifier\": \"<string>\"\n    }\n  },\n  \"labels\": {\n    \"groupedLabels\": {\n      \"exercitationda\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"nulla54\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"fmcDomainUid\": \"<uuid>\",\n  \"uidOnFmc\": \"<uuid>\",\n  \"modelNumber\": \"<string>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/services/:cloudServiceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"services",
																":cloudServiceUid"
															],
															"variable": [
																{
																	"key": "cloudServiceUid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/services/:cloudServiceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"services",
																":cloudServiceUid"
															],
															"variable": [
																{
																	"key": "cloudServiceUid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/services/:cloudServiceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"services",
																":cloudServiceUid"
															],
															"variable": [
																{
																	"key": "cloudServiceUid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Entity not found.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/services/:cloudServiceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"services",
																":cloudServiceUid"
															],
															"variable": [
																{
																	"key": "cloudServiceUid"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/services/:cloudServiceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"services",
																":cloudServiceUid"
															],
															"variable": [
																{
																	"key": "cloudServiceUid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										},
										{
											"name": "Delete Cloud Service",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/services/:cloudServiceUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"services",
														":cloudServiceUid"
													],
													"variable": [
														{
															"key": "cloudServiceUid",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the cloud service in CDO."
														}
													]
												},
												"description": "Delete a Cloud Service by UID in the CDO tenant."
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/services/:cloudServiceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"services",
																":cloudServiceUid"
															],
															"variable": [
																{
																	"key": "cloudServiceUid"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/services/:cloudServiceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"services",
																":cloudServiceUid"
															],
															"variable": [
																{
																	"key": "cloudServiceUid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/services/:cloudServiceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"services",
																":cloudServiceUid"
															],
															"variable": [
																{
																	"key": "cloudServiceUid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/services/:cloudServiceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"services",
																":cloudServiceUid"
															],
															"variable": [
																{
																	"key": "cloudServiceUid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/services/:cloudServiceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"services",
																":cloudServiceUid"
															],
															"variable": [
																{
																	"key": "cloudServiceUid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										},
										{
											"name": "Modify Cloud Service",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/services/:cloudServiceUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"services",
														":cloudServiceUid"
													],
													"variable": [
														{
															"key": "cloudServiceUid",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the cloud service in CDO."
														}
													]
												},
												"description": "Modify a Cloud Service by UID in the CDO tenant."
											},
											"response": [
												{
													"name": "Cloud Service",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/services/:cloudServiceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"services",
																":cloudServiceUid"
															],
															"variable": [
																{
																	"key": "cloudServiceUid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"deviceType\": \"CDFMC\",\n  \"name\": \"<string>\",\n  \"uid\": \"<uuid>\",\n  \"connectorType\": \"SDC\",\n  \"connectorUid\": \"<uuid>\",\n  \"address\": \"<string>\",\n  \"deviceRole\": \"ZTNA_PROVIDER\",\n  \"serial\": \"<string>\",\n  \"chassisSerial\": \"<string>\",\n  \"softwareVersion\": \"<string>\",\n  \"connectivityState\": \"UNKNOWN\",\n  \"configState\": \"NOT_SYNCED\",\n  \"conflictDetectionState\": \"NO_CONFLICTS\",\n  \"notes\": \"<string>\",\n  \"asdmVersion\": \"<string>\",\n  \"asaFailoverMode\": \"OFF\",\n  \"asaFailoverState\": \"<string>\",\n  \"asaFailoverMate\": {\n    \"failoverState\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"softwareVersion\": \"<string>\"\n  },\n  \"asaLicenseEntitlements\": {\n    \"pariatur__b5\": \"<string>\"\n  },\n  \"ftdLicenses\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"snortVersion\": \"<string>\",\n  \"ftdPerformanceTier\": \"<string>\",\n  \"redundancyMode\": \"HA\",\n  \"cdFmcInfo\": {\n    \"cliKey\": \"<string>\",\n    \"regKey\": \"<string>\",\n    \"natId\": \"<string>\"\n  },\n  \"sseDeviceData\": {\n    \"sseDeviceId\": \"<string>\",\n    \"sseProtocolVersion\": \"TWO\"\n  },\n  \"onPremFmcInfo\": {\n    \"name\": \"<string>\",\n    \"address\": \"<string>\"\n  },\n  \"ftdClusterInfo\": {\n    \"controlNode\": {\n      \"serial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"status\": \"JOINING\"\n    },\n    \"dataNodes\": [\n      {\n        \"serial\": \"<string>\",\n        \"softwareVersion\": \"<string>\",\n        \"uidOnFmc\": \"<uuid>\",\n        \"status\": \"UNKNOWN\"\n      },\n      {\n        \"serial\": \"<string>\",\n        \"softwareVersion\": \"<string>\",\n        \"uidOnFmc\": \"<uuid>\",\n        \"status\": \"JOINING\"\n      }\n    ]\n  },\n  \"ftdHaInfo\": {\n    \"primaryNode\": {\n      \"serial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"status\": \"NORMAL\"\n    },\n    \"secondaryNode\": {\n      \"serial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"status\": \"DISABLED\"\n    }\n  },\n  \"merakiDeploymentMode\": \"ROUTED\",\n  \"merakiNetwork\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"timezone\": \"<string>\"\n  },\n  \"state\": \"<string>\",\n  \"stateMachineDetails\": {\n    \"identifier\": \"<string>\",\n    \"lastError\": {\n      \"errorMessage\": \"<string>\",\n      \"errorCode\": \"<string>\",\n      \"actionIdentifier\": \"<string>\"\n    }\n  },\n  \"labels\": {\n    \"groupedLabels\": {\n      \"exercitationda\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"nulla54\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"fmcDomainUid\": \"<uuid>\",\n  \"uidOnFmc\": \"<uuid>\",\n  \"modelNumber\": \"<string>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/services/:cloudServiceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"services",
																":cloudServiceUid"
															],
															"variable": [
																{
																	"key": "cloudServiceUid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/services/:cloudServiceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"services",
																":cloudServiceUid"
															],
															"variable": [
																{
																	"key": "cloudServiceUid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/services/:cloudServiceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"services",
																":cloudServiceUid"
															],
															"variable": [
																{
																	"key": "cloudServiceUid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Entity not found.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/services/:cloudServiceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"services",
																":cloudServiceUid"
															],
															"variable": [
																{
																	"key": "cloudServiceUid"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"labels\": {\n    \"groupedLabels\": {\n      \"ut6\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"ungroupedLabels\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/inventory/services/:cloudServiceUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"inventory",
																"services",
																":cloudServiceUid"
															],
															"variable": [
																{
																	"key": "cloudServiceUid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Cloud Services",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inventory/services?limit=50&offset=0&q=<string>&sort=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inventory",
												"services"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										},
										"description": "Get a list of Cloud Services in the CDO tenant."
									},
									"response": [
										{
											"name": "List of Cloud Services",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/services?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"services"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"items\": [\n    {\n      \"deviceType\": \"ONPREM_FMC_NGIPS\",\n      \"name\": \"<string>\",\n      \"uid\": \"<uuid>\",\n      \"connectorType\": \"SDC\",\n      \"connectorUid\": \"<uuid>\",\n      \"address\": \"<string>\",\n      \"deviceRole\": \"RA_VPN_HEADEND\",\n      \"serial\": \"<string>\",\n      \"chassisSerial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"connectivityState\": \"BAD_CREDENTIALS\",\n      \"configState\": \"NOT_SYNCED\",\n      \"conflictDetectionState\": \"NO_CONFLICTS\",\n      \"notes\": \"<string>\",\n      \"asdmVersion\": \"<string>\",\n      \"asaFailoverMode\": \"ACTIVE_STANDBY\",\n      \"asaFailoverState\": \"<string>\",\n      \"asaFailoverMate\": {\n        \"failoverState\": \"<string>\",\n        \"serial\": \"<string>\",\n        \"softwareVersion\": \"<string>\"\n      },\n      \"asaLicenseEntitlements\": {\n        \"consequat_4\": \"<string>\"\n      },\n      \"ftdLicenses\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"snortVersion\": \"<string>\",\n      \"ftdPerformanceTier\": \"<string>\",\n      \"redundancyMode\": \"STANDALONE\",\n      \"cdFmcInfo\": {\n        \"cliKey\": \"<string>\",\n        \"regKey\": \"<string>\",\n        \"natId\": \"<string>\"\n      },\n      \"sseDeviceData\": {\n        \"sseDeviceId\": \"<string>\",\n        \"sseProtocolVersion\": \"TWO\"\n      },\n      \"onPremFmcInfo\": {\n        \"name\": \"<string>\",\n        \"address\": \"<string>\"\n      },\n      \"ftdClusterInfo\": {\n        \"controlNode\": {\n          \"serial\": \"<string>\",\n          \"softwareVersion\": \"<string>\",\n          \"uidOnFmc\": \"<uuid>\",\n          \"status\": \"JOINING\"\n        },\n        \"dataNodes\": [\n          {\n            \"serial\": \"<string>\",\n            \"softwareVersion\": \"<string>\",\n            \"uidOnFmc\": \"<uuid>\",\n            \"status\": \"ADDED_OUT_OF_BOX\"\n          },\n          {\n            \"serial\": \"<string>\",\n            \"softwareVersion\": \"<string>\",\n            \"uidOnFmc\": \"<uuid>\",\n            \"status\": \"ADDED_OUT_OF_BOX\"\n          }\n        ]\n      },\n      \"ftdHaInfo\": {\n        \"primaryNode\": {\n          \"serial\": \"<string>\",\n          \"softwareVersion\": \"<string>\",\n          \"uidOnFmc\": \"<uuid>\",\n          \"status\": \"WARNING\"\n        },\n        \"secondaryNode\": {\n          \"serial\": \"<string>\",\n          \"softwareVersion\": \"<string>\",\n          \"uidOnFmc\": \"<uuid>\",\n          \"status\": \"DISABLED\"\n        }\n      },\n      \"merakiDeploymentMode\": \"ROUTED\",\n      \"merakiNetwork\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"timezone\": \"<string>\"\n      },\n      \"state\": \"<string>\",\n      \"stateMachineDetails\": {\n        \"identifier\": \"<string>\",\n        \"lastError\": {\n          \"errorMessage\": \"<string>\",\n          \"errorCode\": \"<string>\",\n          \"actionIdentifier\": \"<string>\"\n        }\n      },\n      \"labels\": {\n        \"groupedLabels\": {\n          \"cupidatat__\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        \"ungroupedLabels\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"fmcDomainUid\": \"<uuid>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"modelNumber\": \"<string>\"\n    },\n    {\n      \"deviceType\": \"MERAKI_MX\",\n      \"name\": \"<string>\",\n      \"uid\": \"<uuid>\",\n      \"connectorType\": \"CDG\",\n      \"connectorUid\": \"<uuid>\",\n      \"address\": \"<string>\",\n      \"deviceRole\": \"ANYCONNECT_VPN_HEAD_END\",\n      \"serial\": \"<string>\",\n      \"chassisSerial\": \"<string>\",\n      \"softwareVersion\": \"<string>\",\n      \"connectivityState\": \"ONLINE\",\n      \"configState\": \"UNKNOWN\",\n      \"conflictDetectionState\": \"NO_CONFLICTS\",\n      \"notes\": \"<string>\",\n      \"asdmVersion\": \"<string>\",\n      \"asaFailoverMode\": \"OFF\",\n      \"asaFailoverState\": \"<string>\",\n      \"asaFailoverMate\": {\n        \"failoverState\": \"<string>\",\n        \"serial\": \"<string>\",\n        \"softwareVersion\": \"<string>\"\n      },\n      \"asaLicenseEntitlements\": {\n        \"consequat_d5\": \"<string>\"\n      },\n      \"ftdLicenses\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"snortVersion\": \"<string>\",\n      \"ftdPerformanceTier\": \"<string>\",\n      \"redundancyMode\": \"CLUSTER\",\n      \"cdFmcInfo\": {\n        \"cliKey\": \"<string>\",\n        \"regKey\": \"<string>\",\n        \"natId\": \"<string>\"\n      },\n      \"sseDeviceData\": {\n        \"sseDeviceId\": \"<string>\",\n        \"sseProtocolVersion\": \"ONE\"\n      },\n      \"onPremFmcInfo\": {\n        \"name\": \"<string>\",\n        \"address\": \"<string>\"\n      },\n      \"ftdClusterInfo\": {\n        \"controlNode\": {\n          \"serial\": \"<string>\",\n          \"softwareVersion\": \"<string>\",\n          \"uidOnFmc\": \"<uuid>\",\n          \"status\": \"DISABLED\"\n        },\n        \"dataNodes\": [\n          {\n            \"serial\": \"<string>\",\n            \"softwareVersion\": \"<string>\",\n            \"uidOnFmc\": \"<uuid>\",\n            \"status\": \"NOT_AVAILABLE\"\n          },\n          {\n            \"serial\": \"<string>\",\n            \"softwareVersion\": \"<string>\",\n            \"uidOnFmc\": \"<uuid>\",\n            \"status\": \"DISABLED\"\n          }\n        ]\n      },\n      \"ftdHaInfo\": {\n        \"primaryNode\": {\n          \"serial\": \"<string>\",\n          \"softwareVersion\": \"<string>\",\n          \"uidOnFmc\": \"<uuid>\",\n          \"status\": \"WARNING\"\n        },\n        \"secondaryNode\": {\n          \"serial\": \"<string>\",\n          \"softwareVersion\": \"<string>\",\n          \"uidOnFmc\": \"<uuid>\",\n          \"status\": \"UNKNOWN\"\n        }\n      },\n      \"merakiDeploymentMode\": \"ROUTED\",\n      \"merakiNetwork\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"timezone\": \"<string>\"\n      },\n      \"state\": \"<string>\",\n      \"stateMachineDetails\": {\n        \"identifier\": \"<string>\",\n        \"lastError\": {\n          \"errorMessage\": \"<string>\",\n          \"errorCode\": \"<string>\",\n          \"actionIdentifier\": \"<string>\"\n        }\n      },\n      \"labels\": {\n        \"groupedLabels\": {\n          \"sint_2db\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"consequat05\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"dolor0\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"amet_2\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"exercitation0\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        \"ungroupedLabels\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"fmcDomainUid\": \"<uuid>\",\n      \"uidOnFmc\": \"<uuid>\",\n      \"modelNumber\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/services?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"services"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/services?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"services"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/services?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"services"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory/services?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory",
														"services"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "connectors",
					"item": [
						{
							"name": "sdcs",
							"item": [
								{
									"name": "{sdcUid}",
									"item": [
										{
											"name": "Get SDC",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/connectors/sdcs/:sdcUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"connectors",
														"sdcs",
														":sdcUid"
													],
													"variable": [
														{
															"key": "sdcUid",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the SDC in CDO."
														}
													]
												},
												"description": "Get a SDC by UID in the CDO tenant."
											},
											"response": [
												{
													"name": "SDC object",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/connectors/sdcs/:sdcUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"connectors",
																"sdcs",
																":sdcUid"
															],
															"variable": [
																{
																	"key": "sdcUid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"<string>\",\n  \"publicKey\": {\n    \"base64EncodedKey\": \"<string>\",\n    \"keyId\": \"<string>\"\n  },\n  \"uid\": \"<uuid>\",\n  \"softwareVersion\": \"<string>\",\n  \"ipAddress\": \"<string>\",\n  \"status\": \"ACTIVE\",\n  \"lastHeartbeat\": \"<dateTime>\",\n  \"bootstrapData\": \"<string>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/connectors/sdcs/:sdcUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"connectors",
																"sdcs",
																":sdcUid"
															],
															"variable": [
																{
																	"key": "sdcUid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/connectors/sdcs/:sdcUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"connectors",
																"sdcs",
																":sdcUid"
															],
															"variable": [
																{
																	"key": "sdcUid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/connectors/sdcs/:sdcUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"connectors",
																"sdcs",
																":sdcUid"
															],
															"variable": [
																{
																	"key": "sdcUid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Entity not found.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/connectors/sdcs/:sdcUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"connectors",
																"sdcs",
																":sdcUid"
															],
															"variable": [
																{
																	"key": "sdcUid"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/connectors/sdcs/:sdcUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"connectors",
																"sdcs",
																":sdcUid"
															],
															"variable": [
																{
																	"key": "sdcUid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										},
										{
											"name": "Delete SDC",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/connectors/sdcs/:sdcUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"connectors",
														"sdcs",
														":sdcUid"
													],
													"variable": [
														{
															"key": "sdcUid",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the SDC in CDO."
														}
													]
												},
												"description": "Delete an SDC in the CDO tenant"
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/connectors/sdcs/:sdcUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"connectors",
																"sdcs",
																":sdcUid"
															],
															"variable": [
																{
																	"key": "sdcUid"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/connectors/sdcs/:sdcUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"connectors",
																"sdcs",
																":sdcUid"
															],
															"variable": [
																{
																	"key": "sdcUid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/connectors/sdcs/:sdcUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"connectors",
																"sdcs",
																":sdcUid"
															],
															"variable": [
																{
																	"key": "sdcUid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/connectors/sdcs/:sdcUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"connectors",
																"sdcs",
																":sdcUid"
															],
															"variable": [
																{
																	"key": "sdcUid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/connectors/sdcs/:sdcUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"connectors",
																"sdcs",
																":sdcUid"
															],
															"variable": [
																{
																	"key": "sdcUid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										},
										{
											"name": "Modify SDC",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/connectors/sdcs/:sdcUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"connectors",
														"sdcs",
														":sdcUid"
													],
													"variable": [
														{
															"key": "sdcUid",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the SDC in CDO."
														}
													]
												},
												"description": "Modify a SDC in the CDO tenant"
											},
											"response": [
												{
													"name": "SDC object",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/connectors/sdcs/:sdcUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"connectors",
																"sdcs",
																":sdcUid"
															],
															"variable": [
																{
																	"key": "sdcUid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"<string>\",\n  \"publicKey\": {\n    \"base64EncodedKey\": \"<string>\",\n    \"keyId\": \"<string>\"\n  },\n  \"uid\": \"<uuid>\",\n  \"softwareVersion\": \"<string>\",\n  \"ipAddress\": \"<string>\",\n  \"status\": \"ACTIVE\",\n  \"lastHeartbeat\": \"<dateTime>\",\n  \"bootstrapData\": \"<string>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/connectors/sdcs/:sdcUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"connectors",
																"sdcs",
																":sdcUid"
															],
															"variable": [
																{
																	"key": "sdcUid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/connectors/sdcs/:sdcUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"connectors",
																"sdcs",
																":sdcUid"
															],
															"variable": [
																{
																	"key": "sdcUid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/connectors/sdcs/:sdcUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"connectors",
																"sdcs",
																":sdcUid"
															],
															"variable": [
																{
																	"key": "sdcUid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Entity not found.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/connectors/sdcs/:sdcUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"connectors",
																"sdcs",
																":sdcUid"
															],
															"variable": [
																{
																	"key": "sdcUid"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/connectors/sdcs/:sdcUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"connectors",
																"sdcs",
																":sdcUid"
															],
															"variable": [
																{
																	"key": "sdcUid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get SDCs",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/connectors/sdcs?limit=50&offset=0&q=<string>&sort=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"connectors",
												"sdcs"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										},
										"description": "Get a list of on-prem SDCs in the CDO tenant."
									},
									"response": [
										{
											"name": "List of SDC objects",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/connectors/sdcs?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"connectors",
														"sdcs"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"items\": [\n    {\n      \"name\": \"<string>\",\n      \"publicKey\": {\n        \"base64EncodedKey\": \"<string>\",\n        \"keyId\": \"<string>\"\n      },\n      \"uid\": \"<uuid>\",\n      \"softwareVersion\": \"<string>\",\n      \"ipAddress\": \"<string>\",\n      \"status\": \"ACTIVE\",\n      \"lastHeartbeat\": \"<dateTime>\",\n      \"bootstrapData\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"publicKey\": {\n        \"base64EncodedKey\": \"<string>\",\n        \"keyId\": \"<string>\"\n      },\n      \"uid\": \"<uuid>\",\n      \"softwareVersion\": \"<string>\",\n      \"ipAddress\": \"<string>\",\n      \"status\": \"DISABLED\",\n      \"lastHeartbeat\": \"<dateTime>\",\n      \"bootstrapData\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/connectors/sdcs?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"connectors",
														"sdcs"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/connectors/sdcs?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"connectors",
														"sdcs"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/connectors/sdcs?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"connectors",
														"sdcs"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/connectors/sdcs?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"connectors",
														"sdcs"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								},
								{
									"name": "Create SDC",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/connectors/sdcs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"connectors",
												"sdcs"
											]
										},
										"description": "This is an asynchronous operation to create an SDC to a CDO tenant. This operation returns a link to a transaction object that can be used to monitor the progress of the operation."
									},
									"response": [
										{
											"name": "CDO Transaction object that can be used to track the progress of the creation operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/connectors/sdcs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"connectors",
														"sdcs"
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/connectors/sdcs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"connectors",
														"sdcs"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/connectors/sdcs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"connectors",
														"sdcs"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/connectors/sdcs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"connectors",
														"sdcs"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/connectors/sdcs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"connectors",
														"sdcs"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "cli",
					"item": [
						{
							"name": "macros",
							"item": [
								{
									"name": "{macroUid}",
									"item": [
										{
											"name": "Get CLI Macro",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cli/macros/:macroUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cli",
														"macros",
														":macroUid"
													],
													"variable": [
														{
															"key": "macroUid",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the CDO CLI macro in CDO."
														}
													]
												},
												"description": "Get a CDO CLI Macro by UID."
											},
											"response": [
												{
													"name": "CDO CLI macro",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/cli/macros/:macroUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"macros",
																":macroUid"
															],
															"variable": [
																{
																	"key": "macroUid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"deviceType\": \"CDFMC_MANAGED_FTD\",\n  \"uid\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"script\": \"<string>\",\n  \"parameters\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"systemDefined\": \"<boolean>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/cli/macros/:macroUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"macros",
																":macroUid"
															],
															"variable": [
																{
																	"key": "macroUid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/cli/macros/:macroUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"macros",
																":macroUid"
															],
															"variable": [
																{
																	"key": "macroUid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/cli/macros/:macroUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"macros",
																":macroUid"
															],
															"variable": [
																{
																	"key": "macroUid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Entity not found.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/cli/macros/:macroUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"macros",
																":macroUid"
															],
															"variable": [
																{
																	"key": "macroUid"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Method not allowed.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/cli/macros/:macroUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"macros",
																":macroUid"
															],
															"variable": [
																{
																	"key": "macroUid"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/cli/macros/:macroUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"macros",
																":macroUid"
															],
															"variable": [
																{
																	"key": "macroUid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										},
										{
											"name": "Delete CLI Macro",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cli/macros/:macroUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cli",
														"macros",
														":macroUid"
													],
													"variable": [
														{
															"key": "macroUid",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the CDO CLI macro in CDO."
														}
													]
												},
												"description": "Delete a CDO CLI Macro by UID."
											},
											"response": [
												{
													"name": "CDO CLI macro",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/cli/macros/:macroUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"macros",
																":macroUid"
															],
															"variable": [
																{
																	"key": "macroUid"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/cli/macros/:macroUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"macros",
																":macroUid"
															],
															"variable": [
																{
																	"key": "macroUid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/cli/macros/:macroUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"macros",
																":macroUid"
															],
															"variable": [
																{
																	"key": "macroUid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/cli/macros/:macroUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"macros",
																":macroUid"
															],
															"variable": [
																{
																	"key": "macroUid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Method not allowed.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/cli/macros/:macroUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"macros",
																":macroUid"
															],
															"variable": [
																{
																	"key": "macroUid"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/cli/macros/:macroUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"macros",
																":macroUid"
															],
															"variable": [
																{
																	"key": "macroUid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										},
										{
											"name": "Modify CLI Macro",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"script\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/cli/macros/:macroUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cli",
														"macros",
														":macroUid"
													],
													"variable": [
														{
															"key": "macroUid",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the CDO CLI macro in CDO."
														}
													]
												},
												"description": "Modify a CDO CLI Macro by UID."
											},
											"response": [
												{
													"name": "CDO CLI macro",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"script\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/cli/macros/:macroUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"macros",
																":macroUid"
															],
															"variable": [
																{
																	"key": "macroUid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"deviceType\": \"CDFMC_MANAGED_FTD\",\n  \"uid\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"script\": \"<string>\",\n  \"parameters\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"systemDefined\": \"<boolean>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"script\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/cli/macros/:macroUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"macros",
																":macroUid"
															],
															"variable": [
																{
																	"key": "macroUid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"script\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/cli/macros/:macroUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"macros",
																":macroUid"
															],
															"variable": [
																{
																	"key": "macroUid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"script\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/cli/macros/:macroUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"macros",
																":macroUid"
															],
															"variable": [
																{
																	"key": "macroUid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Entity not found.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"script\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/cli/macros/:macroUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"macros",
																":macroUid"
															],
															"variable": [
																{
																	"key": "macroUid"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Method not allowed.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"script\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/cli/macros/:macroUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"macros",
																":macroUid"
															],
															"variable": [
																{
																	"key": "macroUid"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"script\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/cli/macros/:macroUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"macros",
																":macroUid"
															],
															"variable": [
																{
																	"key": "macroUid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get CLI Macros",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/cli/macros?limit=50&offset=0&q=<string>&sort=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cli",
												"macros"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										},
										"description": "Get a list of CLI macros. A CLI macro is a fully-formed CLI command ready to use, or a template of a CLI command you can modify before you run it."
									},
									"response": [
										{
											"name": "List of CDO CLI macros",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cli/macros?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cli",
														"macros"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"items\": [\n    {\n      \"deviceType\": \"ONPREM_FMC_NGIPS\",\n      \"uid\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"script\": \"<string>\",\n      \"parameters\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"systemDefined\": \"<boolean>\"\n    },\n    {\n      \"deviceType\": \"UMBRELLA_ORGANIZATION\",\n      \"uid\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"script\": \"<string>\",\n      \"parameters\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"systemDefined\": \"<boolean>\"\n    }\n  ]\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cli/macros?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cli",
														"macros"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cli/macros?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cli",
														"macros"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cli/macros?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cli",
														"macros"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Method not allowed.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cli/macros?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cli",
														"macros"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cli/macros?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cli",
														"macros"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								},
								{
									"name": "Create CLI Macro",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"script\": \"<string>\",\n  \"deviceType\": \"IOS\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/cli/macros",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cli",
												"macros"
											]
										},
										"description": "Create a CLI macro, which is a fully-formed CLI command ready to use or a template of a CLI command you can modify before you run it."
									},
									"response": [
										{
											"name": "CDO CLI macro",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"script\": \"<string>\",\n  \"deviceType\": \"IOS\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/cli/macros",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cli",
														"macros"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"deviceType\": \"CDFMC_MANAGED_FTD\",\n  \"uid\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"script\": \"<string>\",\n  \"parameters\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"systemDefined\": \"<boolean>\"\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"script\": \"<string>\",\n  \"deviceType\": \"IOS\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/cli/macros",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cli",
														"macros"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"script\": \"<string>\",\n  \"deviceType\": \"IOS\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/cli/macros",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cli",
														"macros"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"script\": \"<string>\",\n  \"deviceType\": \"IOS\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/cli/macros",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cli",
														"macros"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Method not allowed.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"script\": \"<string>\",\n  \"deviceType\": \"IOS\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/cli/macros",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cli",
														"macros"
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"script\": \"<string>\",\n  \"deviceType\": \"IOS\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/cli/macros",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cli",
														"macros"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "results",
							"item": [
								{
									"name": "{cliResultUid}",
									"item": [
										{
											"name": "Get CLI Result",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cli/results/:cliResultUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cli",
														"results",
														":cliResultUid"
													],
													"variable": [
														{
															"key": "cliResultUid",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the CDO CLI result in CDO."
														}
													]
												},
												"description": "Get the result of a command executed using the CDO Command Line Interface (CLI) by UID."
											},
											"response": [
												{
													"name": "CDO CLI result",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/cli/results/:cliResultUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"results",
																":cliResultUid"
															],
															"variable": [
																{
																	"key": "cliResultUid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"deviceUid\": \"<uuid>\",\n  \"uid\": \"<uuid>\",\n  \"result\": \"<string>\",\n  \"errorMsg\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"script\": \"<string>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/cli/results/:cliResultUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"results",
																":cliResultUid"
															],
															"variable": [
																{
																	"key": "cliResultUid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/cli/results/:cliResultUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"results",
																":cliResultUid"
															],
															"variable": [
																{
																	"key": "cliResultUid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/cli/results/:cliResultUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"results",
																":cliResultUid"
															],
															"variable": [
																{
																	"key": "cliResultUid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Entity not found.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/cli/results/:cliResultUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"results",
																":cliResultUid"
															],
															"variable": [
																{
																	"key": "cliResultUid"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Method not allowed.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/cli/results/:cliResultUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"results",
																":cliResultUid"
															],
															"variable": [
																{
																	"key": "cliResultUid"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/cli/results/:cliResultUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cli",
																"results",
																":cliResultUid"
															],
															"variable": [
																{
																	"key": "cliResultUid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get CLI Results",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/cli/results?limit=50&offset=0&q=<string>&sort=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cli",
												"results"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										},
										"description": "Get a list of results from command lines executed using the [CDO Command Line Interface (CLI)](https://docs.defenseorchestrator.com/c-using-the-cdo-command-line-interface.html). These commands can be executed using either the CDO UI or the API."
									},
									"response": [
										{
											"name": "List of CDO CLI execution results",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cli/results?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cli",
														"results"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"items\": [\n    {\n      \"deviceUid\": \"<uuid>\",\n      \"uid\": \"<uuid>\",\n      \"result\": \"<string>\",\n      \"errorMsg\": \"<string>\",\n      \"startTime\": \"<dateTime>\",\n      \"script\": \"<string>\"\n    },\n    {\n      \"deviceUid\": \"<uuid>\",\n      \"uid\": \"<uuid>\",\n      \"result\": \"<string>\",\n      \"errorMsg\": \"<string>\",\n      \"startTime\": \"<dateTime>\",\n      \"script\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cli/results?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cli",
														"results"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cli/results?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cli",
														"results"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cli/results?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cli",
														"results"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Method not allowed.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cli/results?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cli",
														"results"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cli/results?limit=50&offset=0&q=<string>&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cli",
														"results"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "changeRequests",
					"item": [
						{
							"name": "{changeRequestUid}",
							"item": [
								{
									"name": "Get Change Request",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/changeRequests/:changeRequestUid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"changeRequests",
												":changeRequestUid"
											],
											"variable": [
												{
													"key": "changeRequestUid",
													"value": "<uuid>",
													"description": "(Required) The unique identifier of the Change Request in CDO."
												}
											]
										},
										"description": "Get a Change Request by UID in the CDO tenant."
									},
									"response": [
										{
											"name": "Change Request object",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/changeRequests/:changeRequestUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"changeRequests",
														":changeRequestUid"
													],
													"variable": [
														{
															"key": "changeRequestUid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"<string>\",\n  \"uid\": \"<uuid>\",\n  \"description\": \"<string>\"\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/changeRequests/:changeRequestUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"changeRequests",
														":changeRequestUid"
													],
													"variable": [
														{
															"key": "changeRequestUid"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/changeRequests/:changeRequestUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"changeRequests",
														":changeRequestUid"
													],
													"variable": [
														{
															"key": "changeRequestUid"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/changeRequests/:changeRequestUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"changeRequests",
														":changeRequestUid"
													],
													"variable": [
														{
															"key": "changeRequestUid"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Entity not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/changeRequests/:changeRequestUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"changeRequests",
														":changeRequestUid"
													],
													"variable": [
														{
															"key": "changeRequestUid"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Method not allowed.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/changeRequests/:changeRequestUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"changeRequests",
														":changeRequestUid"
													],
													"variable": [
														{
															"key": "changeRequestUid"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/changeRequests/:changeRequestUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"changeRequests",
														":changeRequestUid"
													],
													"variable": [
														{
															"key": "changeRequestUid"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								},
								{
									"name": "Delete Change Request",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/changeRequests/:changeRequestUid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"changeRequests",
												":changeRequestUid"
											],
											"variable": [
												{
													"key": "changeRequestUid",
													"value": "<uuid>",
													"description": "(Required) The unique identifier of the Change Request in CDO."
												}
											]
										},
										"description": "Delete a Change Request by UID in the CDO tenant."
									},
									"response": [
										{
											"name": "No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/changeRequests/:changeRequestUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"changeRequests",
														":changeRequestUid"
													],
													"variable": [
														{
															"key": "changeRequestUid"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/changeRequests/:changeRequestUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"changeRequests",
														":changeRequestUid"
													],
													"variable": [
														{
															"key": "changeRequestUid"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/changeRequests/:changeRequestUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"changeRequests",
														":changeRequestUid"
													],
													"variable": [
														{
															"key": "changeRequestUid"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/changeRequests/:changeRequestUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"changeRequests",
														":changeRequestUid"
													],
													"variable": [
														{
															"key": "changeRequestUid"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Method not allowed.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/changeRequests/:changeRequestUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"changeRequests",
														":changeRequestUid"
													],
													"variable": [
														{
															"key": "changeRequestUid"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/changeRequests/:changeRequestUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"changeRequests",
														":changeRequestUid"
													],
													"variable": [
														{
															"key": "changeRequestUid"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Change Requests",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/changeRequests?limit=50&offset=0&q=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"changeRequests"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "The number of results to retrieve."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
										},
										{
											"key": "q",
											"value": "<string>",
											"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
										}
									]
								},
								"description": "Get a list of Change Requests."
							},
							"response": [
								{
									"name": "List of Change Request objects",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/changeRequests?limit=50&offset=0&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"changeRequests"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<integer>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"items\": [\n    {\n      \"name\": \"<string>\",\n      \"uid\": \"<uuid>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"uid\": \"<uuid>\",\n      \"description\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Invalid input provided. Check the response for details.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/changeRequests?limit=50&offset=0&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"changeRequests"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Request not authorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/changeRequests?limit=50&offset=0&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"changeRequests"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
								},
								{
									"name": "User does not have sufficient privileges to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/changeRequests?limit=50&offset=0&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"changeRequests"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Method not allowed.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/changeRequests?limit=50&offset=0&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"changeRequests"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/changeRequests?limit=50&offset=0&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"changeRequests"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								}
							]
						},
						{
							"name": "Create Change Request",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/changeRequests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"changeRequests"
									]
								},
								"description": "Create a Change Request in the CDO tenant."
							},
							"response": [
								{
									"name": "Created change Request object",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/changeRequests",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"changeRequests"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"<string>\",\n  \"uid\": \"<uuid>\",\n  \"description\": \"<string>\"\n}"
								},
								{
									"name": "Invalid input provided. Check the response for details.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/changeRequests",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"changeRequests"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Request not authorized.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/changeRequests",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"changeRequests"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
								},
								{
									"name": "User does not have sufficient privileges to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/changeRequests",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"changeRequests"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Method not allowed.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/changeRequests",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"changeRequests"
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/changeRequests",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"changeRequests"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "ai-assistant",
					"item": [
						{
							"name": "conversations",
							"item": [
								{
									"name": "{conversationUid}",
									"item": [
										{
											"name": "messages",
											"item": [
												{
													"name": "Get Messages",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/ai-assistant/conversations/:conversationUid/messages",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"ai-assistant",
																"conversations",
																":conversationUid",
																"messages"
															],
															"variable": [
																{
																	"key": "conversationUid",
																	"value": "<uuid>",
																	"description": "(Required) The unique identifier of the conversation in CDO."
																}
															]
														},
														"description": "Get a list of messages in a single AI Assistant conversation. Note: this endpoint is not paginated, and returns the full list of messages."
													},
													"response": [
														{
															"name": "List of Conversation Messages",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/ai-assistant/conversations/:conversationUid/messages",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"ai-assistant",
																		"conversations",
																		":conversationUid",
																		"messages"
																	],
																	"variable": [
																		{
																			"key": "conversationUid"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"uid\": \"<uuid>\",\n    \"type\": \"REQUEST\",\n    \"inReplyTo\": \"<uuid>\",\n    \"content\": \"<string>\",\n    \"createdDate\": \"<dateTime>\"\n  },\n  {\n    \"uid\": \"<uuid>\",\n    \"type\": \"REQUEST\",\n    \"inReplyTo\": \"<uuid>\",\n    \"content\": \"<string>\",\n    \"createdDate\": \"<dateTime>\"\n  }\n]"
														},
														{
															"name": "Invalid input provided. Check the response for details.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/ai-assistant/conversations/:conversationUid/messages",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"ai-assistant",
																		"conversations",
																		":conversationUid",
																		"messages"
																	],
																	"variable": [
																		{
																			"key": "conversationUid"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "Request not authorized.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/ai-assistant/conversations/:conversationUid/messages",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"ai-assistant",
																		"conversations",
																		":conversationUid",
																		"messages"
																	],
																	"variable": [
																		{
																			"key": "conversationUid"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
														},
														{
															"name": "User does not have sufficient privileges to perform this operation.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/ai-assistant/conversations/:conversationUid/messages",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"ai-assistant",
																		"conversations",
																		":conversationUid",
																		"messages"
																	],
																	"variable": [
																		{
																			"key": "conversationUid"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														},
														{
															"name": "Internal server error.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/ai-assistant/conversations/:conversationUid/messages",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"ai-assistant",
																		"conversations",
																		":conversationUid",
																		"messages"
																	],
																	"variable": [
																		{
																			"key": "conversationUid"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get Conversation",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/ai-assistant/conversations/:conversationUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"ai-assistant",
														"conversations",
														":conversationUid"
													],
													"variable": [
														{
															"key": "conversationUid",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the conversation in CDO."
														}
													]
												},
												"description": "Get an AI Assistant conversation by UID in the CDO tenant."
											},
											"response": [
												{
													"name": "Conversation object",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/ai-assistant/conversations/:conversationUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"ai-assistant",
																"conversations",
																":conversationUid"
															],
															"variable": [
																{
																	"key": "conversationUid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"uid\": \"<uuid>\",\n  \"createdDate\": \"<dateTime>\",\n  \"lastInteractionDate\": \"<dateTime>\",\n  \"lastAnswerDate\": \"<dateTime>\",\n  \"title\": \"<string>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/ai-assistant/conversations/:conversationUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"ai-assistant",
																"conversations",
																":conversationUid"
															],
															"variable": [
																{
																	"key": "conversationUid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/ai-assistant/conversations/:conversationUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"ai-assistant",
																"conversations",
																":conversationUid"
															],
															"variable": [
																{
																	"key": "conversationUid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/ai-assistant/conversations/:conversationUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"ai-assistant",
																"conversations",
																":conversationUid"
															],
															"variable": [
																{
																	"key": "conversationUid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Entity not found.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/ai-assistant/conversations/:conversationUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"ai-assistant",
																"conversations",
																":conversationUid"
															],
															"variable": [
																{
																	"key": "conversationUid"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/ai-assistant/conversations/:conversationUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"ai-assistant",
																"conversations",
																":conversationUid"
															],
															"variable": [
																{
																	"key": "conversationUid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										},
										{
											"name": "Ask AI Assistant (Existing Conversation)",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"content\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/ai-assistant/conversations/:conversationUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"ai-assistant",
														"conversations",
														":conversationUid"
													],
													"variable": [
														{
															"key": "conversationUid",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												},
												"description": "Ask the AI Assistant a question in the context of an existing conversation with the AI Assistant."
											},
											"response": [
												{
													"name": "CDO Transaction object that can be used to track the status of the question.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"content\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/ai-assistant/conversations/:conversationUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"ai-assistant",
																"conversations",
																":conversationUid"
															],
															"variable": [
																{
																	"key": "conversationUid"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"content\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/ai-assistant/conversations/:conversationUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"ai-assistant",
																"conversations",
																":conversationUid"
															],
															"variable": [
																{
																	"key": "conversationUid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"content\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/ai-assistant/conversations/:conversationUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"ai-assistant",
																"conversations",
																":conversationUid"
															],
															"variable": [
																{
																	"key": "conversationUid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"content\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/ai-assistant/conversations/:conversationUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"ai-assistant",
																"conversations",
																":conversationUid"
															],
															"variable": [
																{
																	"key": "conversationUid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"content\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/ai-assistant/conversations/:conversationUid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"ai-assistant",
																"conversations",
																":conversationUid"
															],
															"variable": [
																{
																	"key": "conversationUid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Conversations",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ai-assistant/conversations?limit=50&offset=0&sort=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ai-assistant",
												"conversations"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										},
										"description": "Get a list of AI Assistant Conversations. Note: the total number of conversations is set to -1 as this information is currently unavailable."
									},
									"response": [
										{
											"name": "List of Conversations",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/ai-assistant/conversations?limit=50&offset=0&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"ai-assistant",
														"conversations"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<integer>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"items\": [\n    {\n      \"uid\": \"<uuid>\",\n      \"createdDate\": \"<dateTime>\",\n      \"lastInteractionDate\": \"<dateTime>\",\n      \"lastAnswerDate\": \"<dateTime>\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"uid\": \"<uuid>\",\n      \"createdDate\": \"<dateTime>\",\n      \"lastInteractionDate\": \"<dateTime>\",\n      \"lastAnswerDate\": \"<dateTime>\",\n      \"title\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/ai-assistant/conversations?limit=50&offset=0&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"ai-assistant",
														"conversations"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/ai-assistant/conversations?limit=50&offset=0&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"ai-assistant",
														"conversations"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/ai-assistant/conversations?limit=50&offset=0&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"ai-assistant",
														"conversations"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/ai-assistant/conversations?limit=50&offset=0&sort=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"ai-assistant",
														"conversations"
													],
													"query": [
														{
															"key": "limit",
															"value": "50",
															"description": "The number of results to retrieve."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
														},
														{
															"key": "sort",
															"value": "<string>",
															"description": "The fields to sort results by."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								},
								{
									"name": "Ask AI Assistant (New Conversation)",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ai-assistant/conversations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ai-assistant",
												"conversations"
											]
										},
										"description": "Start a new conversation with the AI Assistant by asking a question."
									},
									"response": [
										{
											"name": "CDO Transaction object that can be used to track the status of the question.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"content\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/ai-assistant/conversations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"ai-assistant",
														"conversations"
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"content\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/ai-assistant/conversations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"ai-assistant",
														"conversations"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"content\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/ai-assistant/conversations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"ai-assistant",
														"conversations"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"content\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/ai-assistant/conversations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"ai-assistant",
														"conversations"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"content\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/ai-assistant/conversations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"ai-assistant",
														"conversations"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "settings",
					"item": [
						{
							"name": "tenant",
							"item": [
								{
									"name": "Get Tenant Settings",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/settings/tenant",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"settings",
												"tenant"
											]
										},
										"description": "Get the settings for the CDO tenant."
									},
									"response": [
										{
											"name": "Tenant Settings Object",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/settings/tenant",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"settings",
														"tenant"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"uid\": \"<uuid>\",\n  \"changeRequestSupport\": \"<boolean>\",\n  \"autoAcceptDeviceChanges\": \"<boolean>\",\n  \"webAnalytics\": \"<boolean>\",\n  \"scheduledDeployments\": \"<boolean>\",\n  \"denyCiscoSupportAccessToTenant\": \"<boolean>\",\n  \"multicloudDefense\": \"<boolean>\",\n  \"policyAnalyzer\": \"<boolean>\",\n  \"aiAssistant\": \"<boolean>\",\n  \"autoDiscoverOnPremFmcs\": \"<boolean>\",\n  \"conflictDetectionInterval\": \"EVERY_6_HOURS\"\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/settings/tenant",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"settings",
														"tenant"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/settings/tenant",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"settings",
														"tenant"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/settings/tenant",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"settings",
														"tenant"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/settings/tenant",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"settings",
														"tenant"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								},
								{
									"name": "Modify Tenant Settings",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"uid\": \"<uuid>\",\n  \"changeRequestSupport\": \"<boolean>\",\n  \"autoAcceptDeviceChanges\": \"<boolean>\",\n  \"webAnalytics\": \"<boolean>\",\n  \"scheduledDeployments\": \"<boolean>\",\n  \"denyCiscoSupportAccessToTenant\": \"<boolean>\",\n  \"multicloudDefense\": \"<boolean>\",\n  \"policyAnalyzer\": \"<boolean>\",\n  \"aiAssistant\": \"<boolean>\",\n  \"autoDiscoverOnPremFmcs\": \"<boolean>\",\n  \"conflictDetectionInterval\": \"EVERY_6_HOURS\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/settings/tenant",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"settings",
												"tenant"
											]
										},
										"description": "Modify the settings for the CDO tenant."
									},
									"response": [
										{
											"name": "Tenant Settings Object",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"uid\": \"<uuid>\",\n  \"changeRequestSupport\": \"<boolean>\",\n  \"autoAcceptDeviceChanges\": \"<boolean>\",\n  \"webAnalytics\": \"<boolean>\",\n  \"scheduledDeployments\": \"<boolean>\",\n  \"denyCiscoSupportAccessToTenant\": \"<boolean>\",\n  \"multicloudDefense\": \"<boolean>\",\n  \"policyAnalyzer\": \"<boolean>\",\n  \"aiAssistant\": \"<boolean>\",\n  \"autoDiscoverOnPremFmcs\": \"<boolean>\",\n  \"conflictDetectionInterval\": \"EVERY_6_HOURS\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/settings/tenant",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"settings",
														"tenant"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"uid\": \"<uuid>\",\n  \"changeRequestSupport\": \"<boolean>\",\n  \"autoAcceptDeviceChanges\": \"<boolean>\",\n  \"webAnalytics\": \"<boolean>\",\n  \"scheduledDeployments\": \"<boolean>\",\n  \"denyCiscoSupportAccessToTenant\": \"<boolean>\",\n  \"multicloudDefense\": \"<boolean>\",\n  \"policyAnalyzer\": \"<boolean>\",\n  \"aiAssistant\": \"<boolean>\",\n  \"autoDiscoverOnPremFmcs\": \"<boolean>\",\n  \"conflictDetectionInterval\": \"EVERY_6_HOURS\"\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"uid\": \"<uuid>\",\n  \"changeRequestSupport\": \"<boolean>\",\n  \"autoAcceptDeviceChanges\": \"<boolean>\",\n  \"webAnalytics\": \"<boolean>\",\n  \"scheduledDeployments\": \"<boolean>\",\n  \"denyCiscoSupportAccessToTenant\": \"<boolean>\",\n  \"multicloudDefense\": \"<boolean>\",\n  \"policyAnalyzer\": \"<boolean>\",\n  \"aiAssistant\": \"<boolean>\",\n  \"autoDiscoverOnPremFmcs\": \"<boolean>\",\n  \"conflictDetectionInterval\": \"EVERY_6_HOURS\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/settings/tenant",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"settings",
														"tenant"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"uid\": \"<uuid>\",\n  \"changeRequestSupport\": \"<boolean>\",\n  \"autoAcceptDeviceChanges\": \"<boolean>\",\n  \"webAnalytics\": \"<boolean>\",\n  \"scheduledDeployments\": \"<boolean>\",\n  \"denyCiscoSupportAccessToTenant\": \"<boolean>\",\n  \"multicloudDefense\": \"<boolean>\",\n  \"policyAnalyzer\": \"<boolean>\",\n  \"aiAssistant\": \"<boolean>\",\n  \"autoDiscoverOnPremFmcs\": \"<boolean>\",\n  \"conflictDetectionInterval\": \"EVERY_6_HOURS\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/settings/tenant",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"settings",
														"tenant"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"uid\": \"<uuid>\",\n  \"changeRequestSupport\": \"<boolean>\",\n  \"autoAcceptDeviceChanges\": \"<boolean>\",\n  \"webAnalytics\": \"<boolean>\",\n  \"scheduledDeployments\": \"<boolean>\",\n  \"denyCiscoSupportAccessToTenant\": \"<boolean>\",\n  \"multicloudDefense\": \"<boolean>\",\n  \"policyAnalyzer\": \"<boolean>\",\n  \"aiAssistant\": \"<boolean>\",\n  \"autoDiscoverOnPremFmcs\": \"<boolean>\",\n  \"conflictDetectionInterval\": \"EVERY_6_HOURS\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/settings/tenant",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"settings",
														"tenant"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"uid\": \"<uuid>\",\n  \"changeRequestSupport\": \"<boolean>\",\n  \"autoAcceptDeviceChanges\": \"<boolean>\",\n  \"webAnalytics\": \"<boolean>\",\n  \"scheduledDeployments\": \"<boolean>\",\n  \"denyCiscoSupportAccessToTenant\": \"<boolean>\",\n  \"multicloudDefense\": \"<boolean>\",\n  \"policyAnalyzer\": \"<boolean>\",\n  \"aiAssistant\": \"<boolean>\",\n  \"autoDiscoverOnPremFmcs\": \"<boolean>\",\n  \"conflictDetectionInterval\": \"EVERY_6_HOURS\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/settings/tenant",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"settings",
														"tenant"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "transactions",
					"item": [
						{
							"name": "{transactionUid}",
							"item": [
								{
									"name": "Get Transaction",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/transactions/:transactionUid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"transactions",
												":transactionUid"
											],
											"variable": [
												{
													"key": "transactionUid",
													"value": "<uuid>",
													"description": "(Required) "
												}
											]
										},
										"description": "Get information of an in-progress CDO transaction. A CDO transaction is an entity used to monitor progress of, and provide feedback on, long-running operations. All asynchronous operations in CDO's API create CDO transactions."
									},
									"response": [
										{
											"name": "CDO Transaction that has completed, either successfully or unsuccessfully. Note: failed CDO Transactions do not roll back.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/transactions/:transactionUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"transactions",
														":transactionUid"
													],
													"variable": [
														{
															"key": "transactionUid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
										},
										{
											"name": "CDO Transaction that is in progress",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/transactions/:transactionUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"transactions",
														":transactionUid"
													],
													"variable": [
														{
															"key": "transactionUid"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"tenantUid\": \"<uuid>\",\n  \"sortKey\": \"<string>\",\n  \"transactionUid\": \"<uuid>\",\n  \"entityUid\": \"<uuid>\",\n  \"entityUrl\": \"<string>\",\n  \"transactionPollingUrl\": \"<string>\",\n  \"submissionTime\": \"<dateTime>\",\n  \"lastUpdatedTime\": \"<dateTime>\",\n  \"transactionType\": \"MSP_ADD_USER_GROUPS_TO_TENANT\",\n  \"cdoTransactionStatus\": \"IN_PROGRESS\",\n  \"transactionDetails\": {\n    \"minimc5\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": {\n    \"fugiat8cd\": \"<string>\"\n  },\n  \"expireAt\": \"<long>\"\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/transactions/:transactionUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"transactions",
														":transactionUid"
													],
													"variable": [
														{
															"key": "transactionUid"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/transactions/:transactionUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"transactions",
														":transactionUid"
													],
													"variable": [
														{
															"key": "transactionUid"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/transactions/:transactionUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"transactions",
														":transactionUid"
													],
													"variable": [
														{
															"key": "transactionUid"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Entity not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/transactions/:transactionUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"transactions",
														":transactionUid"
													],
													"variable": [
														{
															"key": "transactionUid"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/transactions/:transactionUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"transactions",
														":transactionUid"
													],
													"variable": [
														{
															"key": "transactionUid"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "tenants",
					"item": [
						{
							"name": "{tenantUid}",
							"item": [
								{
									"name": "Get Tenant",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/tenants/:tenantUid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"tenants",
												":tenantUid"
											],
											"variable": [
												{
													"key": "tenantUid",
													"value": "<uuid>",
													"description": "(Required) The unique identifier of the tenant in CDO."
												}
											]
										},
										"description": "Fetch a tenant by UID in CDO. This will return a 200 response only if the user is associated with the tenant."
									},
									"response": [
										{
											"name": "Tenant Object",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/tenants/:tenantUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"tenants",
														":tenantUid"
													],
													"variable": [
														{
															"key": "tenantUid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"uid\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"securityCloudControlEnterpriseId\": \"<uuid>\",\n  \"displayName\": \"<string>\",\n  \"payType\": \"PARTNER\"\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/tenants/:tenantUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"tenants",
														":tenantUid"
													],
													"variable": [
														{
															"key": "tenantUid"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/tenants/:tenantUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"tenants",
														":tenantUid"
													],
													"variable": [
														{
															"key": "tenantUid"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/tenants/:tenantUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"tenants",
														":tenantUid"
													],
													"variable": [
														{
															"key": "tenantUid"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Entity not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/tenants/:tenantUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"tenants",
														":tenantUid"
													],
													"variable": [
														{
															"key": "tenantUid"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/tenants/:tenantUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"tenants",
														":tenantUid"
													],
													"variable": [
														{
															"key": "tenantUid"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Tenants",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/tenants?limit=50&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"tenants"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "The number of results to retrieve."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
										}
									]
								},
								"description": "Get a list of tenants with which the CDO user is associated."
							},
							"response": [
								{
									"name": "List of Tenant Objects",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/tenants?limit=50&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"tenants"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<integer>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"items\": [\n    {\n      \"uid\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"securityCloudControlEnterpriseId\": \"<uuid>\",\n      \"displayName\": \"<string>\",\n      \"payType\": \"PARTNER\"\n    },\n    {\n      \"uid\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"securityCloudControlEnterpriseId\": \"<uuid>\",\n      \"displayName\": \"<string>\",\n      \"payType\": \"PAYING\"\n    }\n  ]\n}"
								},
								{
									"name": "Invalid input provided. Check the response for details.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/tenants?limit=50&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"tenants"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Request not authorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/tenants?limit=50&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"tenants"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
								},
								{
									"name": "User does not have sufficient privileges to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/tenants?limit=50&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"tenants"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/tenants?limit=50&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"tenants"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "regions",
					"item": [
						{
							"name": "Get CDO Regions",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/regions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"regions"
									]
								},
								"description": "Get the list of regions that CDO is deployed in."
							},
							"response": [
								{
									"name": "List of CDO regions",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/regions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"regions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"domain\": \"<string>\",\n      \"apiDomain\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"domain\": \"<string>\",\n      \"apiDomain\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/regions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"regions"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "mfaevents",
					"item": [
						{
							"name": "{mfaEventUid}",
							"item": [
								{
									"name": "Get MFA Event",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/mfaevents/:mfaEventUid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"mfaevents",
												":mfaEventUid"
											],
											"variable": [
												{
													"key": "mfaEventUid",
													"value": "<uuid>",
													"description": "(Required) The unique identifier of the MFA event in CDO."
												}
											]
										},
										"description": "Get a MFA event by UID in the CDO tenant."
									},
									"response": [
										{
											"name": "MFA Event object",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/mfaevents/:mfaEventUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mfaevents",
														":mfaEventUid"
													],
													"variable": [
														{
															"key": "mfaEventUid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"uid\": \"<uuid>\",\n  \"username\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"application\": \"<string>\",\n  \"result\": \"GRANTED\",\n  \"reason\": \"<string>\",\n  \"secondFactor\": \"<string>\",\n  \"clientDevice\": {\n    \"uid\": \"<uuid>\",\n    \"location\": {\n      \"city\": \"<string>\",\n      \"subdivision\": \"<string>\",\n      \"country\": \"<string>\"\n    },\n    \"ipAddress\": \"<string>\",\n    \"passwordSet\": \"<boolean>\",\n    \"encrypted\": \"<boolean>\",\n    \"firewalled\": \"<boolean>\",\n    \"os\": {\n      \"type\": \"<string>\",\n      \"version\": \"<string>\"\n    },\n    \"browser\": {\n      \"name\": \"<string>\",\n      \"version\": \"<string>\"\n    }\n  }\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/mfaevents/:mfaEventUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mfaevents",
														":mfaEventUid"
													],
													"variable": [
														{
															"key": "mfaEventUid"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/mfaevents/:mfaEventUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mfaevents",
														":mfaEventUid"
													],
													"variable": [
														{
															"key": "mfaEventUid"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/mfaevents/:mfaEventUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mfaevents",
														":mfaEventUid"
													],
													"variable": [
														{
															"key": "mfaEventUid"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Entity not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/mfaevents/:mfaEventUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mfaevents",
														":mfaEventUid"
													],
													"variable": [
														{
															"key": "mfaEventUid"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Method not allowed.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/mfaevents/:mfaEventUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mfaevents",
														":mfaEventUid"
													],
													"variable": [
														{
															"key": "mfaEventUid"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/mfaevents/:mfaEventUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mfaevents",
														":mfaEventUid"
													],
													"variable": [
														{
															"key": "mfaEventUid"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get MFA Events",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/mfaevents?limit=50&offset=0&q=<string>&sort=<string>&sort=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"mfaevents"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "The number of results to retrieve."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
										},
										{
											"key": "q",
											"value": "<string>",
											"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
										},
										{
											"key": "sort",
											"value": "<string>",
											"description": "The fields to sort results by."
										},
										{
											"key": "sort",
											"value": "<string>",
											"description": "The fields to sort results by."
										}
									]
								},
								"description": "Get a list of MFA events."
							},
							"response": [
								{
									"name": "List of MFA events",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/mfaevents?limit=50&offset=0&q=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"mfaevents"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<integer>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"items\": [\n    {\n      \"uid\": \"<uuid>\",\n      \"username\": \"<string>\",\n      \"timestamp\": \"<dateTime>\",\n      \"application\": \"<string>\",\n      \"result\": \"DENIED\",\n      \"reason\": \"<string>\",\n      \"secondFactor\": \"<string>\",\n      \"clientDevice\": {\n        \"uid\": \"<uuid>\",\n        \"location\": {\n          \"city\": \"<string>\",\n          \"subdivision\": \"<string>\",\n          \"country\": \"<string>\"\n        },\n        \"ipAddress\": \"<string>\",\n        \"passwordSet\": \"<boolean>\",\n        \"encrypted\": \"<boolean>\",\n        \"firewalled\": \"<boolean>\",\n        \"os\": {\n          \"type\": \"<string>\",\n          \"version\": \"<string>\"\n        },\n        \"browser\": {\n          \"name\": \"<string>\",\n          \"version\": \"<string>\"\n        }\n      }\n    },\n    {\n      \"uid\": \"<uuid>\",\n      \"username\": \"<string>\",\n      \"timestamp\": \"<dateTime>\",\n      \"application\": \"<string>\",\n      \"result\": \"DENIED\",\n      \"reason\": \"<string>\",\n      \"secondFactor\": \"<string>\",\n      \"clientDevice\": {\n        \"uid\": \"<uuid>\",\n        \"location\": {\n          \"city\": \"<string>\",\n          \"subdivision\": \"<string>\",\n          \"country\": \"<string>\"\n        },\n        \"ipAddress\": \"<string>\",\n        \"passwordSet\": \"<boolean>\",\n        \"encrypted\": \"<boolean>\",\n        \"firewalled\": \"<boolean>\",\n        \"os\": {\n          \"type\": \"<string>\",\n          \"version\": \"<string>\"\n        },\n        \"browser\": {\n          \"name\": \"<string>\",\n          \"version\": \"<string>\"\n        }\n      }\n    }\n  ]\n}"
								},
								{
									"name": "Invalid input provided. Check the response for details.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/mfaevents?limit=50&offset=0&q=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"mfaevents"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Request not authorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/mfaevents?limit=50&offset=0&q=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"mfaevents"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
								},
								{
									"name": "User does not have sufficient privileges to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/mfaevents?limit=50&offset=0&q=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"mfaevents"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Method not allowed.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/mfaevents?limit=50&offset=0&q=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"mfaevents"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/mfaevents?limit=50&offset=0&q=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"mfaevents"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "meta",
					"item": [
						{
							"name": "Get Meta information",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/meta",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"meta"
									]
								},
								"description": "Get Meta information about CDO, including the IP addresses of CDO services."
							},
							"response": [
								{
									"name": "Meta information about CDO.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/meta",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"meta"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"cloudConnectorIps\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/meta",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"meta"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "features",
					"item": [
						{
							"name": "Get Feature Flags",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/features",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"features"
									]
								},
								"description": "Get the feature flags enabled in the CDO tenant."
							},
							"response": [
								{
									"name": "Set of feature flags that are enabled for the user's tenant.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/features",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"features"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
								},
								{
									"name": "Request not authorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/features",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"features"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/features",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"features"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "changelogs",
					"item": [
						{
							"name": "{changelogUid}",
							"item": [
								{
									"name": "Get Change Log",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/changelogs/:changelogUid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"changelogs",
												":changelogUid"
											],
											"variable": [
												{
													"key": "changelogUid",
													"value": "<uuid>",
													"description": "(Required) The unique identifier of the changelog in CDO."
												}
											]
										},
										"description": "Get a specific Change Log object by UID in the CDO tenant."
									},
									"response": [
										{
											"name": "Change Log objects",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/changelogs/:changelogUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"changelogs",
														":changelogUid"
													],
													"variable": [
														{
															"key": "changelogUid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"uid\": \"<uuid>\",\n  \"status\": \"ACTIVE\",\n  \"entityUid\": \"<uuid>\",\n  \"events\": [\n    {\n      \"description\": \"<string>\",\n      \"diff\": \"<string>\",\n      \"username\": \"<string>\",\n      \"date\": \"<dateTime>\",\n      \"action\": \"DELETE\",\n      \"changeRequestUid\": \"<uuid>\",\n      \"changeRequestName\": \"<string>\"\n    },\n    {\n      \"description\": \"<string>\",\n      \"diff\": \"<string>\",\n      \"username\": \"<string>\",\n      \"date\": \"<dateTime>\",\n      \"action\": \"ERROR\",\n      \"changeRequestUid\": \"<uuid>\",\n      \"changeRequestName\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/changelogs/:changelogUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"changelogs",
														":changelogUid"
													],
													"variable": [
														{
															"key": "changelogUid"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/changelogs/:changelogUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"changelogs",
														":changelogUid"
													],
													"variable": [
														{
															"key": "changelogUid"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/changelogs/:changelogUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"changelogs",
														":changelogUid"
													],
													"variable": [
														{
															"key": "changelogUid"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Method not allowed.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/changelogs/:changelogUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"changelogs",
														":changelogUid"
													],
													"variable": [
														{
															"key": "changelogUid"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/changelogs/:changelogUid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"changelogs",
														":changelogUid"
													],
													"variable": [
														{
															"key": "changelogUid"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Change Logs",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/changelogs?limit=50&offset=0&searchText=<string>&q=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"changelogs"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "The number of results to retrieve."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
										},
										{
											"key": "searchText",
											"value": "<string>",
											"description": "The searchText parameter serves as a flexible search option that allows for text-based filtering across all fields of the Change Log object. This parameter can be used independently to search for entries containing the specified text, or in combination with the q query parameter for more targeted results. When used with q, the search conditions of searchText are logically ANDed with the q parameter's criteria, ensuring that the returned entries satisfy both sets of conditions."
										},
										{
											"key": "q",
											"value": "<string>",
											"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
										}
									]
								},
								"description": "Get a list of Change Logs in the CDO tenant."
							},
							"response": [
								{
									"name": "List of Change Log objects",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/changelogs?limit=50&offset=0&searchText=<string>&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"changelogs"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "searchText",
													"value": "<string>",
													"description": "The searchText parameter serves as a flexible search option that allows for text-based filtering across all fields of the Change Log object. This parameter can be used independently to search for entries containing the specified text, or in combination with the q query parameter for more targeted results. When used with q, the search conditions of searchText are logically ANDed with the q parameter's criteria, ensuring that the returned entries satisfy both sets of conditions."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<integer>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"items\": [\n    {\n      \"uid\": \"<uuid>\",\n      \"status\": \"ACTIVE\",\n      \"entityUid\": \"<uuid>\",\n      \"events\": [\n        {\n          \"description\": \"<string>\",\n          \"diff\": \"<string>\",\n          \"username\": \"<string>\",\n          \"date\": \"<dateTime>\",\n          \"action\": \"DELETE\",\n          \"changeRequestUid\": \"<uuid>\",\n          \"changeRequestName\": \"<string>\"\n        },\n        {\n          \"description\": \"<string>\",\n          \"diff\": \"<string>\",\n          \"username\": \"<string>\",\n          \"date\": \"<dateTime>\",\n          \"action\": \"UNKNOWN\",\n          \"changeRequestUid\": \"<uuid>\",\n          \"changeRequestName\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"uid\": \"<uuid>\",\n      \"status\": \"ACTIVE\",\n      \"entityUid\": \"<uuid>\",\n      \"events\": [\n        {\n          \"description\": \"<string>\",\n          \"diff\": \"<string>\",\n          \"username\": \"<string>\",\n          \"date\": \"<dateTime>\",\n          \"action\": \"CREATE\",\n          \"changeRequestUid\": \"<uuid>\",\n          \"changeRequestName\": \"<string>\"\n        },\n        {\n          \"description\": \"<string>\",\n          \"diff\": \"<string>\",\n          \"username\": \"<string>\",\n          \"date\": \"<dateTime>\",\n          \"action\": \"UPDATE\",\n          \"changeRequestUid\": \"<uuid>\",\n          \"changeRequestName\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "Invalid input provided. Check the response for details.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/changelogs?limit=50&offset=0&searchText=<string>&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"changelogs"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "searchText",
													"value": "<string>",
													"description": "The searchText parameter serves as a flexible search option that allows for text-based filtering across all fields of the Change Log object. This parameter can be used independently to search for entries containing the specified text, or in combination with the q query parameter for more targeted results. When used with q, the search conditions of searchText are logically ANDed with the q parameter's criteria, ensuring that the returned entries satisfy both sets of conditions."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Request not authorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/changelogs?limit=50&offset=0&searchText=<string>&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"changelogs"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "searchText",
													"value": "<string>",
													"description": "The searchText parameter serves as a flexible search option that allows for text-based filtering across all fields of the Change Log object. This parameter can be used independently to search for entries containing the specified text, or in combination with the q query parameter for more targeted results. When used with q, the search conditions of searchText are logically ANDed with the q parameter's criteria, ensuring that the returned entries satisfy both sets of conditions."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
								},
								{
									"name": "User does not have sufficient privileges to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/changelogs?limit=50&offset=0&searchText=<string>&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"changelogs"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "searchText",
													"value": "<string>",
													"description": "The searchText parameter serves as a flexible search option that allows for text-based filtering across all fields of the Change Log object. This parameter can be used independently to search for entries containing the specified text, or in combination with the q query parameter for more targeted results. When used with q, the search conditions of searchText are logically ANDed with the q parameter's criteria, ensuring that the returned entries satisfy both sets of conditions."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Method not allowed.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/changelogs?limit=50&offset=0&searchText=<string>&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"changelogs"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "searchText",
													"value": "<string>",
													"description": "The searchText parameter serves as a flexible search option that allows for text-based filtering across all fields of the Change Log object. This parameter can be used independently to search for entries containing the specified text, or in combination with the q query parameter for more targeted results. When used with q, the search conditions of searchText are logically ANDed with the q parameter's criteria, ensuring that the returned entries satisfy both sets of conditions."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/changelogs?limit=50&offset=0&searchText=<string>&q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"changelogs"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "searchText",
													"value": "<string>",
													"description": "The searchText parameter serves as a flexible search option that allows for text-based filtering across all fields of the Change Log object. This parameter can be used independently to search for entries containing the specified text, or in combination with the q query parameter for more targeted results. When used with q, the search conditions of searchText are logically ANDed with the q parameter's criteria, ensuring that the returned entries satisfy both sets of conditions."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "auditlogs",
					"item": [
						{
							"name": "Get Audit Logs",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/auditlogs?limit=50&offset=0&searchText=<string>&q=<string>&sort=<string>&sort=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"auditlogs"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "The number of results to retrieve."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
										},
										{
											"key": "searchText",
											"value": "<string>",
											"description": "The searchText parameter serves as a flexible search option that allows for text-based filtering across the username fields of the Audit Log object. This parameter can be used independently to search for entries containing the specified text, or in combination with the q query parameter for more targeted results. When used with q, the search conditions of searchText are logically ANDed with the q parameter's criteria, ensuring that the returned entries satisfy both sets of conditions."
										},
										{
											"key": "q",
											"value": "<string>",
											"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
										},
										{
											"key": "sort",
											"value": "<string>",
											"description": "The fields to sort results by."
										},
										{
											"key": "sort",
											"value": "<string>",
											"description": "The fields to sort results by."
										}
									]
								},
								"description": "Get a list of Audit Logs."
							},
							"response": [
								{
									"name": "List of Audit Logs objects",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/auditlogs?limit=50&offset=0&searchText=<string>&q=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"auditlogs"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "searchText",
													"value": "<string>",
													"description": "The searchText parameter serves as a flexible search option that allows for text-based filtering across the username fields of the Audit Log object. This parameter can be used independently to search for entries containing the specified text, or in combination with the q query parameter for more targeted results. When used with q, the search conditions of searchText are logically ANDed with the q parameter's criteria, ensuring that the returned entries satisfy both sets of conditions."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<integer>\",\n  \"limit\": \"<integer>\",\n  \"offset\": \"<integer>\",\n  \"items\": [\n    {\n      \"uid\": \"<uuid>\",\n      \"eventType\": \"USER_LOGIN_DATA\",\n      \"username\": \"<string>\",\n      \"eventDescription\": \"<string>\",\n      \"eventTime\": \"<dateTime>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"uid\": \"<uuid>\",\n      \"eventType\": \"USER_LOGIN_DATA\",\n      \"username\": \"<string>\",\n      \"eventDescription\": \"<string>\",\n      \"eventTime\": \"<dateTime>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "Invalid input provided. Check the response for details.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/auditlogs?limit=50&offset=0&searchText=<string>&q=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"auditlogs"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "searchText",
													"value": "<string>",
													"description": "The searchText parameter serves as a flexible search option that allows for text-based filtering across the username fields of the Audit Log object. This parameter can be used independently to search for entries containing the specified text, or in combination with the q query parameter for more targeted results. When used with q, the search conditions of searchText are logically ANDed with the q parameter's criteria, ensuring that the returned entries satisfy both sets of conditions."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Request not authorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/auditlogs?limit=50&offset=0&searchText=<string>&q=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"auditlogs"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "searchText",
													"value": "<string>",
													"description": "The searchText parameter serves as a flexible search option that allows for text-based filtering across the username fields of the Audit Log object. This parameter can be used independently to search for entries containing the specified text, or in combination with the q query parameter for more targeted results. When used with q, the search conditions of searchText are logically ANDed with the q parameter's criteria, ensuring that the returned entries satisfy both sets of conditions."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
								},
								{
									"name": "User does not have sufficient privileges to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/auditlogs?limit=50&offset=0&searchText=<string>&q=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"auditlogs"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "searchText",
													"value": "<string>",
													"description": "The searchText parameter serves as a flexible search option that allows for text-based filtering across the username fields of the Audit Log object. This parameter can be used independently to search for entries containing the specified text, or in combination with the q query parameter for more targeted results. When used with q, the search conditions of searchText are logically ANDed with the q parameter's criteria, ensuring that the returned entries satisfy both sets of conditions."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Method not allowed.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/auditlogs?limit=50&offset=0&searchText=<string>&q=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"auditlogs"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "searchText",
													"value": "<string>",
													"description": "The searchText parameter serves as a flexible search option that allows for text-based filtering across the username fields of the Audit Log object. This parameter can be used independently to search for entries containing the specified text, or in combination with the q query parameter for more targeted results. When used with q, the search conditions of searchText are logically ANDed with the q parameter's criteria, ensuring that the returned entries satisfy both sets of conditions."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/auditlogs?limit=50&offset=0&searchText=<string>&q=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"auditlogs"
											],
											"query": [
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "searchText",
													"value": "<string>",
													"description": "The searchText parameter serves as a flexible search option that allows for text-based filtering across the username fields of the Audit Log object. This parameter can be used independently to search for entries containing the specified text, or in combination with the q query parameter for more targeted results. When used with q, the search conditions of searchText are logically ANDed with the q parameter's criteria, ensuring that the returned entries satisfy both sets of conditions."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "objects",
					"item": [
						{
							"name": "{uid}",
							"item": [
								{
									"name": "targets",
									"item": [
										{
											"name": "Create Targets",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"targetsUuids\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/objects/:uid/targets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"objects",
														":uid",
														"targets"
													],
													"variable": [
														{
															"key": "uid",
															"value": "<uuid>",
															"description": "(Required) the unique identifier of the object for which the targets are being added to."
														}
													]
												},
												"description": "Create targets for an object in the CDO tenant."
											},
											"response": [
												{
													"name": "No content",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"targetsUuids\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/objects/:uid/targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																":uid",
																"targets"
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"targetsUuids\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/objects/:uid/targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																":uid",
																"targets"
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"targetsUuids\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/objects/:uid/targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																":uid",
																"targets"
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"targetsUuids\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/objects/:uid/targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																":uid",
																"targets"
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"targetsUuids\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/objects/:uid/targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																":uid",
																"targets"
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"targetsUuids\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/objects/:uid/targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																":uid",
																"targets"
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										},
										{
											"name": "Delete Targets",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/objects/:uid/targets?targetUuids=<string>&targetUuids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"objects",
														":uid",
														"targets"
													],
													"query": [
														{
															"key": "targetUuids",
															"value": "<string>",
															"description": "(Required) The list of UIDs of the targets being removed."
														},
														{
															"key": "targetUuids",
															"value": "<string>",
															"description": "(Required) The list of UIDs of the targets being removed."
														}
													],
													"variable": [
														{
															"key": "uid",
															"value": "<uuid>",
															"description": "(Required) the unique identifier of the object for which the targets are being removed from."
														}
													]
												},
												"description": "Delete targets from an object in the CDO tenant."
											},
											"response": [
												{
													"name": "No content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/objects/:uid/targets?targetUuids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																":uid",
																"targets"
															],
															"query": [
																{
																	"key": "targetUuids",
																	"value": "<string>",
																	"description": "(Required) The list of UIDs of the targets being removed."
																}
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/objects/:uid/targets?targetUuids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																":uid",
																"targets"
															],
															"query": [
																{
																	"key": "targetUuids",
																	"value": "<string>",
																	"description": "(Required) The list of UIDs of the targets being removed."
																}
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/objects/:uid/targets?targetUuids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																":uid",
																"targets"
															],
															"query": [
																{
																	"key": "targetUuids",
																	"value": "<string>",
																	"description": "(Required) The list of UIDs of the targets being removed."
																}
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/objects/:uid/targets?targetUuids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																":uid",
																"targets"
															],
															"query": [
																{
																	"key": "targetUuids",
																	"value": "<string>",
																	"description": "(Required) The list of UIDs of the targets being removed."
																}
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/objects/:uid/targets?targetUuids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																":uid",
																"targets"
															],
															"query": [
																{
																	"key": "targetUuids",
																	"value": "<string>",
																	"description": "(Required) The list of UIDs of the targets being removed."
																}
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/objects/:uid/targets?targetUuids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																":uid",
																"targets"
															],
															"query": [
																{
																	"key": "targetUuids",
																	"value": "<string>",
																	"description": "(Required) The list of UIDs of the targets being removed."
																}
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "usage",
									"item": [
										{
											"name": "Get Object Usages",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/objects/:uid/usage",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"objects",
														":uid",
														"usage"
													],
													"variable": [
														{
															"key": "uid",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the object to retrieve usages for."
														}
													]
												},
												"description": "Get usages of an object in the CDO tenant."
											},
											"response": [
												{
													"name": "A descriptive representation of the created CDO object.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/objects/:uid/usage",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																":uid",
																"usage"
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"uid\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"objectType\": \"URL_GROUP\"\n  },\n  {\n    \"uid\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"objectType\": \"URL_OBJECT\"\n  }\n]"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/objects/:uid/usage",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																":uid",
																"usage"
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/objects/:uid/usage",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																":uid",
																"usage"
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/objects/:uid/usage",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																":uid",
																"usage"
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/objects/:uid/usage",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																":uid",
																"usage"
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "duplicates",
									"item": [
										{
											"name": "Get Duplicate Objects",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/objects/:uid/duplicates?targetUid=<uuid>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"objects",
														":uid",
														"duplicates"
													],
													"query": [
														{
															"key": "targetUid",
															"value": "<uuid>",
															"description": "(Required) the unique identifier of the target to restrict the duplicate search to."
														}
													],
													"variable": [
														{
															"key": "uid",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the object to retrieve duplicates for."
														}
													]
												},
												"description": "Get objects in the CDO tenant that are duplicates of the given object."
											},
											"response": [
												{
													"name": "Duplicates of the object.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/objects/:uid/duplicates?targetUid=<uuid>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																":uid",
																"duplicates"
															],
															"query": [
																{
																	"key": "targetUid",
																	"value": "<uuid>",
																	"description": "(Required) the unique identifier of the target to restrict the duplicate search to."
																}
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"targetUid\": \"<uuid>\",\n    \"unifiedObjectUids\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ]\n  },\n  {\n    \"targetUid\": \"<uuid>\",\n    \"unifiedObjectUids\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ]\n  }\n]"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/objects/:uid/duplicates?targetUid=<uuid>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																":uid",
																"duplicates"
															],
															"query": [
																{
																	"key": "targetUid",
																	"value": "<uuid>",
																	"description": "(Required) the unique identifier of the target to restrict the duplicate search to."
																}
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/objects/:uid/duplicates?targetUid=<uuid>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																":uid",
																"duplicates"
															],
															"query": [
																{
																	"key": "targetUid",
																	"value": "<uuid>",
																	"description": "(Required) the unique identifier of the target to restrict the duplicate search to."
																}
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/objects/:uid/duplicates?targetUid=<uuid>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																":uid",
																"duplicates"
															],
															"query": [
																{
																	"key": "targetUid",
																	"value": "<uuid>",
																	"description": "(Required) the unique identifier of the target to restrict the duplicate search to."
																}
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/objects/:uid/duplicates?targetUid=<uuid>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																":uid",
																"duplicates"
															],
															"query": [
																{
																	"key": "targetUid",
																	"value": "<uuid>",
																	"description": "(Required) the unique identifier of the target to restrict the duplicate search to."
																}
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Object",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/objects/:uid?fields=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"objects",
												":uid"
											],
											"query": [
												{
													"key": "fields",
													"value": "<string>",
													"description": "The scope of the fields to be retrieved. One of [\"@basic\", \"@detailed\"]. Defaults to \"@basic\"."
												}
											],
											"variable": [
												{
													"key": "uid",
													"value": "<uuid>",
													"description": "(Required) The unique identifier of the object being retrieved."
												}
											]
										},
										"description": "Gets an object in the CDO tenant"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/objects/:uid?fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"objects",
														":uid"
													],
													"query": [
														{
															"key": "fields",
															"value": "<string>",
															"description": "The scope of the fields to be retrieved. One of [\"@basic\", \"@detailed\"]. Defaults to \"@basic\"."
														}
													],
													"variable": [
														{
															"key": "uid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"uid\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"value\": {\n    \"defaultContent\": {\n      \"protocol\": \"PNNI\",\n      \"serviceValue\": {\n        \"icmp4Type\": \"INFO_REQUEST\",\n        \"icmp4Code\": \"DECRYPTION_FAILED\"\n      }\n    },\n    \"objectType\": \"URL_GROUP\",\n    \"overrides\": [\n      {\n        \"content\": {\n          \"protocol\": \"RVD\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"INFO_REPLY\",\n            \"icmp4Code\": \"NEED_AUTHENTICATION\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      },\n      {\n        \"content\": {\n          \"protocol\": \"XNSIDP\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"PARAMETER_PROBLEM\",\n            \"icmp4Code\": \"REDIRECT_DATAGRAM_NETWORK\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      }\n    ]\n  },\n  \"description\": \"<string>\",\n  \"targets\": [\n    {\n      \"id\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"type\": \"ASA\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"type\": \"ASA\"\n    }\n  ],\n  \"elements\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"referencesInfoFromDefaultAndOverrides\": [\n    {\n      \"uid\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"objectType\": \"SERVICE_OBJECT\"\n    },\n    {\n      \"uid\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"objectType\": \"URL_GROUP\"\n    }\n  ],\n  \"tags\": {\n    \"aliquipe5\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"Lorem_fa\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quis_ed9\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"labels\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"issues\": {\n    \"unusedTargetIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"duplicateTargetIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/objects/:uid?fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"objects",
														":uid"
													],
													"query": [
														{
															"key": "fields",
															"value": "<string>",
															"description": "The scope of the fields to be retrieved. One of [\"@basic\", \"@detailed\"]. Defaults to \"@basic\"."
														}
													],
													"variable": [
														{
															"key": "uid"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/objects/:uid?fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"objects",
														":uid"
													],
													"query": [
														{
															"key": "fields",
															"value": "<string>",
															"description": "The scope of the fields to be retrieved. One of [\"@basic\", \"@detailed\"]. Defaults to \"@basic\"."
														}
													],
													"variable": [
														{
															"key": "uid"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/objects/:uid?fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"objects",
														":uid"
													],
													"query": [
														{
															"key": "fields",
															"value": "<string>",
															"description": "The scope of the fields to be retrieved. One of [\"@basic\", \"@detailed\"]. Defaults to \"@basic\"."
														}
													],
													"variable": [
														{
															"key": "uid"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/objects/:uid?fields=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"objects",
														":uid"
													],
													"query": [
														{
															"key": "fields",
															"value": "<string>",
															"description": "The scope of the fields to be retrieved. One of [\"@basic\", \"@detailed\"]. Defaults to \"@basic\"."
														}
													],
													"variable": [
														{
															"key": "uid"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								},
								{
									"name": "Delete Object",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/objects/:uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"objects",
												":uid"
											],
											"variable": [
												{
													"key": "uid",
													"value": "<uuid>",
													"description": "(Required) The unique identifier of the object being deleted."
												}
											]
										},
										"description": "Delete an object in the CDO tenant"
									},
									"response": [
										{
											"name": "No content",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/objects/:uid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"objects",
														":uid"
													],
													"variable": [
														{
															"key": "uid"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/objects/:uid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"objects",
														":uid"
													],
													"variable": [
														{
															"key": "uid"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/objects/:uid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"objects",
														":uid"
													],
													"variable": [
														{
															"key": "uid"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/objects/:uid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"objects",
														":uid"
													],
													"variable": [
														{
															"key": "uid"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/objects/:uid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"objects",
														":uid"
													],
													"variable": [
														{
															"key": "uid"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								},
								{
									"name": "Modify Object",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"value\": {\n    \"defaultContent\": {\n      \"protocol\": \"PGM\",\n      \"serviceValue\": {\n        \"icmp4Type\": \"REDIRECT_MESSAGE\",\n        \"icmp4Code\": \"FRAGMENTATION_NEEDED\"\n      }\n    },\n    \"objectType\": \"SERVICE_OBJECT\",\n    \"overrides\": [\n      {\n        \"content\": {\n          \"protocol\": \"TLSP\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"ADDR_MASK_REPLY\",\n            \"icmp4Code\": \"COMMUNICATION_DEST_NET_PROHIBITED\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      },\n      {\n        \"content\": {\n          \"protocol\": \"IFMP\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"SKIP_ALGORITHM_DISCOVERY_PROTOCOL\",\n            \"icmp4Code\": \"FRAG_ASSEMBLY\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      }\n    ]\n  },\n  \"tags\": {\n    \"dolore4d\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"pariaturf6\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"labels\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/objects/:uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"objects",
												":uid"
											],
											"variable": [
												{
													"key": "uid",
													"value": "<uuid>",
													"description": "(Required) The unique identifier of the object being updated."
												}
											]
										},
										"description": "Modify an object in the CDO tenant"
									},
									"response": [
										{
											"name": "A descriptive representation of the updated CDO object.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"value\": {\n    \"defaultContent\": {\n      \"protocol\": \"PGM\",\n      \"serviceValue\": {\n        \"icmp4Type\": \"REDIRECT_MESSAGE\",\n        \"icmp4Code\": \"FRAGMENTATION_NEEDED\"\n      }\n    },\n    \"objectType\": \"SERVICE_OBJECT\",\n    \"overrides\": [\n      {\n        \"content\": {\n          \"protocol\": \"TLSP\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"ADDR_MASK_REPLY\",\n            \"icmp4Code\": \"COMMUNICATION_DEST_NET_PROHIBITED\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      },\n      {\n        \"content\": {\n          \"protocol\": \"IFMP\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"SKIP_ALGORITHM_DISCOVERY_PROTOCOL\",\n            \"icmp4Code\": \"FRAG_ASSEMBLY\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      }\n    ]\n  },\n  \"tags\": {\n    \"dolore4d\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"pariaturf6\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"labels\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/objects/:uid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"objects",
														":uid"
													],
													"variable": [
														{
															"key": "uid"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"uid\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"value\": {\n    \"defaultContent\": {\n      \"protocol\": \"PNNI\",\n      \"serviceValue\": {\n        \"icmp4Type\": \"INFO_REQUEST\",\n        \"icmp4Code\": \"DECRYPTION_FAILED\"\n      }\n    },\n    \"objectType\": \"URL_GROUP\",\n    \"overrides\": [\n      {\n        \"content\": {\n          \"protocol\": \"RVD\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"INFO_REPLY\",\n            \"icmp4Code\": \"NEED_AUTHENTICATION\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      },\n      {\n        \"content\": {\n          \"protocol\": \"XNSIDP\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"PARAMETER_PROBLEM\",\n            \"icmp4Code\": \"REDIRECT_DATAGRAM_NETWORK\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      }\n    ]\n  },\n  \"description\": \"<string>\",\n  \"targets\": [\n    {\n      \"id\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"type\": \"ASA\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"type\": \"ASA\"\n    }\n  ],\n  \"elements\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"referencesInfoFromDefaultAndOverrides\": [\n    {\n      \"uid\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"objectType\": \"SERVICE_OBJECT\"\n    },\n    {\n      \"uid\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"objectType\": \"URL_GROUP\"\n    }\n  ],\n  \"tags\": {\n    \"aliquipe5\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"Lorem_fa\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quis_ed9\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"labels\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"issues\": {\n    \"unusedTargetIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"duplicateTargetIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"value\": {\n    \"defaultContent\": {\n      \"protocol\": \"PGM\",\n      \"serviceValue\": {\n        \"icmp4Type\": \"REDIRECT_MESSAGE\",\n        \"icmp4Code\": \"FRAGMENTATION_NEEDED\"\n      }\n    },\n    \"objectType\": \"SERVICE_OBJECT\",\n    \"overrides\": [\n      {\n        \"content\": {\n          \"protocol\": \"TLSP\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"ADDR_MASK_REPLY\",\n            \"icmp4Code\": \"COMMUNICATION_DEST_NET_PROHIBITED\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      },\n      {\n        \"content\": {\n          \"protocol\": \"IFMP\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"SKIP_ALGORITHM_DISCOVERY_PROTOCOL\",\n            \"icmp4Code\": \"FRAG_ASSEMBLY\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      }\n    ]\n  },\n  \"tags\": {\n    \"dolore4d\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"pariaturf6\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"labels\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/objects/:uid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"objects",
														":uid"
													],
													"variable": [
														{
															"key": "uid"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"value\": {\n    \"defaultContent\": {\n      \"protocol\": \"PGM\",\n      \"serviceValue\": {\n        \"icmp4Type\": \"REDIRECT_MESSAGE\",\n        \"icmp4Code\": \"FRAGMENTATION_NEEDED\"\n      }\n    },\n    \"objectType\": \"SERVICE_OBJECT\",\n    \"overrides\": [\n      {\n        \"content\": {\n          \"protocol\": \"TLSP\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"ADDR_MASK_REPLY\",\n            \"icmp4Code\": \"COMMUNICATION_DEST_NET_PROHIBITED\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      },\n      {\n        \"content\": {\n          \"protocol\": \"IFMP\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"SKIP_ALGORITHM_DISCOVERY_PROTOCOL\",\n            \"icmp4Code\": \"FRAG_ASSEMBLY\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      }\n    ]\n  },\n  \"tags\": {\n    \"dolore4d\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"pariaturf6\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"labels\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/objects/:uid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"objects",
														":uid"
													],
													"variable": [
														{
															"key": "uid"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"value\": {\n    \"defaultContent\": {\n      \"protocol\": \"PGM\",\n      \"serviceValue\": {\n        \"icmp4Type\": \"REDIRECT_MESSAGE\",\n        \"icmp4Code\": \"FRAGMENTATION_NEEDED\"\n      }\n    },\n    \"objectType\": \"SERVICE_OBJECT\",\n    \"overrides\": [\n      {\n        \"content\": {\n          \"protocol\": \"TLSP\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"ADDR_MASK_REPLY\",\n            \"icmp4Code\": \"COMMUNICATION_DEST_NET_PROHIBITED\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      },\n      {\n        \"content\": {\n          \"protocol\": \"IFMP\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"SKIP_ALGORITHM_DISCOVERY_PROTOCOL\",\n            \"icmp4Code\": \"FRAG_ASSEMBLY\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      }\n    ]\n  },\n  \"tags\": {\n    \"dolore4d\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"pariaturf6\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"labels\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/objects/:uid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"objects",
														":uid"
													],
													"variable": [
														{
															"key": "uid"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"value\": {\n    \"defaultContent\": {\n      \"protocol\": \"PGM\",\n      \"serviceValue\": {\n        \"icmp4Type\": \"REDIRECT_MESSAGE\",\n        \"icmp4Code\": \"FRAGMENTATION_NEEDED\"\n      }\n    },\n    \"objectType\": \"SERVICE_OBJECT\",\n    \"overrides\": [\n      {\n        \"content\": {\n          \"protocol\": \"TLSP\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"ADDR_MASK_REPLY\",\n            \"icmp4Code\": \"COMMUNICATION_DEST_NET_PROHIBITED\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      },\n      {\n        \"content\": {\n          \"protocol\": \"IFMP\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"SKIP_ALGORITHM_DISCOVERY_PROTOCOL\",\n            \"icmp4Code\": \"FRAG_ASSEMBLY\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      }\n    ]\n  },\n  \"tags\": {\n    \"dolore4d\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"pariaturf6\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"labels\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/objects/:uid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"objects",
														":uid"
													],
													"variable": [
														{
															"key": "uid"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "overrides",
							"item": [
								{
									"name": "{uid}",
									"item": [
										{
											"name": "Get Override Object With Values For Specific Target",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/objects/overrides/:uid?targetUid=<uuid>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"objects",
														"overrides",
														":uid"
													],
													"query": [
														{
															"key": "targetUid",
															"value": "<uuid>",
															"description": "(Required) The target UID to calculate values for."
														}
													],
													"variable": [
														{
															"key": "uid",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the object being retrieved."
														}
													]
												},
												"description": "Gets an object in the CDO tenant with values for specific target uid"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/objects/overrides/:uid?targetUid=<uuid>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																"overrides",
																":uid"
															],
															"query": [
																{
																	"key": "targetUid",
																	"value": "<uuid>",
																	"description": "(Required) The target UID to calculate values for."
																}
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"uid\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"value\": {\n    \"defaultContent\": {\n      \"protocol\": \"PNNI\",\n      \"serviceValue\": {\n        \"icmp4Type\": \"INFO_REQUEST\",\n        \"icmp4Code\": \"DECRYPTION_FAILED\"\n      }\n    },\n    \"objectType\": \"URL_GROUP\",\n    \"overrides\": [\n      {\n        \"content\": {\n          \"protocol\": \"RVD\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"INFO_REPLY\",\n            \"icmp4Code\": \"NEED_AUTHENTICATION\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      },\n      {\n        \"content\": {\n          \"protocol\": \"XNSIDP\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"PARAMETER_PROBLEM\",\n            \"icmp4Code\": \"REDIRECT_DATAGRAM_NETWORK\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      }\n    ]\n  },\n  \"description\": \"<string>\",\n  \"targets\": [\n    {\n      \"id\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"type\": \"ASA\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"type\": \"ASA\"\n    }\n  ],\n  \"elements\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"referencesInfoFromDefaultAndOverrides\": [\n    {\n      \"uid\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"objectType\": \"SERVICE_OBJECT\"\n    },\n    {\n      \"uid\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"objectType\": \"URL_GROUP\"\n    }\n  ],\n  \"tags\": {\n    \"aliquipe5\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"Lorem_fa\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quis_ed9\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"labels\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"issues\": {\n    \"unusedTargetIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"duplicateTargetIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
												},
												{
													"name": "Invalid input provided. Check the response for details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/objects/overrides/:uid?targetUid=<uuid>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																"overrides",
																":uid"
															],
															"query": [
																{
																	"key": "targetUid",
																	"value": "<uuid>",
																	"description": "(Required) The target UID to calculate values for."
																}
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Request not authorized.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/objects/overrides/:uid?targetUid=<uuid>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																"overrides",
																":uid"
															],
															"query": [
																{
																	"key": "targetUid",
																	"value": "<uuid>",
																	"description": "(Required) The target UID to calculate values for."
																}
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
												},
												{
													"name": "User does not have sufficient privileges to perform this operation.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/objects/overrides/:uid?targetUid=<uuid>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																"overrides",
																":uid"
															],
															"query": [
																{
																	"key": "targetUid",
																	"value": "<uuid>",
																	"description": "(Required) The target UID to calculate values for."
																}
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												},
												{
													"name": "Internal server error.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/objects/overrides/:uid?targetUid=<uuid>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"objects",
																"overrides",
																":uid"
															],
															"query": [
																{
																	"key": "targetUid",
																	"value": "<uuid>",
																	"description": "(Required) The target UID to calculate values for."
																}
															],
															"variable": [
																{
																	"key": "uid"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "issues-count",
							"item": [
								{
									"name": "Get Issues Count",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/objects/issues-count?q=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"objects",
												"issues-count"
											],
											"query": [
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query. Possible fields to search by are name, content."
												}
											]
										},
										"description": "Get issues count in the CDO tenant."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/objects/issues-count?q=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"objects",
														"issues-count"
													],
													"query": [
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query. Possible fields to search by are name, content."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalObjects\": \"<long>\",\n  \"unAssociated\": \"<long>\",\n  \"unUseds\": \"<long>\",\n  \"duplicates\": \"<long>\"\n}"
										},
										{
											"name": "Invalid input provided. Check the response for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/objects/issues-count?q=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"objects",
														"issues-count"
													],
													"query": [
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query. Possible fields to search by are name, content."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Request not authorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/objects/issues-count?q=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"objects",
														"issues-count"
													],
													"query": [
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query. Possible fields to search by are name, content."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
										},
										{
											"name": "User does not have sufficient privileges to perform this operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/objects/issues-count?q=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"objects",
														"issues-count"
													],
													"query": [
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query. Possible fields to search by are name, content."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/objects/issues-count?q=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"objects",
														"issues-count"
													],
													"query": [
														{
															"key": "q",
															"value": "<string>",
															"description": "The query to execute. Use the Lucene Query Syntax to construct your query. Possible fields to search by are name, content."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Objects",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/objects?q=<string>&includeOverrides=false&offset=0&limit=50&sortBy=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"objects"
									],
									"query": [
										{
											"key": "q",
											"value": "<string>",
											"description": "The query to execute. Use the Lucene Query Syntax to construct your query. Possible fields to search by are name, content."
										},
										{
											"key": "includeOverrides",
											"value": "false",
											"description": "If enabled, the search will also include results from override objects."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
										},
										{
											"key": "limit",
											"value": "50",
											"description": "The number of results to retrieve."
										},
										{
											"key": "sortBy",
											"value": "<string>",
											"description": "The fields to sort results by."
										}
									]
								},
								"description": "Get objects in the CDO tenant."
							},
							"response": [
								{
									"name": "A paginated view of the CDO objects.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/objects?q=<string>&includeOverrides=false&offset=0&limit=50&sortBy=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"objects"
											],
											"query": [
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query. Possible fields to search by are name, content."
												},
												{
													"key": "includeOverrides",
													"value": "false",
													"description": "If enabled, the search will also include results from override objects."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "sortBy",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"items\": [\n    {\n      \"uid\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"value\": {\n        \"defaultContent\": {\n          \"protocol\": \"SRP\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"PARAMETER_PROBLEM\",\n            \"icmp4Code\": \"FRAGMENTATION_NEEDED\"\n          }\n        },\n        \"objectType\": \"SERVICE_OBJECT\",\n        \"overrides\": [\n          {\n            \"content\": {\n              \"protocol\": \"QNX\",\n              \"serviceValue\": {\n                \"icmp4Type\": \"PHOTURIS\",\n                \"icmp4Code\": \"FRAGMENTATION_NEEDED\"\n              }\n            },\n            \"targetId\": \"<string>\"\n          },\n          {\n            \"content\": {\n              \"protocol\": \"ICMP4\",\n              \"serviceValue\": {\n                \"icmp4Type\": \"SOURCE_QUENCH\",\n                \"icmp4Code\": \"HOST_PRECEDENCE_VIOLATION\"\n              }\n            },\n            \"targetId\": \"<string>\"\n          }\n        ]\n      },\n      \"targetIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"overrideIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"tags\": {\n        \"non_e\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"labels\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"issues\": {\n        \"unusedTargetIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"duplicateTargetIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"uid\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"value\": {\n        \"defaultContent\": {\n          \"protocol\": \"PUP\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"INFO_REPLY\",\n            \"icmp4Code\": \"COMMUNICATION_DEST_HOST_PROHIBITED\"\n          }\n        },\n        \"objectType\": \"NETWORK_GROUP\",\n        \"overrides\": [\n          {\n            \"content\": {\n              \"protocol\": \"PTP\",\n              \"serviceValue\": {\n                \"icmp4Type\": \"MOBILE_REG_REQUEST\",\n                \"icmp4Code\": \"DEST_HOST_UNREACHABLE_FOR_TOS\"\n              }\n            },\n            \"targetId\": \"<string>\"\n          },\n          {\n            \"content\": {\n              \"protocol\": \"IL\",\n              \"serviceValue\": {\n                \"icmp4Type\": \"TIMESTAMP\",\n                \"icmp4Code\": \"DO_NOT_ROUTE_COMMON_TRAFFIC\"\n              }\n            },\n            \"targetId\": \"<string>\"\n          }\n        ]\n      },\n      \"targetIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"overrideIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"tags\": {\n        \"est_09_\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"labels\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"issues\": {\n        \"unusedTargetIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"duplicateTargetIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ]\n}"
								},
								{
									"name": "Invalid input provided. Check the response for details.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/objects?q=<string>&includeOverrides=false&offset=0&limit=50&sortBy=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"objects"
											],
											"query": [
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query. Possible fields to search by are name, content."
												},
												{
													"key": "includeOverrides",
													"value": "false",
													"description": "If enabled, the search will also include results from override objects."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "sortBy",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Request not authorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/objects?q=<string>&includeOverrides=false&offset=0&limit=50&sortBy=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"objects"
											],
											"query": [
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query. Possible fields to search by are name, content."
												},
												{
													"key": "includeOverrides",
													"value": "false",
													"description": "If enabled, the search will also include results from override objects."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "sortBy",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
								},
								{
									"name": "User does not have sufficient privileges to perform this operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/objects?q=<string>&includeOverrides=false&offset=0&limit=50&sortBy=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"objects"
											],
											"query": [
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query. Possible fields to search by are name, content."
												},
												{
													"key": "includeOverrides",
													"value": "false",
													"description": "If enabled, the search will also include results from override objects."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "sortBy",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/objects?q=<string>&includeOverrides=false&offset=0&limit=50&sortBy=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"objects"
											],
											"query": [
												{
													"key": "q",
													"value": "<string>",
													"description": "The query to execute. Use the Lucene Query Syntax to construct your query. Possible fields to search by are name, content."
												},
												{
													"key": "includeOverrides",
													"value": "false",
													"description": "If enabled, the search will also include results from override objects."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified."
												},
												{
													"key": "limit",
													"value": "50",
													"description": "The number of results to retrieve."
												},
												{
													"key": "sortBy",
													"value": "<string>",
													"description": "The fields to sort results by."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								}
							]
						},
						{
							"name": "Create Object",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"value\": {\n    \"defaultContent\": {\n      \"protocol\": \"NVP2\",\n      \"serviceValue\": {\n        \"icmp4Type\": \"ADDR_MASK_REQUEST\",\n        \"icmp4Code\": \"DEST_NETWORK_UNKNOWN\"\n      }\n    },\n    \"objectType\": \"URL_GROUP\",\n    \"overrides\": [\n      {\n        \"content\": {\n          \"protocol\": \"SATEXPAK\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"SKIP_ALGORITHM_DISCOVERY_PROTOCOL\",\n            \"icmp4Code\": \"PRECEDENCE_CUTOFF\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      },\n      {\n        \"content\": {\n          \"protocol\": \"SCTP\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"DOMAIN_NAME_REQUEST\",\n            \"icmp4Code\": \"DECRYPTION_FAILED\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      }\n    ]\n  },\n  \"description\": \"<string>\",\n  \"targetIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tags\": {\n    \"incd2\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"Loreme\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"labels\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/objects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"objects"
									]
								},
								"description": "Create an object in the CDO tenant."
							},
							"response": [
								{
									"name": "A descriptive representation of the created CDO object.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"value\": {\n    \"defaultContent\": {\n      \"protocol\": \"NVP2\",\n      \"serviceValue\": {\n        \"icmp4Type\": \"ADDR_MASK_REQUEST\",\n        \"icmp4Code\": \"DEST_NETWORK_UNKNOWN\"\n      }\n    },\n    \"objectType\": \"URL_GROUP\",\n    \"overrides\": [\n      {\n        \"content\": {\n          \"protocol\": \"SATEXPAK\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"SKIP_ALGORITHM_DISCOVERY_PROTOCOL\",\n            \"icmp4Code\": \"PRECEDENCE_CUTOFF\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      },\n      {\n        \"content\": {\n          \"protocol\": \"SCTP\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"DOMAIN_NAME_REQUEST\",\n            \"icmp4Code\": \"DECRYPTION_FAILED\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      }\n    ]\n  },\n  \"description\": \"<string>\",\n  \"targetIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tags\": {\n    \"incd2\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"Loreme\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"labels\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/objects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"objects"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"uid\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"value\": {\n    \"defaultContent\": {\n      \"protocol\": \"PNNI\",\n      \"serviceValue\": {\n        \"icmp4Type\": \"INFO_REQUEST\",\n        \"icmp4Code\": \"DECRYPTION_FAILED\"\n      }\n    },\n    \"objectType\": \"URL_GROUP\",\n    \"overrides\": [\n      {\n        \"content\": {\n          \"protocol\": \"RVD\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"INFO_REPLY\",\n            \"icmp4Code\": \"NEED_AUTHENTICATION\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      },\n      {\n        \"content\": {\n          \"protocol\": \"XNSIDP\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"PARAMETER_PROBLEM\",\n            \"icmp4Code\": \"REDIRECT_DATAGRAM_NETWORK\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      }\n    ]\n  },\n  \"description\": \"<string>\",\n  \"targets\": [\n    {\n      \"id\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"type\": \"ASA\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"type\": \"ASA\"\n    }\n  ],\n  \"elements\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"referencesInfoFromDefaultAndOverrides\": [\n    {\n      \"uid\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"objectType\": \"SERVICE_OBJECT\"\n    },\n    {\n      \"uid\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"objectType\": \"URL_GROUP\"\n    }\n  ],\n  \"tags\": {\n    \"aliquipe5\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"Lorem_fa\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"quis_ed9\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"labels\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"issues\": {\n    \"unusedTargetIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"duplicateTargetIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
								},
								{
									"name": "Invalid input provided. Check the response for details.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"value\": {\n    \"defaultContent\": {\n      \"protocol\": \"NVP2\",\n      \"serviceValue\": {\n        \"icmp4Type\": \"ADDR_MASK_REQUEST\",\n        \"icmp4Code\": \"DEST_NETWORK_UNKNOWN\"\n      }\n    },\n    \"objectType\": \"URL_GROUP\",\n    \"overrides\": [\n      {\n        \"content\": {\n          \"protocol\": \"SATEXPAK\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"SKIP_ALGORITHM_DISCOVERY_PROTOCOL\",\n            \"icmp4Code\": \"PRECEDENCE_CUTOFF\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      },\n      {\n        \"content\": {\n          \"protocol\": \"SCTP\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"DOMAIN_NAME_REQUEST\",\n            \"icmp4Code\": \"DECRYPTION_FAILED\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      }\n    ]\n  },\n  \"description\": \"<string>\",\n  \"targetIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tags\": {\n    \"incd2\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"Loreme\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"labels\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/objects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"objects"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Request not authorized.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"value\": {\n    \"defaultContent\": {\n      \"protocol\": \"NVP2\",\n      \"serviceValue\": {\n        \"icmp4Type\": \"ADDR_MASK_REQUEST\",\n        \"icmp4Code\": \"DEST_NETWORK_UNKNOWN\"\n      }\n    },\n    \"objectType\": \"URL_GROUP\",\n    \"overrides\": [\n      {\n        \"content\": {\n          \"protocol\": \"SATEXPAK\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"SKIP_ALGORITHM_DISCOVERY_PROTOCOL\",\n            \"icmp4Code\": \"PRECEDENCE_CUTOFF\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      },\n      {\n        \"content\": {\n          \"protocol\": \"SCTP\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"DOMAIN_NAME_REQUEST\",\n            \"icmp4Code\": \"DECRYPTION_FAILED\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      }\n    ]\n  },\n  \"description\": \"<string>\",\n  \"targetIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tags\": {\n    \"incd2\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"Loreme\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"labels\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/objects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"objects"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"errorDescription\": \"<string>\"\n}"
								},
								{
									"name": "User does not have sufficient privileges to perform this operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"value\": {\n    \"defaultContent\": {\n      \"protocol\": \"NVP2\",\n      \"serviceValue\": {\n        \"icmp4Type\": \"ADDR_MASK_REQUEST\",\n        \"icmp4Code\": \"DEST_NETWORK_UNKNOWN\"\n      }\n    },\n    \"objectType\": \"URL_GROUP\",\n    \"overrides\": [\n      {\n        \"content\": {\n          \"protocol\": \"SATEXPAK\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"SKIP_ALGORITHM_DISCOVERY_PROTOCOL\",\n            \"icmp4Code\": \"PRECEDENCE_CUTOFF\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      },\n      {\n        \"content\": {\n          \"protocol\": \"SCTP\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"DOMAIN_NAME_REQUEST\",\n            \"icmp4Code\": \"DECRYPTION_FAILED\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      }\n    ]\n  },\n  \"description\": \"<string>\",\n  \"targetIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tags\": {\n    \"incd2\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"Loreme\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"labels\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/objects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"objects"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"value\": {\n    \"defaultContent\": {\n      \"protocol\": \"NVP2\",\n      \"serviceValue\": {\n        \"icmp4Type\": \"ADDR_MASK_REQUEST\",\n        \"icmp4Code\": \"DEST_NETWORK_UNKNOWN\"\n      }\n    },\n    \"objectType\": \"URL_GROUP\",\n    \"overrides\": [\n      {\n        \"content\": {\n          \"protocol\": \"SATEXPAK\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"SKIP_ALGORITHM_DISCOVERY_PROTOCOL\",\n            \"icmp4Code\": \"PRECEDENCE_CUTOFF\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      },\n      {\n        \"content\": {\n          \"protocol\": \"SCTP\",\n          \"serviceValue\": {\n            \"icmp4Type\": \"DOMAIN_NAME_REQUEST\",\n            \"icmp4Code\": \"DECRYPTION_FAILED\"\n          }\n        },\n        \"targetId\": \"<string>\"\n      }\n    ]\n  },\n  \"description\": \"<string>\",\n  \"targetIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tags\": {\n    \"incd2\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"Loreme\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"labels\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/objects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"objects"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"CANNOT_DELETE_ONPREM_FMC_MANAGED_FIREPOWER\",\n  \"errorMsg\": \"<string>\",\n  \"details\": {\n    \"eiusmod4\": {},\n    \"minim3\": {}\n  }\n}"
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{api_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "hostname",
			"value": "",
			"type": "string"
		},
		{
			"key": "api_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "object_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "baseUrl",
			"value": "https://edge.us.cdo.cisco.com/api/rest",
			"type": "string"
		}
	]
}